#autorun
{func
   freeze_bones
   ($dir)
   {$dir
      iterate_self
      CharClip
      $clip
      {do
         ($bones
            {array 0})
         {switch
            {$clip get_type}
            ((guitar_body drum_body)
               {if
                  {==
                     {&
                        {$clip get flags}
                        1}
                     0}
                  {insert_elems
                     $bones
                     0
                     (bone_L-hand.pos bone_L-hand.quat bone_L-index01.quat bone_L-index02.rotz bone_L-index03.rotz bone_L-middlefinger01.quat bone_L-middlefinger02.rotz bone_L-middlefinger03.rotz bone_L-pinky01.quat bone_L-pinky02.rotz bone_L-pinky03.rotz bone_L-ringfinger01.quat bone_L-ringfinger02.rotz bone_L-ringfinger03.rotz bone_L_thumb01.quat bone_L_thumb02.rotz bone_L_thumb03.rotz)}}
               {if
                  {==
                     {&
                        {$clip get flags}
                        2}
                     0}
                  {insert_elems
                     $bones
                     0
                     (bone_R-hand.pos bone_R-hand.quat bone_R-index01.quat bone_R-index02.rotz bone_R-index03.rotz bone_R-middlefinger01.quat bone_R-middlefinger02.rotz bone_R-middlefinger03.rotz bone_R-pinky01.quat bone_R-pinky02.rotz bone_R-pinky03.rotz bone_R-ringfinger01.quat bone_R-ringfinger02.rotz bone_R-ringfinger03.rotz bone_R_thumb01.quat bone_R_thumb02.rotz bone_R_thumb03.rotz)}})
            (extras
               {if
                  0
                  {insert_elems
                     $bones
                     0
                     (bone_L-ankle.quat bone_L-knee.rotz bone_L-thigh.quat bone_L-toe.rotz bone_R-ankle.quat bone_R-knee.rotz bone_R-thigh.quat bone_R-toe.rotz)}}
               {insert_elems
                  $bones
                  0
                  (bone_L-brow1.pos bone_L-brow2.pos bone_L-brow3.pos bone_L-cheek.pos bone_L-cheek2.pos bone_L-crease.pos bone_L-eyelid-low.pos bone_L-lid.pos bone_L-lid.quat bone_L-lipcorner.pos bone_L-nose.pos bone_R-brow1.pos bone_R-brow2.pos bone_R-brow3.pos bone_R-cheek.pos bone_R-cheek2.pos bone_R-crease.pos bone_R-eyelid-low.pos bone_R-lid.pos bone_R-lid.quat bone_R-lipcorner.pos bone_R-nose.pos bone_brow-low.pos bone_brow-mid.pos bone_chin.pos bone_chin.quat bone_eyes.pos bone_eyes.quat bone_forehead.pos bone_forehead.quat bone_jaw.pos bone_jaw.quat bone_liptop_left.pos bone_liptop_left.quat bone_liptop_mid.pos bone_liptop_mid.quat bone_liptop_right.pos bone_liptop_right.quat bone_lowlip_left.pos bone_lowlip_left.quat bone_lowlip_mid.pos bone_lowlip_mid.quat bone_lowlip_right.pos bone_lowlip_right.quat bone_nose.pos bone_nose.quat bone_tongue1.pos bone_tongue1.quat bone_tongue2.pos bone_tongue2.quat bone_tongue3.pos bone_tongue3.quat bone_tongue4.pos bone_tongue4.quat)})}
         {if
            {size $bones}
            {$clip freeze_bones $bones}}}}}
#define MAIN_BODY_COMPRESSION
((tolerance 6.0)
   (bones
      (bone_R-ankle.mesh
         (weight 0.85))
      (bone_L-ankle.mesh
         (weight 0.85))
      (bone_R-hand.mesh)
      (bone_L-hand.mesh)
      (bone_L-index03.mesh)
      (bone_L-middlefinger03.mesh)
      (bone_L-ringfinger03.mesh)
      (bone_L-pinky03.mesh)
      (bone_L-thumb03.mesh)
      (bone_R-index03.mesh)
      (bone_R-middlefinger03.mesh)
      (bone_R-ringfinger03.mesh)
      (bone_R-pinky03.mesh)
      (bone_R-thumb03.mesh)
      (bone_head.mesh
         (weight 1.5)
         (offset 3 6 0))
      (bone_head.mesh
         (weight 1.5)
         (offset -2 6 0))
      (bone_footik.mesh
         (weight 2))))
#define EXTRAS_COMPRESSION
((tolerance 6.0)
   (bones
      (bone_R-ankle.mesh
         (weight 0.85))
      (bone_L-ankle.mesh
         (weight 0.85))
      (bone_R-hand.mesh)
      (bone_L-hand.mesh)
      (bone_L-index03.mesh)
      (bone_L-middlefinger03.mesh)
      (bone_L-ringfinger03.mesh)
      (bone_L-pinky03.mesh)
      (bone_L-thumb03.mesh)
      (bone_R-index03.mesh)
      (bone_R-middlefinger03.mesh)
      (bone_R-ringfinger03.mesh)
      (bone_R-pinky03.mesh)
      (bone_R-thumb03.mesh)
      (bone_head.mesh
         (weight 1.5)
         (offset 3 6 0))
      (bone_head.mesh
         (weight 1.5)
         (offset -2 6 0))
      (bone_jaw.mesh)))
#define CROWD_COMPRESSION
((tolerance 8.0)
   (bones
      (bone_R-ankle.mesh
         (weight 0.85))
      (bone_L-ankle.mesh
         (weight 0.85))
      (bone_R-hand.mesh)
      (bone_L-hand.mesh)
      (bone_head.mesh
         (weight 1.5)
         (offset 3 6 0))
      (bone_head.mesh
         (weight 1.5)
         (offset -2 6 0))))
#autorun
{func
   process_clips
   ($dir)
   {if
      {$dir is_a CharClipSet}
      {do
         ($path
            {$dir get_path_name})
         {print
            "loading "
            $path
            "\n"}
         {set
            $loaded_dir
            {load_objects $path}}
         {search_replace
            $path
            "anim_src/"
            ""
            $path}
         {$dir perforce_sync $path}
         {freeze_bones $loaded_dir}
         {$loaded_dir
            iterate_self
            CharClip
            $c
            {$c
               set_note
               ""}
            {$c change_compression 2}}
         {if_else
            {has_substr
               $path
               "/body/"}
            {set
               $comparray
               (MAIN_BODY_COMPRESSION)}
            {if_else
               {has_substr
                  $path
                  "/dircut/"}
               {set
                  $comparray
                  (MAIN_BODY_COMPRESSION)}
               {if_else
                  {has_substr
                     $path
                     "/world/vignette/"}
                  {set
                     $comparray
                     (MAIN_BODY_COMPRESSION)}
                  {if_else
                     {has_substr
                        $path
                        "/crowd/"}
                     {set
                        $comparray
                        (CROWD_COMPRESSION)}
                     {if_else
                        {has_substr
                           $path
                           "/extras/"}
                        {set
                           $comparray
                           (EXTRAS_COMPRESSION)}
                        {set $comparray 0}}}}}}
         {if
            $comparray
            {char_compress_clips $loaded_dir $comparray 4 1}}
         {if_else
            {has_substr
               $path
               "/world/vignette/"}
            {do
               {set
                  $non_animsrc_dir
                  {load_objects $path}}
               {if_else
                  $non_animsrc_dir
                  {do
                     {merge_dirs $loaded_dir $non_animsrc_dir 1 0}
                     {$non_animsrc_dir perforce_resave}}
                  {$loaded_dir perforce_save $path}}}
            {$loaded_dir perforce_save $path}}}}}
#autorun
{func
   process_single_clip
   ($dir $clip)
   {if
      {$dir is_a CharClipSet}
      {do
         ($path
            {$dir get_path_name})
         {search_replace
            $path
            "anim_src/"
            ""
            $path}
         {$dir perforce_sync $path}
         {set
            $dst_dir
            {load_objects $path}}
         {if
            {! $dst_dir}
            {$dir perforce_save $path 1}
            {set
               $dst_dir
               {load_objects $path}}}
         {if_else
            $dst_dir
            {do
               {if_else
                  $clip
                  {do
                     {set
                        $comparray
                        {switch
                           {$clip get_type}
                           ((guitar_body keyboard_body drum_body mic_body vignette)
                              (MAIN_BODY_COMPRESSION))
                           (crowd
                              (CROWD_COMPRESSION))
                           (extras
                              (EXTRAS_COMPRESSION))
                           0}}
                     {$clip
                        set_note
                        ""}
                     {$clip change_compression 2}
                     {if
                        $comparray
                        {char_compress_single_clip $clip $comparray 4}}
                     {set
                        $old_clip
                        {$dst_dir
                           find
                           {$clip name}}}
                     {print
                        "$old_clip: "
                        $old_clip
                        " in "
                        $dst_dir
                        "\n"}
                     {set
                        $groups
                        {$clip groups}}
                     {if_else
                        $old_clip
                        {do
                           {delete $old_clip}
                           {$clip
                              set_name
                              {$clip name}
                              $dst_dir}}
                        {$clip
                           set_name
                           {$clip name}
                           $dst_dir}}
                     {foreach
                        $group
                        $groups
                        {create_clipgroup_and_addclip
                           {$group name}
                           $dst_dir
                           $clip}}
                     {print
                        "saving out to "
                        $path
                        "\n"}
                     {$dst_dir perforce_save $path}}
                  {print
                     "Couldn't find clip "
                     $clipname
                     " in "
                     $path
                     "\n"}}
               {delete $dst_dir}}
            {print
               "Couldn't create file "
               $path
               ".  Does the parent structure exist?\n"}}}}}
#autorun
{func
   create_clipgroup_and_addclip
   ($grpName $dir $clip)
   {set
      $clipGrp
      {$dir find $grpName}}
   {unless
      {&&
         $clipGrp
         {$clipGrp is_a CharClipGroup}}
      {set
         $clipGrp
         {new CharClipGroup}}
      {$clipGrp set_name $grpName $dir}
      {print
         "adding group "
         $grpName}}
   {unless
      {$clipGrp has_clip $clip}
      {$clipGrp add_clip $clip}}}