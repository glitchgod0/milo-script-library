{new TrainerChallenge
   guitar_deploy_challenge
   (enter
      {set [has_deployed] 0}
      {{beatmatch active_player 0} set_mercuryswitchenabled 1}
      {{beatmatch active_player 0} add_sink $this}
   )
   (exit {{beatmatch active_player 0} remove_sink $this})
   (deploy {set [has_deployed] 1})
   (success [has_deployed])
   (restriction_token guitar_deploy_challenge)
   (has_deployed 0)
}
{new TrainerChallenge
   guitar_whammy_challenge
   (enter
      {set [whammied] 0}
      {set [whammy_count] 0}
      {{beatmatch active_player 0} add_sink $this}
   )
   (exit {{beatmatch active_player 0} remove_sink $this})
   (whammy_start {set [whammied] 1} 1)
   (held_note_released_callback
      ($fraction)
      {if {== $fraction 1.0}
         {if [whammied]
            {'++' [whammy_count]}
         }
      }
      {set [whammied] 0}
   )
   (hit {set [whammied] 0})
   (miss {set [whammied] 0})
   (pass {set [whammied] 0})
   (success {>= [whammy_count] [whammies_needed]})
   (restriction_token guitar_whammy_challenge)
   (whammied 0)
   (whammy_count 0)
   (whammies_needed 2)
}
{new TrainerChallenge
   guitar_bre_challenge
   (enter
      {set [has_hit_bre] 0}
      {{beatmatch active_player 0} add_sink $this}
   )
   (exit {{beatmatch active_player 0} remove_sink $this})
   (finished_coda {set [has_hit_bre] 1})
   (success [has_hit_bre])
   (restriction_token guitar_bre_challenge)
   (has_hit_bre 0)
}
{new TrainerChallenge
   guitar_alternating_strum_challenge
   (enter
      {set [has_hit] 0}
      {set [has_alternated] 1}
      {{beatmatch active_player 0} add_sink $this}
   )
   (exit {{beatmatch active_player 0} remove_sink $this})
   (hit
      ($gem_id $hit_flags)
      {if_else [has_hit]
         {do
            ($up {$this is_up_strum $hit_flags})
            {if_else {== [up_strum] $up}
               {set [has_alternated] 0}
               {set [up_strum] $up}
            }
         }
         {do
            {set [has_hit] 1}
            {set [up_strum] {$this is_up_strum $hit_flags}}
         }
      }
   )
   (is_up_strum
      ($hit_flags)
      {!= 0 {& $hit_flags 8}}
   )
   (success [has_alternated])
   (restriction_token guitar_alternating_strum_challenge)
   (has_hit 1)
   (up_strum 0)
   (has_alternated 1)
}
{new TrainerChallenge
   guitar_strum_challenge
   (enter
      {set [strum_count] 0}
      {set [up_strum] 0}
      {set [failed] 0}
      {{beatmatch active_player 0} add_sink $this}
   )
   (exit {{beatmatch active_player 0} remove_sink $this})
   (hit
      ($gem_id $hit_flags)
      {if_else {== [up_strum] {$this is_up_strum $hit_flags}}
         {do
            {'++' [strum_count]}
            {if {== [strum_count] [num_to_strum]}
               {set [up_strum] {! [up_strum]}}
               {set [strum_count] 0}
            }
         }
         {do
            {set [failed] 1}
         }
      }
   )
   (is_up_strum
      ($hit_flags)
      {!= 0 {& $hit_flags 8}}
   )
   (success {! [failed]})
   (restriction_token guitar_strum_challenge)
   (strum_count 0)
   (up_strum 0)
   (failed 0)
   (num_to_strum 4)
}
{new TrainerChallenge
   guitar_high_frets_challenge
   (enter
      {set [failed] 0}
      {{beatmatch active_player 0} add_sink $this}
   )
   (exit {{beatmatch active_player 0} remove_sink $this})
   (hit
      ($gem_id $hit_flags)
      {if {! {$this is_high_frets $hit_flags}}
         {set [failed] 1}
      }
   )
   (is_high_frets
      ($hit_flags)
      {!= 0 {& $hit_flags 2}}
   )
   (success {! [failed]})
   (restriction_token guitar_high_frets_challenge)
   (failed 0)
}
{new TrainerChallenge
   guitar_hopo_all_challenge
   (enter
      {set [failed] 0}
      {{beatmatch active_player 0} add_sink $this}
   )
   (exit {{beatmatch active_player 0} remove_sink $this})
   (hit
      ($gem_id $hit_flags)
      {if {{beatmatch active_player 0} get_gem_is_no_strum $gem_id}
         {if {== 0 {& $hit_flags 1}}
            {set [failed] 1}
         }
      }
   )
   (success {! [failed]})
   (restriction_token guitar_hopo_all_challenge)
   (failed 0)
}
{new TrainerChallenge
   guitar_trill_all_challenge
   (enter
      {set [failed] 0}
      {{beatmatch active_player 0} add_sink $this}
   )
   (exit {{beatmatch active_player 0} remove_sink $this})
   (check_trill
      ($gem_id)
      {if {{beatmatch active_player 0} in_trill $gem_id}
         {set [failed] 1}
      }
   )
   (miss
      ($user $slot $gem_id)
      {$this check_trill $gem_id}
   )
   (pass
      ($gem_id)
      {$this check_trill $gem_id}
   )
   (success {! [failed]})
   (restriction_token guitar_trill_all_challenge)
   (failed 0)
}