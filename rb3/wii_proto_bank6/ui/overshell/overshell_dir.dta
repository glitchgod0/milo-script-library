(OvershellDir
   (editor
      (platform
         symbol
         (list
            (xbox ps3 wii))
         (post_sync
            {$this
               set_platform
               [platform]})
         (no_test))
      (controller_type
         symbol
         (list
            (guitar bass drum vocals))
         (post_sync
            {switch
               [controller_type]
               (guitar
                  {$this
                     update_controller_type
                     1
                     "G"
                     ""})
               (bass
                  {$this
                     update_controller_type
                     1
                     "B"
                     ""})
               (drum
                  {$this
                     update_controller_type
                     0
                     "D"
                     ""})
               (vocals
                  {$this
                     update_controller_type
                     2
                     "V"
                     ""})})
         (no_test))
      (online_enabled
         bool
         (post_sync
            {$this
               update_online_enabled
               [online_enabled]})
         (no_test))
      (is_local
         bool
         (post_sync
            {$this
               update_local_status
               [is_local]})
         (no_test))
      (pad_num
         int
         (post_sync
            {$this
               update_pad_num
               [pad_num]})
         (no_test))
      (in_track_mode
         bool
         (no_test))
      (slot_view
         symbol
         (list
            (no_instrument sign_in finding join connect_mic options options_in_game choose_profile choose_char online_options joined_default choose_part_guitar choose_part_vocals choose_part_drum choose_part_real_guitar choose_part_keys choose_diff cancel_song ready_to_play confirm_action remote_status choose_cymbals auto_sign_in_sony auto_sign_in_rock_central sign_in_to_register sign_in_wait registering_online hidden block_all_input game_options options_av_settings options_audio options_vocal options_extras modifiers song_options_in_game kick_users mute_users gamercard_users invite_friends)
            sort)
         (no_test))
      (button_pulse_joined
         script
         (script
            {$this button_pulse_joined}))
      (button_pulse_unjoined
         script
         (script
            {$this button_pulse_unjoined})))
   (types
      (overshell_slot
         (get_native_platform
            #ifdef HX_XBOX
            xbox
            #endif
            #ifdef HX_PS3
            ps3
            #endif
            #ifdef HX_PC
            ps3
            #endif
            #ifdef HX_WII
            wii
            #endif)
         (init
            {$this setup_static_lists}
            {$this setup_game_options_list 5}
            #ifdef HX_WII
            {$this setup_wiiprofile_options_list}
            #endif
            {$this
               set_platform
               {$this get_native_platform}})
         (enter
            {$this init})
         (setup_providers
            ($char_provider $kick_provider $mute_provider $gamercard_provider $profiles_provider $invite_provider $part_select_provider $cymbal_provider $modifier_provider)
            {chars.lst set_provider $char_provider}
            {kick_users.lst set_provider $kick_provider}
            {mute_users.lst set_provider $mute_provider}
            {gamercard_users.lst set_provider $gamercard_provider}
            #ifdef HX_WII
            {profiles_wii.lst set_provider $profiles_provider}
            #else
            {profiles.lst set_provider $profiles_provider}
            #endif
            {invite_friends.lst set_provider $invite_provider}
            {choose_part_guitar.lst set_provider $part_select_provider}
            {choose_part_real_guitar.lst set_provider $part_select_provider}
            {choose_part_vocals.lst set_provider $part_select_provider}
            {choose_part_keys.lst set_provider $part_select_provider}
            {choose_part_drum.lst set_provider $part_select_provider}
            {choose_cymbals.lst set_provider $cymbal_provider}
            {modifiers.lst set_provider $modifier_provider})
         (setup_static_lists
            {options.lst
               set_data
               (overshell_return
                  overshell_online_options
                  #ifdef HX_WII
                  overshell_wiiprofile_options
                  #endif
                  overshell_change_character
                  overshell_game_options
                  overshell_leave)}
            {options_in_game.lst
               set_data
               (overshell_return overshell_song_options_in_game overshell_online_options overshell_game_options overshell_quit overshell_leave)}
            {song_options_in_game.lst
               set_data
               (overshell_restart overshell_change_diff overshell_skip_song)}
            {choose_diff.lst
               set_data
               (overshell_easy overshell_medium overshell_hard overshell_expert)}
            {confirm_action.lst
               set_data
               (overshell_confirm_yes overshell_confirm_no)}
            {cancel_song.lst
               set_data
               (overshell_confirm_yes overshell_confirm_no)}
            {profile_options.lst
               set_data
               (overshell_continue_without_profile overshell_sign_in)}
            {sign_in_to_register.lst
               set_data
               (overshell_sign_in_continue overshell_sign_in overshell_sign_in_cancel)}
            {auto_sign_in_sony.lst
               set_data
               (overshell_sign_in_retry overshell_sign_in_cancel)}
            {auto_sign_in_rock_central.lst
               set_data
               (overshell_sign_in_cancel)}
            {options_av_settings.lst
               set_data
               (overshell_dolby overshell_bass_boost overshell_overscan overshell_calibration overshell_audio_options)}
            {options_audio.lst
               set_data
               (overshell_audio_instruments
                  overshell_audio_bg_music
                  overshell_audio_crowd
                  overshell_audio_sfx
                  #ifdef HX_PS3
                  overshell_audio_voice_chat
                  #endif
                  overshell_vocal_options)}
            {options_vocal.lst
               set_data
               (overshell_vocal_track_vol overshell_vocal_mic_vol overshell_vocal_player1_sens overshell_vocal_player2_sens overshell_vocal_player3_sens)}
            {options_extras.lst
               set_data
               (overshell_credits overshell_audition)})
         (setup_online_options_list
            ($platform)
            {do
               ($options
                  {array 0})
               {push_back $options overshell_invite}
               {if
                  {== $platform xbox}
                  {push_back $options overshell_invite_xbox_party}}
               {if
                  {== $platform ps3}
                  {push_back $options overshell_check_invites}}
               {push_back $options overshell_kick}
               {push_back
                  $options
                  {if_else
                     {== $platform xbox}
                     overshell_gamercard
                     overshell_mute}}
               {push_back $options overshell_disconnect}
               {online_options.lst set_data $options}})
         (setup_game_options_list
            ($controller_type)
            {do
               ($options
                  {array 0})
               {push_back $options overshell_no_fail}
               {push_back $options overshell_av_settings}
               {switch
                  $controller_type
                  ((0 1 4)
                     {push_back $options overshell_lefty_flip})
                  (2
                     {push_back $options overshell_vocals_mode_static})
                  {if
                     $edit_mode
                     {push_back $options milo_lefty_static}}}
               {push_back $options overshell_extras}
               {push_back $options overshell_modifiers}
               #ifdef HX_WII
               {push_back $options overshell_wiispeak_options}
               #endif
               #ifdef HX_PC
               {push_back $options overshell_wiispeak_options}
               #endif
               {push_back $options overshell_cymbal_configuration}
               {game_options.lst set_data $options}})
         #ifdef HX_WII
         (setup_wiiprofile_options_list
            {do
               ($options
                  {array 0})
               {push_back $options overshell_wiiprofile_register}
               {push_back $options overshell_wiiprofile_switch}
               {push_back $options overshell_wiiprofile_create}
               {push_back $options overshell_wiiprofile_delete}
               {wiiprofile_options.lst set_data $options}})
         #endif
         (conceal_all_lists
            {$this
               iterate
               BandList
               $list
               {$list conceal}})
         (set_platform
            ($platform)
            {$this setup_online_options_list $platform}
            {switch
               $platform
               (xbox
                  {xbox.trg trigger})
               (ps3
                  {ps3.trg trigger})
               (wii
                  {wii.trg trigger})})
         (show_view
            ($view $in_track_mode)
            {do
               ($menubig_list
                  (auto_sign_in_rock_central.lst auto_sign_in_sony.lst cancel_song.lst choose_diff.lst confirm_action.lst sign_in_to_register.lst))
               ($menu_list
                  (choose_cymbals.lst game_options.lst online_options.lst options.lst options_in_game.lst profile_options.lst profiles.lst song_options_in_game.lst))
               ($part_select_list
                  (choose_part_drum.lst choose_part_guitar.lst choose_part_keys.lst choose_part_real_guitar.lst choose_part_vocals.lst))
               ($users_list
                  (gamercard_users.lst kick_users.lst mute_users.lst))
               ($friends_list
                  (invite_friends.lst))
               ($modifiers_list
                  (modifiers.lst))
               {if
                  {! $in_track_mode}
                  {shell_mode.trg trigger}
                  {foreach
                     $list
                     $menubig_list
                     {$list set_type overshell_menubig}
                     {$list refresh}}
                  {foreach
                     $list
                     $menu_list
                     {$list set_type overshell_menu}
                     {$list refresh}}
                  {foreach
                     $list
                     $part_select_list
                     {$list set_type overshell_part_select}
                     {$list refresh}}
                  {foreach
                     $list
                     $users_list
                     {$list set_type overshell_users}
                     {$list refresh}}
                  {foreach
                     $list
                     $friends_list
                     {$list set_type overshell_friends}
                     {$list refresh}}
                  {foreach
                     $list
                     $modifiers_list
                     {$list set_type overshell_modifiers}
                     {$list refresh}}}
               #ifdef HX_WII
               {view_default_wii.trg trigger}
               #endif
               {view_default.trg trigger}
               {view_default.trg set_view_pos $this $in_track_mode}
               {$this conceal_all_lists}
               {do
                  ($trigger
                     {sprint
                        "view_"
                        $view
                        ".trg"})
                  {$trigger trigger}
                  {$trigger set_view_pos $this $in_track_mode}
                  {$this
                     set_focus
                     {$trigger get initial_focus}}}
               {if
                  $in_track_mode
                  {track_mode.trg trigger}
                  {foreach
                     $list
                     $menubig_list
                     {$list set_type overshell_menubig_ingame}
                     {$list refresh}}
                  {foreach
                     $list
                     $menu_list
                     {$list set_type overshell_menu_ingame}
                     {$list refresh}}
                  {foreach
                     $list
                     $part_select_list
                     {$list set_type overshell_part_select_ingame}
                     {$list refresh}}
                  {foreach
                     $list
                     $users_list
                     {$list set_type overshell_users_ingame}
                     {$list refresh}}
                  {foreach
                     $list
                     $friends_list
                     {$list set_type overshell_friends_ingame}
                     {$list refresh}}}})
         (update_controller_type
            ($controller_type $controller_font_char $no_part_font_char)
            {slot_instrument_icon.lbl set icon $controller_font_char}
            {slot_no_part_icon.lbl set icon $no_part_font_char}
            {$this setup_game_options_list $controller_type})
         (update_sign_in_continue
            ($can_continue)
            {if_else
               $can_continue
               {sign_in_to_register.lst enable_data overshell_sign_in_continue}
               {sign_in_to_register.lst disable_data overshell_sign_in_continue}})
         (update_kick_allowed
            ($can_kick)
            {if_else
               $can_kick
               {online_options.lst enable_data overshell_kick}
               {online_options.lst disable_data overshell_kick}})
         (update_mute_allowed
            ($can_mute)
            {if_else
               $can_mute
               {online_options.lst enable_data overshell_mute}
               {online_options.lst disable_data overshell_mute}})
         (update_invites_allowed
            ($can_invite)
            {if_else
               $can_invite
               {online_options.lst enable_data overshell_invite}
               {online_options.lst disable_data overshell_invite}})
         (update_online_enabled
            ($enabled)
            {if_else
               $enabled
               {online_enable.trg trigger}
               {online_disable.trg trigger}})
         (update_show_privilege_help
            ($show_privilege)
            {auto_sign_in_sony_help.lbl
               set
               text_token
               {if_else $show_privilege overshell_auto_sign_in_sony_restricted_privilege overshell_auto_sign_in_sony_help}})
         #ifdef HX_XBOX
         (update_in_xbox_party
            ($is_in_party)
            {if_else
               $is_in_party
               {online_options.lst enable_data overshell_invite_xbox_party}
               {online_options.lst disable_data overshell_invite_xbox_party}})
         #endif
         (update_local_status
            ($is_local)
            {pad_num.lbl set_showing $is_local})
         (update_pad_num
            ($pad_num)
            {pad_num.lbl set_int $pad_num})
         (button_pulse_joined
            {button_pulse_joined.trig trigger})
         (button_pulse_unjoined
            {print
               "triggering unjoined...\n"}
            {button_pulse_unjoined.trig trigger})
         (update_user_name
            ($user)
            {user_name.lbl set_user_name $user})
         (update_char_provider
            ($provider)
            {chars.lst refresh})
         (update_kick_users_provider
            ($provider)
            {kick_users.lst refresh})
         (update_mute_users_provider
            ($provider)
            {mute_users.lst refresh})
         (update_gamercard_users_provider
            ($provider)
            {gamercard_users.lst refresh})
         (update_remote_status
            ($status_token_fmt)
            {remote_status.lbl set_token_fmt $status_token_fmt})
         (update_profiles_provider
            ($provider)
            #ifdef HX_WII
            {profiles_wii.lst refresh}
            {$this enable profiles_wii.lst}
            #else
            {profiles.lst refresh}
            {if_else
               {$provider num_data}
               {$this enable profiles.lst}
               {$this disable profiles.lst}}
            #endif)
         (update_friends_provider
            ($provider)
            {invite_friends.lst refresh})
         (update_modifiers_list
            {modifiers.lst refresh})
         (update_part_select_provider
            ($provider $controllerType)
            {do
               ($list_to_update
                  {switch
                     $controllerType
                     (1 choose_part_guitar.lst)
                     (4 choose_part_real_guitar.lst)
                     (2 choose_part_vocals.lst)
                     (3 choose_part_keys.lst)
                     (0 choose_part_drum.lst)})
               {$list_to_update refresh}})
         (update_song_difficulty_ranking
            ($has_random_setlist $has_part $has_multiple_songs $difficulty $num_vocal_parts)
            {if_else
               $has_random_setlist
               {do
                  {song_difficulty_ranking.idd set_showing 0}
                  {song_difficulty.lbl set_showing 0}}
               {do
                  {song_difficulty_ranking.idd set_showing 1}
                  {song_difficulty_ranking.idd set has_part $has_part}
                  {song_difficulty_ranking.idd set difficulty $difficulty}
                  {song_difficulty_ranking.idd set num_vocal_parts $num_vocal_parts}
                  {song_difficulty.lbl set_showing 1}
                  {if_else
                     $has_multiple_songs
                     {song_difficulty.lbl set text_token overshell_setlist_difficulty}
                     {song_difficulty.lbl set text_token overshell_song_difficulty}}}})
         (update_lefty_and_static_toggle
            ($options $controller)
            {if_else
               {!= vocals $controller}
               {if_else
                  {$options get_lefty}
                  {lefty_and_static_toggle.lbl set text_token overshell_lefty_flip}
                  {lefty_and_static_toggle.lbl set text_token overshell_righty_flip}}
               {switch
                  {$options get_vocal_style}
                  (0
                     {lefty_and_static_toggle.lbl set text_token overshell_vocals_mode_static})
                  (1
                     {lefty_and_static_toggle.lbl set text_token overshell_vocals_mode_scrolling})}})
         (update_no_fail_enabled
            ($enabled)
            {no_fail.chk set checked $enabled})
         (update_can_skip_song
            ($can_skip)
            {if_else
               $can_skip
               {song_options_in_game.lst enable_data overshell_skip_song}
               {song_options_in_game.lst disable_data overshell_skip_song}})
         (update_can_access_song_options_in_game
            ($enabled)
            {if_else
               $enabled
               {options_in_game.lst enable_data overshell_song_options_in_game}
               {options_in_game.lst disable_data overshell_song_options_in_game}})
         (update_character_portrait
            ($tex)
            {choose_character.mat
               set
               diffuse_tex
               {if_else $tex $tex choose_character.tex}})
         (update_options_check
            ($options $lefty)
            {if_else
               $lefty
               {instr_option.chk
                  set
                  checked
                  {$options get_lefty}}
               {instr_option.chk
                  set
                  checked
                  {==
                     {$options get_vocal_style}
                     0}}})
         (update_dolby_check
            {dolby.chk
               set
               checked
               {profile_mgr get_dolby}})
         (update_bass_boost_check
            {bass_boost.chk
               set
               checked
               {profile_mgr get_bass_boost}})
         (update_overscan_check
            {overscan.chk
               set
               checked
               {profile_mgr get_overscan}})
         (update_slider
            ($component $options)
            {switch
               $component
               (instruments.sld
                  {$component
                     set_current
                     {profile_mgr get_foreground_volume}})
               (bg_music.sld
                  {$component
                     set_current
                     {profile_mgr get_background_volume}})
               (crowd.sld
                  {$component
                     set_current
                     {profile_mgr get_crowd_volume}})
               (sfx.sld
                  {$component
                     set_current
                     {profile_mgr get_fx_volume}})
               (voice_chat.sld
                  {$component
                     set_current
                     {profile_mgr get_voice_chat_volume}})
               (vocal_track.sld
                  {$component
                     set_current
                     {profile_mgr get_vocal_cue_volume}})
               (vocal_mic.sld
                  {$component
                     set_current
                     {$options get_vocal_volume}})
               (vocal_sens1.sld
                  {$component
                     set_current
                     {profile_mgr get_mic_gain 0}})
               (vocal_sens2.sld
                  {$component
                     set_current
                     {profile_mgr get_mic_gain 1}})
               (vocal_sens3.sld
                  {$component
                     set_current
                     {profile_mgr get_mic_gain 2}})})
         (on_slider_change
            ($component $user)
            {switch
               $component
               (instruments.sld
                  {profile_mgr
                     set_foreground_volume
                     {$component current}})
               (bg_music.sld
                  {profile_mgr
                     set_background_volume
                     {$component current}})
               (crowd.sld
                  {profile_mgr
                     set_crowd_volume
                     {$component current}})
               (sfx.sld
                  {profile_mgr
                     set_fx_volume
                     {$component current}})
               (voice_chat.sld
                  {profile_mgr
                     set_voice_chat_volume
                     {$component current}})
               (vocal_track.sld
                  {profile_mgr
                     set_vocal_cue_volume
                     {$component current}})
               (vocal_mic.sld
                  {{$user get_gameplay_options}
                     set_vocal_volume
                     {$component current}}
                  {profile_mgr update_vocal_volume $user})
               (vocal_sens1.sld
                  {profile_mgr
                     set_mic_gain
                     0
                     {$component current}}
                  {profile_mgr update_mic_gain 0})
               (vocal_sens2.sld
                  {profile_mgr
                     set_mic_gain
                     1
                     {$component current}}
                  {profile_mgr update_mic_gain 1})
               (vocal_sens3.sld
                  {profile_mgr
                     set_mic_gain
                     2
                     {$component current}}
                  {profile_mgr update_mic_gain 2})})
         (set_confirm_action
            ($msg $opt1 $opt2)
            {confirm_question.lbl set text_token $msg}
            {do
               ($options
                  {array 0})
               {push_back $options $opt1}
               {push_back $options $opt2}
               {confirm_action.lst set_data $options}})
         (set_confirm_message
            ($token)
            {confirm_question.lbl set text_token $token}
            {confirm_action.lst
               set_data
               (overshell_confirm_ok)})
         (set_difficulty_restriction
            ($difficulty)
            {choose_diff.lst disable_data overshell_easy}
            {cond
               ({== $difficulty 2}
                  {choose_diff.lst disable_data overshell_medium})
               ({== $difficulty 3}
                  {choose_diff.lst disable_data overshell_medium}
                  {choose_diff.lst disable_data overshell_hard})})
         (clear_difficulty_restriction
            {choose_diff.lst enable_data overshell_easy}
            {choose_diff.lst enable_data overshell_medium}
            {choose_diff.lst enable_data overshell_hard})
         (reset_cam
            {track_size.anim
               animate
               (range 0 0)
               (units 2)}
            {track_shift.anim
               animate
               (range 0 0)
               (units 2)}
            {track_cam_rect.anim
               animate
               (range 0 0)
               (units 2)})
         (animate_with_track
            ($animate $size_frame $shift_frame $cam_rect_frame)
            {if_else
               $animate
               {do
                  {track_size.anim
                     animate
                     (dest $size_frame)
                     (period 1)}
                  {track_shift.anim
                     animate
                     (dest $shift_frame)
                     (period 1)}
                  {track_cam_rect.anim
                     animate
                     (dest $cam_rect_frame)
                     (period 1)}}
               {do
                  {track_size.anim
                     animate
                     (range $size_frame $size_frame)
                     (units 2)}
                  {track_shift.anim
                     animate
                     (range $shift_frame $shift_frame)
                     (units 2)}
                  {track_cam_rect.anim
                     animate
                     (range $cam_rect_frame $cam_rect_frame)
                     (units 2)}}}))))
(UITrigger
   (types
      (overshell_view
         (editor
            (initial_focus
               object
               (class UIComponent)
               (help
                  "Component to receive focus when we first reach this state"))
            (pos_anim
               object
               (class PropAnim)
               (help
                  "pos_anim's target's position will be moved to the destination frame."))
            (hidden
               bool
               (help
                  "Hides the dir once pos_anim finishes.")))
         (initial_focus
            "")
         (pos_anim
            "")
         (proto_anim
            "proto_view_do_not_touch.anim")
         (hidden 0)
         (set_view_pos
            ($dir $in_track_mode)
            {if
               [pos_anim]
               {do
                  ($target
                     "")
                  ($end_frame
                     {[pos_anim]
                        end_frame})
                  ($end_pos
                     (0 0 0))
                  {[pos_anim]
                     forall_keyframes
                     $out_target
                     $out_path
                     $out_frame
                     $out_val
                     {if
                        {== $end_frame $out_frame}
                        {set $target $out_target}
                        {set $end_pos $out_val}}}
                  {[proto_anim]
                     stop_animation}
                  {[proto_anim]
                     remove_keys
                     $target
                     (position)}
                  {[proto_anim]
                     remove_keys
                     $dir
                     (showing)}
                  {[proto_anim]
                     add_keys
                     $target
                     (position)
                     5}
                  {[proto_anim]
                     set_key
                     $target
                     (position)
                     0}
                  {[proto_anim]
                     set_key_val
                     $target
                     (position)
                     $end_frame
                     $end_pos}
                  {[proto_anim]
                     set_interp_type
                     $target
                     (position)
                     4}
                  {[proto_anim]
                     add_keys
                     $dir
                     (showing)
                     3}
                  {[proto_anim]
                     set_key_val
                     $dir
                     (showing)
                     0
                     {'||'
                        {$dir showing}
                        {!
                           [hidden]}}}
                  {if
                     [hidden]
                     {[proto_anim]
                        set_key_val
                        $dir
                        (showing)
                        $end_frame
                        0}}
                  {[proto_anim]
                     set_frame
                     0}
                  {[proto_anim]
                     animate}}})
         (trigger
            {$this
               reveal_lists_in_nav_chain
               [initial_focus]})
         (reveal_lists_in_nav_chain
            ($component)
            {if
               $component
               {if
                  {$component is_a BandList}
                  {$component reveal}}
               {$this
                  reveal_lists_in_nav_chain
                  {$component get nav_down}}}))))