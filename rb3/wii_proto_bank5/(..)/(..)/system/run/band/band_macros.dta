#define kPlayIdleRealtime (4096)
#define kPlayIdle (8192)
#define kPlayIdleIntense (16384)
#define kPlayMellow (32768)
#define kPlayNormal (65536)
#define kPlayIntense (131072)
#define kPlaySolo (262144)
#define kPlayDirectedCut (520192)
#define kGenreRocker (256)
#define kGenreDramatic (512)
#define kGenreBanger (1024)
#define kGenreSpazz (2048)
#define kGenreAll (3840)
#define kClipModeNone (0)
#define kClipModeMeta (1)
#define kClipModeLoadingScreen (2)
#define kClipModeRealtime (3)
#define kClipModeWorld (4)
#define kClipModeFinale (5)
#define kTempoSlow (16)
#define kTempoMedium (32)
#define kTempoFast (64)
#define kTempoAll (112)
#define kValidGuitar (1048576)
#define kValidBass (2097152)
#define kValidMale (1)
#define kValidFemale (2)
#define kValidAllGender (3)
#define kValidRocker (256)
#define kValidDramatic (512)
#define kValidBanger (1024)
#define kValidSpazz (2048)
#define kValidAllAttitude (3840)
#define kValidAll (3843)
#define kBCSBFacingNull (4096)
#define kBCSBFacingLeft (8192)
#define kBCSBFacingRight (16384)
#define kBCSBAllFacing (28672)
#define kBCSBBassFocus (32768)
#define kBCSBDrumFocus (65536)
#define kBCSBGuitarFocus (131072)
#define kBCSBMicFocus (262144)
#define kBCSBKeyboardFocus (524288)
#define kBCSBAllFocus (1015808)
#define kPlayAndAttitudeFlags (524032)
#define kPlayAttitudeTempoFlags (524272)
#define kBCSBCoopBG (1048576)
#define kBCSBCoopBK (2097152)
#define kBCSBCoopGK (4194304)
#define kIddHidden (0)
#define kIddName (1)
#define kIddIcon (2)
#define IDD_INSTRUMENT_STATES ("kIddHidden" "kIddName" "kIddIcon")
#define BAND_SINGALONG_EVENTS (singalong_on singalong_off)
#define BAND_COMMON_MUSICIAN_EVENTS (idle_realtime idle idle_intense play mellow intense)
#define BAND_BASS_EVENTS (BAND_COMMON_MUSICIAN_EVENTS play_solo)
#define BAND_DRUM_EVENTS (BAND_COMMON_MUSICIAN_EVENTS)
#define BAND_GUITAR_EVENTS (BAND_COMMON_MUSICIAN_EVENTS play_solo)
#define BAND_KEYBOARD_EVENTS (BAND_COMMON_MUSICIAN_EVENTS)
#define BAND_MIC_EVENTS (
   BAND_COMMON_MUSICIAN_EVENTS
   tambourine_start
   tambourine_end
   cowbell_start
   cowbell_end
   clap_start
   clap_end
)
#define BAND_CROWD_EVENTS (
   crowd_realtime
   crowd_mellow
   crowd_normal
   crowd_intense
   crowd_lighters_on
   crowd_lighters_off
   crowd_horns_on
   crowd_horns_off
   crowd_fists_on
   crowd_fists_off
)
#define BAND_WORLD_EVENTS (bonusfx bonusfx_optional chorus verse)
#autorun {do
   {func facing_string
      ($facing)
      {string_flags
         $facing
         ("kBCSBFacingLeft" "kBCSBFacingRight" "kBCSBFacingNull")
      }
   }
}
#define SHELL_EDITOR (
   (focus_scale
      float
      (range 1 10)
      (help "Scale factor when buttons are focused")
   )
   (postprocess
      object
      (class PostProc)
      (help "Post process object to use when this panel is on screen")
      (post_sync {$this update_postproc})
   )
   (refresh_postproc
      script
      (script {$this update_postproc})
      (help "Refresh postprocessor selection on the tool")
   )
)
#define SHELL_TYPE (
   (focus_scale 1)
   (postprocess "")
   (update_postproc
      {if $edit_mode
         {if_else [postprocess]
            {[postprocess] select}
            {rnd reset_postproc}
         }
      }
   )
   (play_cascade
      ($start_button $delay)
      {if $start_button
         {do
            ($comp)
            {$start_button stop_anim "enter_anim"}
            {$start_button stop_anim "exit_anim"}
            {set $comp {$start_button get nav_down}}
            {while {&& {!= $comp ""} {!= $comp $start_button}}
               {$comp stop_anim "enter_anim"}
               {$comp stop_anim "exit_anim"}
               {set $comp {$comp get nav_down}}
            }
            {if {exists cascade_intro}
               {delete cascade_intro}
            }
            {$start_button play_anim enter_anim}
            {set $comp {$start_button get nav_down}}
            {thread_task
               0
               (name cascade_intro)
               (script
                  {set $i 0}
                  {if {'||' {== $comp ""} {== $comp $start_button}}
                     {$task exit}
                  }
                  {$task sleep $delay}
                  {$comp play_anim enter_anim}
                  {set $comp {$comp get nav_down}}
                  {$task loop}
               )
            }
         }
      }
   )
   (play_exit
      ($start_button)
      {if $start_button
         {do
            ($comp)
            {if {exists cascade_intro}
               {delete cascade_intro}
            }
            {if {$start_button is_anim_playing "enter_anim"}
               {$start_button play_anim "exit_anim"}
            }
            {set $comp {$start_button get nav_down}}
            {while {&& {!= $comp ""} {!= $comp $start_button}}
               {if {$comp is_anim_playing "enter_anim"}
                  {$comp play_anim "exit_anim"}
               }
               {set $comp {$comp get nav_down}}
            }
         }
      }
   )
   (kill_cascade
      ($start_button)
      {if $start_button
         {do
            ($comp)
            {if {exists cascade_intro}
               {delete cascade_intro}
            }
            {if_else {$start_button is_anim_playing "enter_anim"}
               {$start_button stop_anim "enter_anim"}
               {if_else {$start_button is_anim_playing "exit_anim"}
                  {$start_button stop_anim "exit_anim"}
                  {do
                     {$comp play_anim "exit_anim"}
                     {$comp stop_anim "exit_anim"}
                  }
               }
            }
            {set $comp {$start_button get nav_down}}
            {while {&& {!= $comp ""} {!= $comp $start_button}}
               {if_else {$comp is_anim_playing "enter_anim"}
                  {$comp stop_anim "enter_anim"}
                  {if_else {$comp is_anim_playing "exit_anim"}
                     {$comp stop_anim "exit_anim"}
                     {do
                        {$comp play_anim "exit_anim"}
                        {$comp stop_anim "exit_anim"}
                     }
                  }
               }
               {set $comp {$comp get nav_down}}
            }
         }
      }
   )
)