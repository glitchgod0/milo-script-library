#define WORLD_MODE_COMMON (
   (first_shot_ok
      {set $shot_ok.bie
         {&&
            {exists beatmatch}
            {game is_playing}
            {! $edit_mode}
            {! $cameras.validating}
         }
      }
   )
)
#define WORLD_EDITOR_COMMON (
   ('start crowd'
      script
      (help "Animates the crowd")
      (script
         {$this iterate
            WorldCrowd
            $crowd
            {$crowd iterate_frac
               (1
                  {main.drv play_group
                     great
                     {'|' 2 48 512}
                  }
               )
            }
         }
      )
   )
   ('stop crowd'
      script
      (help "Stops the crowd")
      (script
         {$this iterate
            WorldCrowd
            $crowd
            {$crowd iterate_frac (1 {main.drv enter})}
         }
      )
   )
   (custom_start_trigger
      object
      (class EventTrigger)
      (help "Override for ns_start.trig.  Triggered when a new world is set.")
   )
)
#include world_validate.dta
#define WORLD_MIDI_PARSERS (((world_drum_triggers 1)))
#define VENUE_SETUP_CHARACTERS (
   (change_subdir {set $loading_venue 1} kDataUnhandled)
   (sync_objects {set $loading_venue 0})
)
#define VENUE_SETUP_CHARACTERS_ENTER (
   {unless $banddirector
      {if $bandwardrobe
         {$bandwardrobe enter_venue $this}
      }
      {set $crowd.game_excitement 2}
      {set $crowd.authored_excitement -1}
      {set $crowd.authored_action ''}
      {set $crowd.idle_flags
         {'|' 2 48 512}
      }
      {set $crowd.play_flags {'|' 2 48}}
   }
)
#define WORLD_OBJECT_BASE (
   WORLD_MODE_COMMON
   (start kDataUnhandled)
   (coda_success {handle ($this bre_success)})
   (enter
      #ifndef HX_WII
      {stagekit_reset}
      #endif
      {if {exists game}
         {game add_sink $world () 3}
      }
   )
   (exit
      #ifndef HX_WII
      {stagekit_reset}
      #endif
      {if {exists game}
         {game remove_sink $this}
      }
   )
   (intro_start kDataUnhandled)
   (intro_end kDataUnhandled)
   (intro_skip {handle (game intro_end)} kDataUnhandled)
   ':'
   The
   game
   is
   'over,'
   ignore
   parsers.
   (game_over {$this delete_free_cam} kDataUnhandled)
   #ifndef HX_WII
   (halfbeat {stagekit_left_right 9 12})
   (quarterbeat {stagekit_left_right 10 13})
   (beat {stagekit_left_right 8 11})
   #endif
)