(RndDir
   (types
      (gem_smasher
         (editor
            (reset
               script
               (script
                  {$this reset}))
            (color
               symbol
               (list
                  (green red yellow blue orange purple))
               (post_sync
                  {$this
                     set_color
                     [color]}))
            (glow
               bool
               (post_sync
                  {$this
                     set_glow
                     [glow]}))
            (in_danger
               bool
               (post_sync
                  {$this
                     set_danger
                     [in_danger]}))
            (label
               string
               (post_sync
                  {$this
                     set_label
                     [label]}))
            (do_hit
               script
               (script
                  {$this hit}))
            (do_hit_bonus
               script
               (script
                  {$this hit_bonus}))
            (do_big_rock_hit
               script
               (script
                  {$this coda_hit}))
            (do_hit_fill
               script
               (script
                  {$this
                     hit_fill_vel
                     [test_velocity]}))
            (do_hit_drum
               script
               (script
                  {$this hit_drum}))
            (do_hit_cymbal
               script
               (script
                  {$this hit_cymbal}))
            (do_hit_chord
               script
               (script
                  {$this hit_chord})
               (read_only
                  {!
                     {exists hit_chord.trig}}))
            (do_miss
               script
               (script
                  {$this miss}))
            (do_finger_tap
               script
               (script
                  {$this finger_tap}))
            (do_fing_tap_bonus
               script
               (script
                  {$this finger_tap_bonus}))
            (burn
               script
               (script
                  {$this burn}))
            (burn_chord
               script
               (script
                  {$this burn_chord})
               (read_only
                  {!
                     {exists burn_chord.trig}}))
            (big_rock_burn
               script
               (script
                  {$this coda_burn}))
            (burn_bonus
               script
               (script
                  {$this burn_bonus}))
            (stop_burn
               script
               (script
                  {$this stop_burn}))
            (combo
               script
               (script
                  {$this combo}))
            (last_note
               script
               (script
                  {$this last_note}))
            (test_velocity
               int
               (range 0 10)
               (help
                  "velocity of fill hit from soft to loud"))
            (velocity_fill_triggers
               (array
                  object
                  (class EventTrigger))
               (help
                  "fill hits by velocity from lightest to hardest"))
            (colored_particle_launchers
               (array
                  object
                  (class PartLauncher particle_launcher))
               (help
                  "list of all particle launchers whose color should change depending on the color of the smasher")))
         (glow 0)
         (in_danger 0)
         (label
            "")
         (color green proxy_save)
         (burning 0)
         (base_frame 0)
         (test_velocity 0)
         (velocity_fill_triggers
            ())
         (colored_particle_launchers
            ())
         (last_set_color '')
         (reset
            {$this
               set_color
               [color]}
            {$this reset_triggers}
            {reset.trig trigger}
            {$this stop_burn}
            {if
               {exists LOD.anim}
               {LOD.anim set_frame $track_LOD}})
         (reset_triggers
            {do
               ($trigs
                  (hit.trig hit_cymbals.trig hit_drums.trig big_rock_hit.trig hit_bonus.trig hit_fill.trig hit_fill_hard.trig hit_fill_light.trig hit_fill_medium.trig finger_tap.trig finger_tap_bonus.trig miss.trig BRE_final_gem_hit.trig drumfill_complete_hit.trig burn.trig big_rock_burn.trig burn_bonus.trig))
               {foreach
                  $trig
                  $trigs
                  {if
                     {exists $trig}
                     {$trig basic_cleanup}}}})
         (set_color
            ($in_color)
            {if
               {!=
                  [last_set_color]
                  $in_color}
               {do
                  ($slot)
                  ($frame)
                  {set
                     [color]
                     $in_color}
                  {switch
                     $in_color
                     (green
                        {set $slot 0})
                     (red
                        {set $slot 1})
                     (yellow
                        {set $slot 2})
                     (blue
                        {set $slot 3})
                     (orange
                        {set $slot 4})
                     (purple
                        {set $slot 5})}
                  {set $frame $slot}
                  {if
                     {exists particle_slot_colors.anim}
                     {particle_slot_colors.anim set_frame $frame}}
                  {set
                     [base_frame]
                     {'*' 20 $frame}}
                  {if
                     {exists smasher_glow.anim}
                     {smasher_glow.anim
                        set_frame
                        [base_frame]}}
                  {foreach
                     $launcher
                     [colored_particle_launchers]
                     {$this set_launcher_color $launcher}}}
               {set
                  [last_set_color]
                  $in_color}})
         (set_launcher_color
            ($launcher)
            {do
               ($part
                  {$launcher get part})
               {set
                  $part
                  {$this
                     find
                     {$part name}}}
               {$launcher set override_start_color 1}
               {$launcher
                  set
                  start_color
                  {$part get start_color_high}}
               {$launcher
                  set
                  start_alpha
                  {$part get start_alpha_high}}
               {$launcher set override_mid_color 1}
               {$launcher
                  set
                  mid_color
                  {$part get mid_color_high}}
               {$launcher
                  set
                  mid_alpha
                  {$part get mid_alpha_high}}
               {$launcher set override_end_color 1}
               {$launcher
                  set
                  end_color
                  {$part get end_color_high}}
               {$launcher
                  set
                  end_alpha
                  {$part get end_alpha_high}}})
         (set_glow
            ($in_state)
            {set
               [glow]
               $in_state}
            {if
               {exists smasher_glow.anim}
               {if_else
                  [glow]
                  {smasher_glow.anim
                     animate
                     (range
                        {'+'
                           [base_frame]
                           19}
                        {'+'
                           [base_frame]
                           19})}
                  {smasher_glow.anim
                     animate
                     (range
                        [base_frame]
                        [base_frame])}}})
         (set_label
            ($in_val))
         (hit
            {hit.trig trigger})
         (hit_cymbal
            {hit_cymbals.trig trigger})
         (hit_drum
            {hit_drums.trig trigger})
         (hit_chord
            {hit_chord.trig trigger})
         (coda_hit
            {$this hit}
            {big_rock_hit.trig trigger})
         (hit_bonus
            {hit_bonus.trig trigger})
         (hit_fill_vel
            ($velocity)
            {if
               {== $velocity 0}
               {set $velocity 6}}
            {if_else
               {<
                  $velocity
                  {size
                     [velocity_fill_triggers]}}
               {do
                  ($trig
                     {elem
                        [velocity_fill_triggers]
                        $velocity})
                  {if_else
                     {!= $trig ''}
                     {$trig trigger}
                     {hit_fill.trig trigger}}}
               {hit_fill.trig trigger}})
         (finger_tap
            {finger_tap.trig trigger})
         (finger_tap_bonus
            {finger_tap_bonus.trig trigger})
         (rg_strum
            {miss.trig trigger})
         (miss
            {miss.trig trigger}
            {$this stop_burn})
         (burn
            {burn.trig trigger}
            {set
               [burning]
               1})
         (burn_chord
            {burn_chord.trig trigger}
            {set
               [burning]
               1})
         (coda_burn
            {$this burn}
            {big_rock_burn.trig trigger}
            {set
               [burning]
               1})
         (burn_bonus
            {burn_bonus.trig trigger}
            {set
               [burning]
               1})
         (stop_burn
            {if
               [burning]
               {stop_burn.trig trigger}
               {set
                  [burning]
                  0}})
         (combo
            {$this hit_bonus})
         (last_note
            {if
               {exists BRE_final_gem_hit.trig}
               {BRE_final_gem_hit.trig trigger}})
         (drum_fill_complete
            {if
               {exists drumfill_complete_hit.trig}
               {drumfill_complete_hit.trig trigger}})
         (set_danger
            ($in_state)))))