#include ..\config\macros.dta
(UIComponent (select_frames 15))
(UIFontImporter (default_bitmap_path "ui/resource/image"))
(BandList
   (allowed_dirs RndDir)
   (types
      (spin (resource_file "resource/list/list_spin.milo"))
      (widespinner (resource_file "resource/list/list_widespinner.milo"))
      (widespinner2 (resource_file "resource/list/list_widespinner2.milo"))
      (practice_section
         (resource_file "resource/list/list_practice_section.milo")
      )
      (header_performance
         (resource_file "resource/list/list_header_performance.milo")
      )
      (song_select (resource_file "resource/list/list_song_select_browser.milo"))
      (song_select_setlist
         (resource_file "resource/list/list_song_select_setlist.milo")
      )
      (song_select_setlist_scores
         (resource_file "resource/list/list_song_select_setlist_scores.milo")
      )
      (song_select_shortcut
         (resource_file "resource/list/list_song_select_shortcut.milo")
      )
      (store_browser (resource_file "resource/list/list_store_browser.milo"))
      (store_filter (resource_file "resource/list/list_store_filter.milo"))
      (store_shortcut (resource_file "resource/list/list_store_shortcut.milo"))
      (store_info (resource_file "resource/list/list_store_info.milo"))
      (store_song (resource_file "resource/list/list_store_song.milo"))
      (store_song_long (resource_file "resource/list/list_store_song_long.milo"))
      (filter_select (resource_file "resource/list/list_filters.milo"))
      (filter_category
         (resource_file "resource/list/list_filter_categories.milo")
      )
      (tour_song_list (resource_file "resource/list/list_tour_songs.milo"))
      (tourdesc_list (resource_file "resource/list/list_tourdescs.milo"))
      (tour_challenge_list
         (resource_file "resource/list/list_tour_challenges.milo")
      )
      (accomplishment_list
         (resource_file "resource/list/list_accomplishments.milo")
      )
      (accomplishment_list_row
         (resource_file "resource/list/list_accomplishments_row.milo")
      )
      (accomplishment_award_list
         (resource_file "resource/list/list_accomplishment_awards.milo")
      )
      (accomplishment_entry_list
         (resource_file "resource/list/list_accomplishment_entry.milo")
      )
      (accomplishment_category_goal_list
         (resource_file "resource/list/list_accomplishment_category_goal.milo")
      )
      (accomplishment_category_list
         (resource_file "resource/list/list_accomplishment_categories.milo")
      )
      (accomplishment_category_list_row
         (resource_file "resource/list/list_accomplishment_categories_row.milo")
      )
      (campaign_leaderboard_goals_list
         (resource_file "resource/list/list_leaderboard_goals.milo")
      )
      (campaign_leaderboard_career_list
         (resource_file "resource/list/list_leaderboard_career.milo")
      )
      (campaign_leaderboard_goals_choice_list
         (resource_file "resource/list/list_leaderboard_goals_choice.milo")
      )
      (campaign_leaderboard_career_choice_list
         (resource_file "resource/list/list_leaderboard_career_choice.milo")
      )
      (quest_list (resource_file "resource/list/list_quests.milo"))
      (campaign_groups_list
         (resource_file "resource/list/list_campaign_groups.milo")
      )
      (quest_filter_list (resource_file "resource/list/list_quest_filters.milo"))
      (character_list (resource_file "resource/list/list_characters.milo"))
      (overshell_friends
         (resource_file "resource/list/list_overshell_friends.milo")
      )
      (overshell_friends_ingame
         (resource_file "resource/list/list_overshell_friends_ingame.milo")
      )
      (overshell_users (resource_file "resource/list/list_overshell_users.milo"))
      (overshell_users_ingame
         (resource_file "resource/list/list_overshell_users_ingame.milo")
      )
      (overshell_menubig
         (resource_file "resource/list/list_overshell_menubig.milo")
      )
      (overshell_menubig_ingame
         (resource_file "resource/list/list_overshell_menubig_ingame.milo")
      )
      (overshell_menu
         (resource_file "resource/list/list_overshell_menu.milo")
         (dark "song_disc_dark.mat")
         (light "song_disc_light.mat")
         (mat
            ($data)
            {if_else {== {mod $data 2} 0}
               [dark]
               [light]
            }
         )
      )
      (overshell_menu_ingame
         (resource_file "resource/list/list_overshell_menu_ingame.milo")
      )
      (overshell_modifiers
         (resource_file "resource/list/list_overshell_modifiers.milo")
      )
      (overshell_modifiers_ingame
         (resource_file "resource/list/list_overshell_modifiers.milo")
      )
      (overshell_part_select
         (resource_file "resource/list/list_overshell_part_select.milo")
      )
      (overshell_part_select_ingame
         (resource_file "resource/list/list_overshell_part_select_ingame.milo")
      )
      (credits (resource_file "resource/list/list_credits.milo"))
      (leaderboards (resource_file "resource/list/list_leaderboards.milo"))
      (leaderboards_shortcut
         (resource_file "resource/list/list_leaderboards_shortcut.milo")
      )
      (mini_leaderboard
         (resource_file "resource/list/list_mini_leaderboard.milo")
      )
      (gamertag (resource_file "resource/list/list_gamertag.milo"))
      (band_chooser (resource_file "resource/list/list_band_chooser.milo"))
      (list_bands (resource_file "resource/list/list_bands.milo"))
      (tourproperties_list
         (resource_file "resource/list/list_tourproperties.milo")
      )
      (gamertag_owner_chooser
         (resource_file "resource/list/list_gamertag_owner_chooser.milo")
      )
      (calibration_mode
         (resource_file "resource/list/list_calibration_mode.milo")
      )
      (character_creator
         (resource_file "resource/list/list_character_creator.milo")
      )
      (face_options_list (resource_file "resource/list/list_face_options.milo"))
      (face_options_list_row
         (resource_file "resource/list/list_face_options_row.milo")
      )
      (trainers (resource_file "resource/list/list_trainers.milo"))
      (lessons_list (resource_file "resource/list/list_lessons.milo"))
      (assets_list (resource_file "resource/list/list_assets.milo"))
      (patch_select (resource_file "resource/list/list_patch.milo"))
      (sticker (resource_file "resource/list/list_sticker.milo"))
      (sticker_small (resource_file "resource/list/list_sticker_small.milo"))
      (layer (resource_file "resource/list/list_layer.milo"))
      (main_hub_messages
         (resource_file "resource/list/list_main_hub_messages.milo")
      )
      (trainer_section_select
         (resource_file "resource/list/list_trainer_section_select.milo")
      )
      (band_members (resource_file "resource/list/list_bandinfo_members.milo"))
      (band_roster (resource_file "resource/list/list_bandinfo_roster.milo"))
      (potential_band_members
         (resource_file "resource/list/list_bandinfo_potential_members.milo")
      )
      (music_store_storefront
         (resource_file "resource/list/list_store_storefront.milo")
      )
      (wii_friends_list (resource_file "resource/list/list_wii_friends.milo"))
      (wii_friend_details_list
         (resource_file "resource/list/list_wii_friend_profiles.milo")
      )
   )
)
#define LABEL_AND_BUTTON_TYPES (#include ui_fonts.dta)
(BandLabel
   (allowed_dirs RndDir)
   (init {set [resource_name] "pentatonic"})
   (resources_path "resource/fonts/")
)
(BandButton
   (allowed_dirs RndDir)
   (init {set [resource_name] "pentatonic"})
   (resources_path "resource/fonts/")
)
(PlayerDiffIcon
   (allowed_dirs RndDir)
   (init {$this set_type default})
   (types
      (default
         (resource_file "resource/fonts/chapter_diff_icons.milo")
         (player_meshes "01.mesh" "02.mesh" "03.mesh" "04.mesh")
         (player_mat "player.mat")
         (no_player_mat "player_none.mat")
         (diff_labels "easy.lbl" "medium.lbl" "hard.lbl" "expert.lbl")
      )
   )
)
(BandSwatch (types (default (resource_file "resource/swatch.milo"))))
(InstrumentDifficultyDisplay
   (allowed_dirs RndDir)
   (init {$this set_type default})
   (types
      (default
         (resource_file "resource/instrument_difficulty_display.milo")
         (difficulty_anim "difficulty.anim")
         (vocal_part_mesh "vocal_part.mesh")
         (vocal_part1_mat "vocal_part1.mat")
         (vocal_part2_mat "vocal_part2.mat")
         (vocal_part3_mat "vocal_part3.mat")
         (instrument_label "instrument.lbl")
         (instrument_icon "instrument_icon.lbl")
         (get_inst_icon
            {if_else {exists song_mgr}
               {cnv_instrumenttoicon [instrument_type]}
               "G"
            }
         )
         (set_rank
            ($rank)
            {if_else {== $rank 0}
               {do
                  {$this set has_part 0}
                  {$this set num_vocal_parts 0}
               }
               {do
                  {$this set has_part 1}
                  {$this set
                     difficulty
                     {song_mgr rank_tier $rank [instrument_type]}
                  }
               }
            }
         )
         (set_song
            ($song)
            {$this set has_part 0}
            {$this set num_vocal_parts 0}
            {if
               {&&
                  {exists song_mgr}
                  {song_mgr part_plays_in_song $song [instrument_type]}
               }
               {$this set has_part 1}
               {$this set
                  difficulty
                  {song_mgr rank_tier_for_song $song [instrument_type]}
               }
               {if {== [instrument_type] vocals}
                  {$this set num_vocal_parts {song_mgr num_vocal_parts $song}}
               }
            }
         )
         (set_setlist
            {if {exists song_mgr}
               {do
                  ($highest_difficulty -1)
                  ($most_vocal_parts 0)
                  ($has_part 0)
                  {foreach_int $i 0 {meta_performer num_songs}
                     {do
                        ($song {meta_performer indexed_song $i})
                        ($difficulty {song_mgr rank_tier_for_song $song [instrument_type]})
                        ($num_vocal_parts 0)
                        {if {song_mgr part_plays_in_song $song [instrument_type]}
                           {set $has_part 1}
                        }
                        {if {> $difficulty $highest_difficulty}
                           {set $highest_difficulty $difficulty}
                        }
                        {if {== [instrument_type] vocals}
                           {set $num_vocal_parts {song_mgr num_vocal_parts $song}}
                           {if {> $num_vocal_parts $most_vocal_parts}
                              {set $most_vocal_parts $num_vocal_parts}
                           }
                        }
                     }
                  }
                  {$this set difficulty $highest_difficulty}
                  {$this set has_part $has_part}
                  {if_else {== [instrument_type] vocals}
                     {$this set num_vocal_parts $most_vocal_parts}
                     {$this set num_vocal_parts 0}
                  }
               }
            }
         )
      )
   )
)
(StarDisplay
   (allowed_dirs RndDir)
   (init {$this set_type default})
   (types
      (default
         (resource_file "resource/star_display.milo")
         (resource_stars_label "stars.lbl")
         (resource_stars_mixed_label "stars_mixed.lbl")
      )
   )
)
(ScoreDisplay
   (allowed_dirs RndDir)
   (init {$this set_type default})
   (types
      (default
         (resource_file "resource/score_display.milo")
         (combined_label "combined.lbl")
      )
      (left_aligned
         (resource_file "resource/score_display_left.milo")
         (combined_label "combined.lbl")
      )
   )
)
(RankDisplay
   (allowed_dirs RndDir)
   (init {$this set_type default})
   (types
      (default
         (resource_file "resource/rank_display.milo")
         (friends_group "friends.grp")
         (global_group "global.grp")
         (rank_label "rank.lbl")
         (player_label "next_player.lbl")
         (score_display "score.scr")
      )
   )
)
(ReviewDisplay
   (allowed_dirs RndDir)
   (init {$this set_type default})
   (types
      (default
         (resource_file "resource/review_display.milo")
         (review_anim "review.anim")
         (focus_anim "focus.anim")
      )
   )
)
(ScrollbarDisplay
   (allowed_dirs RndDir)
   (init {$this set_type default})
   (types
      (default
         (resource_file "resource/scrollbar_display.milo")
         (thumb_group "thumb.grp")
         (top_bone "scrollbar_bg_bone_top.mesh")
         (bottom_bone "scrollbar_bg_bone_bottom.mesh")
         (thumb_top_bone "scrollbar_bone_top.mesh")
         (thumb_bottom_bone "scrollbar_bone_bottom.mesh")
      )
   )
)
(CheckboxDisplay
   (allowed_dirs RndDir)
   (init {$this set_type default})
   (types
      (default
         (resource_file "resource/checkbox_display.milo")
         (check_mesh "check.mesh")
      )
   )
)
(MeterDisplay
   (allowed_dirs RndDir)
   (init {$this set_type default})
   (types
      (default
         (resource_file "resource/meter_display.milo")
         (meter_label "meter.lbl")
         (meter_anim "meter.anim")
      )
      (campaign_hub
         (resource_file "resource/campaign_hubmeter.milo")
         (meter_label "meter_complete.lbl")
         (meter_anim "meter_fill.msnm")
      )
      (campaign
         (resource_file "resource/campaign_topmeter.milo")
         (meter_label "meter_progress.lbl")
         (meter_anim "meter.anim")
         (enter {{{$this get_resource_dir} find "start.trig"} trigger})
      )
      (leaderboards
         (resource_file "resource/lb_meter_display.milo")
         (meter_anim "meter.anim")
      )
      (content_loading
         (resource_file "resource/content_loading_meter.milo")
         (meter_anim "meter.anim")
      )
   )
)
(MiniLeaderboardDisplay
   (allowed_dirs RndDir)
   (init {$this set_type default})
   (types
      (default
         (resource_file "resource/mini_leaderboard_display.milo")
         (title_label "title.lbl")
         (icons_label "icons.lbl")
         (leaderboard "leaderboard.lst")
         (reset_trigger "reset.trig")
         (fade_in_trigger "fade_in.trig")
         (fade_out_trigger "fade_out.trig")
         (pending_group "pending.grp")
      )
   )
)
(P9TexMesh
   (allowed_dirs RndDir)
   (init {$this set_type default})
   (types
      (default
         (resource_file "resource/p9_tex_mesh.milo")
         (mesh "Mesh.mesh")
         (mat "Mat.mat")
         (tex "Tex.tex")
      )
   )
)
(MicInputArrow
   (allowed_dirs RndDir)
   (init {$this set_type default})
   (types
      (default
         (resource_file "resource/mic_input_arrow.milo")
         (arrow_groups "arrow0.grp" "arrow1.grp" "arrow2.grp")
         (connect_triggers
            "arrow0_connect.trig"
            "arrow1_connect.trig"
            "arrow2_connect.trig"
         )
         (disconnect_triggers
            "arrow0_disconnect.trig"
            "arrow1_disconnect.trig"
            "arrow2_disconnect.trig"
         )
         (level_anim "mic_level.anim")
         (connected_anim "arrow.anim")
      )
   )
)
(InlineHelp
   (allowed_dirs RndDir)
   (init {$this set_type default})
   (types
      (default
         (resource_file "resource/inline_help.milo")
         (text_label "text.lbl")
         (action_chars
            (vocals "_" "A" "B" "Y" "S" "s" "_" "_" "_" "_" "_" "R" "_" "_" "X")
            (guitar "_" "g" "r" "y" "S" "s" "G" "_" "G" "_" "_" "o" "_" "_" "b")
            (drums "_" "A" "B" "Y" "S" "s" "_" "_" "_" "_" "_" "F" "_" "_" "X")
            (keys "_" "A" "B" "Y" "S" "s" "_" "_" "_" "_" "_" "_" "_" "_" "X")
            (real_guitar "_" "A" "B" "Y" "S" "s" "_" "_" "_" "_" "_" "R" "_" "_" "X")
         )
      )
      (center
         (resource_file "resource/inline_help_center.milo")
         (text_label "text.lbl")
         (action_chars
            (vocals "_" "A" "B" "Y" "S" "s" "_" "_" "_" "_" "_" "R" "_" "_" "X")
            (guitar "_" "g" "r" "y" "S" "s" "G" "_" "G" "_" "_" "o" "_" "_" "b")
            (drums "_" "A" "B" "Y" "S" "s" "_" "_" "_" "_" "_" "F" "_" "_" "X")
            (keys "_" "A" "B" "Y" "S" "s" "_" "_" "_" "_" "_" "_" "_" "_" "X")
            (real_guitar "_" "A" "B" "Y" "S" "s" "_" "_" "_" "_" "_" "R" "_" "_" "X")
         )
      )
   )
)
(UIPicture
   (types (picture_albumart (tex_file "image/blank_album_art_keep.png")))
)
(UISlider
   (init {$this set_type audio})
   (types
      (audio
         (resource_file "resource/slider_audio.milo")
         (vertical 0)
         (meshes
            ("pod.mesh"
               (normal "slider_pod_normal.mat")
               (focused "slider_pod_focused.mat")
               (disabled "slider_pod_disabled.mat")
               (selected "slider_pod_selected.mat")
            )
            ("slider.mesh"
               (normal "slider_normal.mat")
               (focused "slider_focused.mat")
               (disabled "slider_disabled.mat")
               (selected "slider_selected.mat")
            )
         )
      )
      (generic
         (resource_file "resource/slider_char_creator.milo")
         (vertical 0)
         (meshes
            ("pod.mesh"
               (normal "slider_pod_normal.mat")
               (focused "slider_pod_focused.mat")
               (disabled "slider_pod_disabled.mat")
               (selected "slider_pod_selected.mat")
            )
            ("slider.mesh"
               (normal "slider_normal.mat")
               (focused "slider_focused.mat")
               (disabled "slider_disabled.mat")
               (selected "slider_selected.mat")
            )
         )
      )
   )
)
(PanelDir (types (shell (editor SHELL_EDITOR) SHELL_TYPE)))
#merge overshell/overshell_dir.dta
#merge character_creator/character_creator_dir.dta
(TexMovie
   (types
      (shell
         (change_file
            {if_else {exists game}
               {random_elem ("videos/shell1.bik" "videos/shell2.bik" "videos/shell3.bik")}
               kDataUnhandled
            }
         )
      )
   )
)
(UIButton (allowed_dirs))
(UIList (allowed_dirs))
(UILabel (allowed_dirs))
(BandHighlight (allowed_dirs))