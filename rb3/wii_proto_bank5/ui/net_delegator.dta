{new Object
   net_gameplay_delegator
   (incoming_msg
      ($type $user $x2 $x3 $x4)
      {if {exists beatmatch}
         {do
            ($player {$user player})
            {switch $type
               (0 {$player remote_hit $x2 $x3 {defrac $x4}})
               (1 {$player remote_penalize $x2 $x3 {defrac $x4}})
               (2 {$player remote_whammy {defrac $x2}})
               (3 {$player remote_streak $x2})
               (4 {$player remote_update_score $x2})
               (5 {$player remote_update_crowd {defrac $x2}})
               (6 {$player remote_update_energy {defrac $x2} $x3})
               (7 {$player remote_deploy $x2})
               (8 {$player remote_enabled_state $x2 $x3 $x4})
               (9 {$player remote_fill $x2})
               (10 {$player remote_fill_hit $x2 $x3 $x4})
               (11 {$player remote_solo_start})
               (12 {$player remote_solo_hit $x2})
               (13 {$player remote_solo_end $x2 $x3})
               (14 {$player remote_vocal_state $x2 $x3 $x4})
               (15 {$player remote_tambourine_succeeding $x2 $x3})
               (16 {$player remote_coda_hit $x2 $x3})
               (17 {$player remote_hit_last_coda_gem $x2})
               (18 {$player remote_blow_coda})
               (19 {$player remote_already_saved $x2})
               (20 {$player remote_guitar_fx $x2})
               (22 {$player remote_hit_last_unison_gem $x2 $x3})
               (23 {$player remote_fail_unison_phrase $x2 $x3})
               (24 {$player remote_finished_song $x2})
               (21 {$player remote_phrase_over})
               (25 {$player remote_score_phrase $x2 $x3 $x4})
               (26 {$player remote_finale_hit $x2})
               (27 {$player remote_vocal_energy $x2})
               (28 {$player remote_miss_noises $x2})
               (29 {$player remote_update_skill {defrac $x2} {defrac $x3}})
               (30 {$player remote_tracker_focus $x2 $x3 $x4})
               {print "Bad enum " $type " in net_delegator\n"}
            }
         }
      }
   )
}