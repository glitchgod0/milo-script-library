{new UIPanel
   song_select_shortcut_panel
   (file "song_select_shortcut.milo")
   (old_user none)
   (focus shortcut.lst)
   (enter
      {shortcut.grp set_showing 0}
      {recoil.trg trigger}
   )
   (exit
      {$this shortcut_exit}
      {shortcut.grp set_showing 0}
   )
   (shortcut_period 1.5)
   (shortcut_selected '')
   (shortcut_mode none)
   (shortcut_enter
      ($mode $user $highlight_index)
      {if {== none [shortcut_mode]}
         {set [shortcut_mode] $mode}
         {{ui current_screen} set_focus_panel $this}
         {shortcut.grp set_showing 1}
         {start.trg trigger}
         {with song_select_panel
            {song.lst set_state 0}
         }
         {if {== [shortcut_mode] groups}
            {shortcut.lst set_provider {music_library get_shortcut_provider}}
            {shortcut.lst set_selected $highlight_index}
         }
         {set [shortcut_selected] {shortcut.lst selected_pos}}
         {if_else {input_mgr has_user}
            {set [old_user] {input_mgr get_user}}
            {set [old_user] none}
         }
         {unless {== $user none}
            {play_instr_sfx $user button_shortcut}
            {input_mgr set_user $user}
         }
      }
   )
   (shortcut_exit
      {if {!= [shortcut_mode] none}
         {{ui current_screen} set_focus_panel song_select_panel}
         {with song_select_panel
            {song.lst set_state 1}
         }
         {recoil.trg trigger}
         {set [shortcut_mode] none}
         {if_else {== [old_user] none}
            {input_mgr clear_user}
            {input_mgr set_user [old_user]}
         }
      }
   )
   (BUTTON_DOWN_MSG
      {if_else {== $action 2}
         {do
            {play_instr_sfx $user button_back}
            {$this shortcut_exit}
         }
         kDataUnhandled
      }
   )
   (BUTTON_UP_MSG
      {if_else
         {'||'
            {&& {== groups [shortcut_mode]} {'||' {== $action 10} {== $action 11}}}
            {&& {== sorts [shortcut_mode]} {== $action 5}}
         }
         {$this on_select}
         kDataUnhandled
      }
   )
   (SELECT_MSG {$this on_select})
   (on_select
      {if {== [shortcut_mode] groups}
         {$this shortcut_exit}
         {music_library skip_to_shortcut {shortcut.lst selected_pos}}
      }
   )
   (SCROLL_MSG {set [shortcut_selected] {shortcut.lst selected_pos}})
   (JOYPAD_CONNECT_MSG
      {if {! $connected}
         {$this shortcut_exit}
      }
   )
}
{new UIPanel
   song_select_filter_panel
   (file "song_select_filter.milo")
   (focus settings.lst)
   (filter_mode 0)
   (enter
      {all.grp set_showing 0}
      {recoil.trg trigger}
      {status.lbl set_music_library_status}
      {do
         ($main_provider {music_library get view_settings_provider})
         {settings.lst set_provider $main_provider}
         {$main_provider select_setting {settings.lst selected_data}}
         {$main_provider set_to_setting_options options.lst}
      }
   )
   (exit {$this filter_exit})
   (status_changed
      {settings.lst refresh}
      {options.lst refresh}
      {status.lbl set_music_library_status}
   )
   (filter_enter
      {if {! [filter_mode]}
         {set [filter_mode] 1}
         {{ui current_screen} set_focus_panel $this}
         {all.grp set_showing 1}
         {start.trg trigger}
         {with song_select_panel
            {song.lst set_state 0}
         }
      }
   )
   (filter_exit
      {if [filter_mode]
         {set [filter_mode] 0}
         {{ui current_screen} set_focus_panel song_select_panel}
         {with song_select_panel
            {song.lst set_state 1}
         }
         {recoil.trg trigger}
      }
   )
   (BUTTON_DOWN_MSG
      {switch $action
         (2
            {play_instr_sfx $user button_back}
            {if_else {== {$this focus_name} "settings.lst"}
               {$this filter_exit}
               {do
                  {settings.trg trigger}
                  {$this set_focus settings.lst}
               }
            }
         )
         (5
            {play_instr_sfx $user button_back}
            {$this filter_exit}
         )
         (3
            {if_else {== {$this focus_name} "settings.lst"}
               {do
                  {{music_library get view_settings_provider} reset_all_settings}
                  {$this status_changed}
               }
               {do
                  {{music_library get view_settings_provider} reset_active_setting}
                  {$this status_changed}
               }
            }
         )
         kDataUnhandled
      }
   )
   (SELECT_MSG
      {if_else {== $component settings.lst}
         {do
            ($main_provider {music_library get view_settings_provider})
            {if_else {$main_provider select_setting {settings.lst selected_data}}
               {do
                  {$main_provider set_view_setting_to_label setting.lbl}
                  {$main_provider set_to_setting_options options.lst}
                  {options.trg trigger}
                  {options.lst refresh}
                  {$this set_focus options.lst}
                  {options.lst set_selected 0}
               }
               {do
                  {push_basic_confirm_dialog tour_filter_locked}
               }
            }
         }
         {do
            ($main_provider {music_library get view_settings_provider})
            {$main_provider select_setting_option {options.lst selected_data}}
            {$this status_changed}
            {{music_library get view_settings_provider} set_view_setting_to_label
               setting.lbl
            }
            {unless {$main_provider can_select_multiple_options}
               {settings.trg trigger}
               {$this set_focus settings.lst}
            }
         }
      }
   )
}
{new UIPanel
   lb_song_select_content_loading_panel
   (load {content_mgr start_refresh})
   (is_loaded {content_mgr refresh_done})
}
{new BandScreen
   invalid_selection_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter {dialog_panel set_ok invalid_song})
   (SELECT_MSG {ui pop_screen})
}
{new BandScreen
   invalid_version_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter {dialog_panel set_ok invalid_version})
   (SELECT_MSG {ui pop_screen})
}
{new BandScreen
   no_valid_songs_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter {dialog_panel set_ok no_valid_songs})
   (SELECT_MSG {ui pop_screen})
}
{new BandScreen
   setlist_save_screen
   (panels dialog_panel)
   (enter {dialog_panel set_yesno save_setlist_before_playing yes.btn})
   (SELECT_MSG
      {if_else {== $component {dialog_panel find yes.btn}}
         {music_library try_to_save_setlist_to_user $user}
         {$this creation_done}
      }
   )
   (start_setlist_creation_flow
      ($user)
      {virtual_keyboard show_keyboard
         $user
         12
         {localize new_setlist_vk_title}
         {localize new_setlist_vk_desc}
         {localize new_setlist_vk_default}
         $this
         5
      }
   )
   (virtual_keyboard_result_msg
      ($ok $str)
      {if $ok
         {music_library complete_setlist_creation $str "canned setlist description"}
      }
   )
   (creation_done {song_select_panel move_on_quickplay})
}
{new UIPanel
   edit_setlist_panel
   (file "edit_setlist.milo")
   (focus edit_name.btn)
   (setlist "")
   (change_made 0)
   (current_edit "")
   (edit_setlist
      ($setlist)
      {set [setlist] $setlist}
      {set [change_made] 0}
   )
   (enter
      {setlist_name.lbl set_setlist_name [setlist]}
      {setlist_desc.lbl set_setlist_description [setlist]}
      {art.mat set diffuse_tex {[setlist] get_art_tex}}
   )
   (SELECT_MSG
      {switch $component
         (edit_name.btn
            {set [current_edit] name}
            {virtual_keyboard show_keyboard
               $user
               12
               {localize new_setlist_vk_title}
               {localize new_setlist_vk_desc}
               {[setlist] get_title}
               $this
               5
            }
         )
         (edit_desc.btn
            {set [current_edit] desc}
            {virtual_keyboard show_keyboard
               $user
               12
               {localize new_setlist_vk_title}
               {localize new_setlist_vk_desc}
               {[setlist] get_description}
               $this
               5
            }
         )
         (edit_art.btn
            {patch_entry_panel setup_for_setlist_art [setlist]}
            {patch_entry_panel set patch_return_screen {{ui bottom_screen} name}}
            {ui reset_screen patch_entry_screen}
         )
         (ok.btn
            {if [change_made]
               {{[setlist] get_owner_profile} setlist_changed [setlist]}
               {music_library re_sort_setlists}
               {ui pop_screen}
            }
         )
      }
   )
   (virtual_keyboard_result_msg
      ($ok $str)
      {if $ok
         {set [change_made] 1}
         {if_else {== [current_edit] name}
            {do
               {[setlist] set_title $str}
               {setlist_name.lbl set_setlist_name [setlist]}
            }
            {do
               {[setlist] set_description $str}
               {setlist_desc.lbl set_setlist_description [setlist]}
            }
         }
      }
   )
}
{new BandScreen
   edit_setlist_screen
   (panels edit_setlist_panel)
   (edit_setlist
      ($setlist)
      {edit_setlist_panel edit_setlist $setlist}
      {ui push_screen $this}
   )
}
{new UIPanel
   deleting_content_panel
   (file "deleting_content.milo")
   (content "")
   (should_content_refresh 0)
   (content_deleted 0)
   (setup_deletion
      ($content $should_content_refresh)
      {set [content] $content}
      {set [should_content_refresh] $should_content_refresh}
   )
   (enter
      {set [content_deleted] 0}
      {deleting_text.lbl set_token_fmt
         deleting_content_fmt
         {song_mgr num_songs_in_content [content]}
      }
      {content_mgr delete_content [content]}
      {song_mgr clear_from_cache [content]}
   )
   (poll
      {if {! {ui in_transition}}
         {if_else {! [content_deleted]}
            {if {content_mgr is_deleted [content]}
               {set [content_deleted] 1}
               {if [should_content_refresh]
                  {content_mgr start_refresh}
                  {content_loading_panel set_blocking 1}
               }
            }
            {if {content_mgr refresh_done}
               {ui pop_screen}
            }
         }
      }
   )
}
{new BandScreen
   deleting_content_screen
   (panels deleting_content_panel)
   (focus deleting_content_panel)
}