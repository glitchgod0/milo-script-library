(left
   (kPad_Tri
      "Cycle Free Camera"
      {if_else
         {==
            {ui current_screen}
            splash_screen}
         {ui goto_screen frame_rate_screen}
         {cycle_free_camera}})
   (kPad_R2
      "HAQ display all"
      {haq_display_all}))
(right
   (kPad_Select
      "Fake Win with 3 stars"
      {fake_win 3})
   (kPad_Square
      "Print Current Screen"
      {handle
         ({ui current_screen}
            print)}))
(keyboard
   #ifndef _SHIP
   ('`'
      "Toggle fake file errors"
      {toggle_fake_file_errors})
   #endif
   #ifdef HX_XBOX
   #endif
   (KB_F2
      "Rotate part for singer 1 autoplay"
      {if
         {game is_up}
         {rotate_singer_autoplay_part 0}})
   (KB_F3
      "Rotate part for singer 2 autoplay"
      {if
         {game is_up}
         {rotate_singer_autoplay_part 1}})
   (KB_F4
      "Rotate part for singer 3 autoplay"
      {if
         {game is_up}
         {rotate_singer_autoplay_part 2}})
   (KB_F5
      ctrl
      "Empties all band energy"
      {cheat_empty_band_energy})
   (KB_F5
      "Change autoplay pitch offset by -1"
      {if
         {game is_up}
         {increment_autoplay_offset -1.0}})
   (KB_F6
      "Change autoplay pitch offset by +1"
      {if
         {game is_up}
         {increment_autoplay_offset 1.0}})
   (KB_F5
      alt
      "Allow prefab customization"
      (value_bool
         {prefab_is_customizable})
      {cheat_prefab_toggle_customizable})
   #ifdef HX_PC
   (KB_F6
      alt
      "Save Prefab (from closet)"
      {cheat_prefab_save_from_closet})
   #endif
   (KB_F7
      alt
      "Update prefab's portrait (from closet)"
      {cheat_prefab_take_portrait})
   (KB_F7
      ctrl
      "Toggle vocal frame stats"
      (filters game harmony)
      {if
         {game is_up}
         {toggle_vocalplayer_frame_spew}})
   (KB_F8
      "Toggle network overlay"
      (filters game)
      {rnd toggle_overlay network})
   (KB_F8
      alt
      "Toggle if prefabs use own tattoos or profile's art maker patches"
      {cheat_prefab_toggle_use_profile_patches})
   (KB_F9
      "No Drum Fills"
      {toggle_no_drum_fills})
   (KB_F9
      ctrl
      "FRMode: prev shot"
      {frm_backward 1})
   (KB_F10
      ctrl
      "FRMode: next shot"
      {frm_forward 1})
   (KB_F9
      alt
      "FRMode: go back by 10 shots"
      {frm_backward 10})
   (KB_F10
      alt
      "FRMode: go forward by 10 shots"
      {frm_forward 10})
   (0
      "Pause/unpause game / Meta: turn off vignettes"
      {if_else
         {game is_up}
         {toggle_paused}
         {do
            {ui
               set_vignettes_showing
               {!
                  {ui get_vignettes_showing}}}
            {cheat_display
               show_bool
               "Vignettes"
               {ui get_vignettes_showing}}}})
   (5
      "Cycle through graphical character debugging in game"
      {next_character_driver})
   (6
      "Cycle instrument faking for controller 1"
      {cycle_instrument_override 0})
   (7
      "Cycle instrument faking for controller 2"
      {cycle_instrument_override 1})
   (8
      "Cycle instrument faking for controller 3"
      {cycle_instrument_override 2})
   (9
      "Cycle instrument faking for controller 4"
      {cycle_instrument_override 3})
   (!
      "Game: Win w/ 3 stars, Meta: Win event w/ 1 Star Avg"
      {fake_win 1})
   ('@'
      "Game: Win w/ 3 stars, Meta: Win event w/ 2 Star Avg"
      {fake_win 2})
   (#
      "Game: Win w/ 3 stars, Meta: Win event w/ 3 Star Avg"
      {fake_win 3})
   ('$'
      "Game: Win w/ 4 stars, Meta: Win event w/ 4 Star Avg"
      {fake_win 4})
   ('%'
      "Game: Win w/ 5 stars, Meta: Win event w/ 5 Star Avg"
      {fake_win 5})
   (2
      alt
      "Toggle automatic 22-fret guitar"
      {set
         $auto_22_fret
         {! $auto_22_fret}}
      {cheat_display
         show
         {sprint
            "Auto 22-fret guitar "
            {if_else
               $auto_22_fret
               "on"
               "off"}}})
   (3
      alt
      "Toggle keyboard fingering numbers"
      {set
         $key_gem_fingering
         {! $key_gem_fingering}}
      {cheat_display
         show
         "Toggled keyboard fingering numbers"})
   ('^'
      "Game: Win w/ 6 stars, Meta: Win event w/ 6 Star Avg"
      {fake_win 6})
   (&
      "Cycle to next challenge"
      {tour_cycle_challenge})
   ('*'
      "Game: Win a multisong event w/ 5 star avg"
      {fake_win_multi 5})
   ('['
      "Toggle in-game timer stats"
      {rnd toggle_timers_verbose})
   (']'
      "Reload Campaign Data"
      {reload_campaign_data})
   (a
      alt
      "Game: Toggles auto-hopos"
      (filters game)
      {toggle_auto_hopos})
   (a
      "Game: Cycles through combinations of Autoplay"
      {cycle_multiplayer_auto_play})
   (a
      ctrl
      "Toggle AO"
      {do
         ($world
            {$banddirector get cur_world})
         {if
            $world
            {handle
               ({find_obj $world RB3_geom.env}
                  toggle_ao)}
            {handle
               ({find_obj $world RB3_chars.env}
                  toggle_ao)}}})
   (A
      "Meta: unlock all; Game: toggle crowd audio"
      {A_cheat})
   (b
      "Meta: toggle campaign launched goal msgs only"
      {b_cheat})
   (B
      "Game: Fire off bonus fx.  Woo!"
      {if
         {game is_up}
         {handle
            ($world bonusfx)}})
   (b
      ctrl
      "Toggle background track attenuation"
      {toggle_background_atten})
   (c
      "Game: Cycle CamShots / Music Store: clear file cache"
      (filters store)
      {cond
         ({game is_up}
            {if
               $banddirector
               {$banddirector cycle_shot}})
         ({&&
               {store_panel is_up}
               {store_filter_panel is_up}}
            {net_cache_mgr debug_clear_cache})})
   (C
      "Toggle Current CamShot Info"
      {rnd toggle_overlay camera}
      {if
         $banddirector
         {handle
            ({$banddirector get cur_shot}
               update_overlay)}})
   (c
      ctrl
      "Toggle practice mode click track"
      {toggle_click_track})
   (c
      alt
      "Toggle the max number of songs that can be loaded at once."
      (value
         {song_mgr get_max_song_count})
      {song_mgr cheat_toggle_max_song_count})
   (C
      alt
      "Dump SongMgr contents (skipping on-disc songs)"
      {song_mgr dump_songs})
   (d
      "Game: Toggle Camera Picking, Meta: Toggle Difficulty"
      {if_else
         {game is_up}
         {if
            $banddirector
            {do
               ($disable
                  {!
                     {$banddirector get disable_picking}})
               {$banddirector set disable_picking $disable}
               {cheat_display
                  show_bool
                  "Disable camera picking"
                  $disable}}}
         {cheat_toggle_difficulty}})
   (d
      ctrl
      "Cycle difficulty of player 0"
      {do
         ($player
            {beatmatch active_player 0})
         ($newdiff
            {'+'
               {$player difficulty}
               1})
         {if
            {> $newdiff 3}
            {set $newdiff 0}}
         {{$player get_user}
            set_difficulty
            $newdiff}})
   (d
      alt
      "Enable debug prefabs"
      {cheat_debug_prefabs})
   (D
      "Everyone Deploy Band Energy"
      {everyone_deploy})
   (e
      "Game: Adjust crowd excitement down"
      {adjust_crowd_rating -0.1})
   (E
      "Adjust crowd excitement up"
      {adjust_crowd_rating 0.1})
   (e
      ctrl
      "Game: cycles through each character visual debugging of their eyes"
      (filters game)
      {if
         {&&
            {game is_up}
            $banddirector}
         {$banddirector debug_char_interests}
         {cheat_display
            show
            "visual interest object debug: cycling to next character..."}})
   (e
      alt
      "Toggle Eye lid clamping"
      {do
         ($val
            {! $eyes.disable_clamping})
         {set $eyes.disable_clamping $val}
         {cheat_display
            show_bool
            "Disable eye lid clamping: "
            $val}})
   (f
      "Dump Tour Properties for current Band"
      {dump_tour_properties})
   (f
      ctrl
      "E3Cheat for real guitar autoplay"
      {beatmatch e3_cheat_autoplay})
   (f
      alt
      "Toggle fake songs"
      {do
         ($val
            {!
               {song_mgr get_fake_songs_allowed}})
         {song_mgr set_fake_songs_allowed $val}
         {cheat_display
            show_bool
            "Fake songs allowed"
            $val}})
   (F
      "Free Camera"
      {cycle_free_camera})
   (g
      "Toggle slot/pos character display"
      {set
         $bandcharacter.show_slot
         {! $bandcharacter.show_slot}}
      {cheat_display
         show_bool
         "Slot/pos display"
         $bandcharacter.show_slot})
   (G
      "Print faders"
      {audio print_faders})
   (h
      "Game: Toggle HUD / Meta: toggle vocal harmony forcing"
      {if_else
         {game is_up}
         {do
            ($track
               {get_track_panel})
            {if
               $track
               {$track
                  set_showing
                  {!
                     {$track showing}}}}}
         {do
            {if
               {exists meta_performer}
               {do
                  ($vhmode
                     {meta_performer cheat_toggle_vocal_harmony})
                  {cheat_display
                     show
                     {sprint
                        "Toggled vocal harmony to "
                        $vhmode
                        "."}}}}}})
   (h
      ctrl
      "Display hit count"
      {cheat_display
         show
         "Hit stats written to console"}
      {game print_hit_stats})
   (h
      alt
      "Clear hit count"
      {cheat_display
         show
         "Hit stats cleared"}
      {game clear_hit_stats})
   (H
      "Toggle forced detection of calbert/Toggle harmony Lyrics"
      {if_else
         {beatmatch get_paused}
         {{{get_track_panel}
               find
               vocals}
            toggle_harmony_lyrics}
         {toggle_forced_autocal}})
   (I
      "Toggle Light Preset overlay"
      {rnd toggle_overlay light_preset})
   (i
      "Game: Toggle lighting events"
      {if
         {game is_up}
         {do
            ($ignore
               {handle
                  ($world toggle_lighting_events)})
            {cheat_display
               show
               {sprint
                  "light preset frozen: "
                  $ignore}}}})
   (i
      ctrl
      "Toggle real instrument synth"
      {toggle_instrument_synth})
   (i
      alt
      "Toggle Post Proc overlay"
      {rnd toggle_overlay postproc})
   (j
      "Toggle character overlay"
      {rnd toggle_overlay char_status TRUE})
   (j
      alt
      "Send fake character patches on net"
      {toggle_send_fake_patches})
   (J
      "Reload Tour Data"
      {reload_tour_data})
   (KB_F7
      "Empty"
      {print
         "EMPTY\n"})
   (k
      "Empty"
      {print
         "Empty\n"})
   (K
      "Toggle HAQ Printouts"
      {toggle_haq_printouts})
   (l
      "Game: Lose"
      {if_else
         {beatmatch get_paused}
         {{{get_track_panel}
               find
               vocals}
            cycle_layout}
         {{beatmatch active_player 0}
            lose}})
   (L
      "Toggle audio levels"
      {synth toggle_hud})
   (l
      ctrl
      "Toggle MIDI file load notification"
      {set
         $log_midi_file_load
         {! $log_midi_file_load}}
      {cheat_display
         show
         {sprint
            "MIDI file load notification "
            {if_else
               $log_midi_file_load
               "on"
               "off"}}})
   (m
      alt
      "Get latest strings from Magnu"
      (filters writer)
      {do
         ($num_strings
            {magnu_refresh_strings})
         {cheat_display
            show
            {sprintf
               "Found %i new strings from Magnu"
               $num_strings}}})
   (m
      ctrl
      "Game: enable/disable multipliers"
      (filters game)
      {toggle_multiplier_active})
   (m
      "Game: Toggle crowd meter/Meta: Mute shell music"
      (filters game meta)
      {if
         {game is_up}
         {toggle_crowd_meter}})
   (M
      "Toggle mutes all"
      (value_bool $mute_cheat)
      {toggle_mute_global})
   (n
      ctrl
      "Toggle character name display"
      {set
         $character.show_name
         {! $character.show_name}}
      {cheat_display
         show_bool
         "Character name display"
         $character.show_name})
   (n
      alt
      "Game: Print star threshold calculation"
      (filters game)
      {if
         {exists beatmatch}
         {beatmatch print_star_thresholds}})
   (n
      "Cycle notify level"
      (value
         {elem
            (disable overlay modal)
            $notify_level})
      {do
         ($names
            (disable overlay modal))
         {set
            $notify_level
            {mod
               {'++' $notify_level}
               {size $names}}}
         {cheat_display
            show
            {sprint
               "Notify level "
               {elem $names $notify_level}}}})
   (N
      "Force Finale sequence at the end of the last song"
      {cheat_display
         show_bool
         "Finale"
         {meta_performer cheat_toggle_finale}})
   (o
      "Push Network Channel selection screen"
      {unless
         {'||'
            {matchmaker is_finding}
            {==
               {ui current_screen}
               selchannel_screen}}
         {ui push_screen selchannel_screen}})
   (O
      "Print the symbol table"
      {print_symbol_table syms})
   #ifdef HX_PS3
   (p
      "Toggle Store Service ID (PS3-only)"
      (value
         {store_panel service_id})
      (filters store)
      {cheat_display
         show
         {sprintf
            "PS3 In-Game Commerce Service ID: %s"
            {store_panel toggle_service_id}}})
   #endif
   (p
      ctrl
      "Toggle MBT display for practice sections"
      {toggle_practice_mbt})
   (P
      "Game: Toggle Pitch Window"
      {if
         {game is_up}
         {if
            {beatmatch get_paused}
            {{{get_track_panel}
                  find
                  vocals}
               toggle_pitch_window}}})
   (p
      alt
      "Toggle all postprocess effects"
      (filters game meta)
      {cheat_display
         show
         {sprint
            "PostProcs: "
            {if_else
               {rnd toggle_all_postprocs}
               "off"
               "on"}}})
   (p
      ctrl
      "Fake Profile Fill"
      {profile_mgr fake_profile_fill}
      {cheat_display
         show
         {sprint
            "Profile Filled With Fake Data"}})
   (q
      "Print Current Screen"
      {handle
         ({ui current_screen}
            print)})
   (Q
      "toggle phoneme feedback"
      {{get_track_panel}
         toggle_phoneme_feedback})
   (q
      alt
      "Toggle Credits Autoscroll"
      {if
         {==
            {ui current_screen}
            credits_screen}
         {credits_panel debug_toggle_autoscroll}
         {cheat_display
            show
            "Credits Autoscroll toggled"}})
   (q
      ctrl
      "Toggle asset tokens"
      {if
         {customize_panel is_up}
         {cheat_display
            show_bool
            "Show Asset Tokens"
            {customize_panel cheat_toggle_asset_tokens}}})
   (r
      "Toggle Shell Automation"
      {do
         (value
            {ui auto_script})
         {cheat_display
            show
            {sprint
               "Shell Automation: "
               {ui toggle_auto}}}})
   (R
      "Toggle Shell Recording"
      (value
         {ui record_script})
      {cheat_display
         show
         {sprint
            "Shell Recording: "
            {ui toggle_record}}})
   (r
      ctrl
      "Toggle Rock Central login block"
      {do
         {rock_central toggle_block_login}
         {rock_central force_logout}})
   (s
      "Toggle scoring info"
      {if
         {game is_up}
         {rnd toggle_overlay score}})
   (S
      "Fill up the band energy"
      (filters game)
      {fill_band_energy})
   (s
      ctrl
      "Toggle video venue visualizer debug"
      {set
         $cheat.song_section_ctrl
         {! $cheat.song_section_ctrl}}
      {cheat_display
         show_bool
         "Show video visualizer debug"
         $cheat.song_section_ctrl})
   (s
      alt
      "Toggle showing shell UI (doesn't affect vignettes)"
      {toggle_show_shell_ui})
   (S
      ctrl
      "Toggle BandCharacter show spheres"
      {do
         ($val
            {! $bandcharacter.show_spheres})
         {set $bandcharacter.show_spheres $val}
         {cheat_display
            show_bool
            "show bounding spheres: "
            $val}})
   (t
      "Toggle time overlay"
      {rnd toggle_overlay time})
   (T
      "Toggle profiling timers"
      {rnd toggle_timers}
      {rnd toggle_overlay rate})
   (t
      alt
      "Print the particle pool size"
      {print_particle_pool_size})
   (t
      ctrl
      "Toggle overlay position (top/bottom)"
      {rnd toggle_overlay_position})
   (u
      "Toggle Playtest Flag"
      {cheat_toggle_playtest})
   (u
      ctrl
      "Toggle packet loss"
      {toggle_drop_all_packets})
   (U
      "Toggle UI load times"
      (filters meta)
      (value_bool
         {ui showing_load_times})
      {ui toggle_load_times})
   (v
      "Toggle Vocalplayer overlay/Venue select: Toggle venue select modifier"
      {if_else
         {&&
            {!
               {game is_up}}
            {!
               {selvenue_panel is_up}}}
         {ui push_screen selvenue_screen}
         {toggle_vocalplayer_overlay}})
   (v
      ctrl
      "Cycle Vignette Override"
      (filters meta)
      {ui cycle_vignette_override})
   (v
      alt
      "Show Vignette Selection Info"
      (filters meta)
      {do
         {ui toggle_vignette_overlay}
         {cheat_display
            show
            {sprint
               "Show vignette selection info: "
               {if_else
                  {ui vignette_overlay_showing}
                  "TRUE"
                  "FALSE"}}}})
   (V
      ctrl
      "Print Venue Name"
      {cheat_display
         show
         {sprint
            "venue: "
            {do
               ($v
                  {$banddirector camera_source})
               {if_else
                  $v
                  {$v name}
                  "none"}}}})
   (w
      "Game: Force a win"
      {if_else
         {exists beatmatch}
         {{band_0 band_performer}
            win
            3}
         {cheat_win_meta}})
   (W
      "Toggle showing test offers in Music Store"
      (value_bool
         {store_panel test_offers})
      (filters store)
      {cheat_display
         show_bool
         "Show Music Store test offers"
         {store_panel toggle_test_offers}})
   (x
      "Cycle Guitar FX"
      {cycle_guitar_fx})
   (X
      "Toggle shuttle"
      {toggle_shuttle})
   (y
      "Toggle lyric display mode"
      {{get_track_panel}
         toggle_lyric_mode})
   (Y
      "Game: Toggle mute master fader"
      {if
         {game is_up}
         {audio toggle_mute_master}})
   (z
      "Toggle showing world"
      (value_bool
         {world_panel showing})
      {world_panel
         set_showing
         {!
            {world_panel showing}}})
   (Z
      "Hi-reZ screen shot"
      {rnd hi_res_screen 3})
   ('+'
      "Toggle Store Metadata Index"
      (value
         {net_cache_mgr server_type})
      (filters store)
      {cheat_display
         show
         {sprintf
            "Music Store now using %s metadata"
            {net_cache_mgr cheat_next_server}}})
   (>
      "Meta: Next Campaign Level"
      {cheat_next_campaign_level})
   (<
      "Jump backward 1 second"
      {beatmatch
         jump
         {-
            {beatmatch get_song_ms}
            1000.0}})
   (<
      ctrl
      "Jump backward 30 seconds"
      {beatmatch
         jump
         {-
            {beatmatch get_song_ms}
            30000.0}})
   (KB_UP
      "Double song speed"
      {if
         {&&
            {exists beatmatch}
            {!=
               {ui current_screen}
               system_cheat_screen}
            {!=
               {ui current_screen}
               panel_select_screen}}
         {change_speed 2.0}})
   (KB_DOWN
      "Halve song speed"
      {if
         {&&
            {exists beatmatch}
            {!=
               {ui current_screen}
               system_cheat_screen}
            {!=
               {ui current_screen}
               panel_select_screen}}
         {change_speed 0.5}})
   (KB_LEFT
      ctrl
      "e3 cheat dec threshold"
      {e3_cheat_change_threshold -1})
   (KB_RIGHT
      ctrl
      "e3 cheat inc threshold"
      {e3_cheat_change_threshold 1})
   (KB_UP
      ctrl
      "e3 cheat inc slop"
      {e3_cheat_change_slop 1})
   (KB_DOWN
      ctrl
      "e3 cheat dec slop"
      {e3_cheat_change_slop 0})
   (KB_LEFT
      "Decrease fake instrument volume"
      {change_instrument_synth_volume -1})
   (KB_RIGHT
      "Increase fake instrument volume"
      {change_instrument_synth_volume 1})
   ('\\'
      "Cycle to next setlist"
      {tour_cycle_setlist})
   ('\\'
      alt
      "Sync and reload locale files"
      (filters writer)
      {sync_reload_locale}
      {cheat_display
         show
         "Locale files synced and reloaded"})
   (','
      "Deploy Overdrive Pad 1"
      {player_deploy 0})
   (.
      "Deploy Overdrive Pad 2"
      {player_deploy 1})
   (/
      "Deploy Overdrive Pad 3"
      {player_deploy 2})
   ('?'
      "Deploy Overdrive Pad 4"
      {player_deploy 3}))