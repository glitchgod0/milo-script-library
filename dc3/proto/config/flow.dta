(PropertyEventProvider
   (types
      (HamProvider
         (editor
            (gameplay_mode
               symbol
               (list
                  (practice
                     perform
                     perform_legacy
                     dance_battle
                     routine_builder
                     name_that_dance
                     cascade
                     concentration
                     rhythm_battle
                     holla_back
                     bustamove
                     mind_control
                     just_intro
                     strike_a_pose
                  )
               )
               (help "The current gameplay mode")
               (refresh skills_mode learn_slowdown)
            )
            (peak_behavior
               symbol
               (list (none perform dance_battle strike_a_pose))
               (help
                  "Whether peak states should exhibit the behavior most like regular perform, or neither"
               )
            )
            (skills_mode
               symbol
               (list (start learn review recap_results))
               (help "Which skills mode am I in")
               (hide {!= [gameplay_mode] practice})
            )
            (learn_slowdown
               bool
               (help "are we in slowdown mode?")
               (hide {'||' {!= [gameplay_mode] practice} {!= [skills_mode] learn}})
            )
            (performance
               symbol
               (list (low high awesome))
               (help "how well your doing")
            )
            (game_stage
               symbol
               (list (intro playing omg cascade freestyle outro))
               (help "current stage of the game")
            )
            (holla_back_stage
               symbol
               (list
                  (initial
                     enter_title
                     exit_title
                     enter_instruction
                     exit_instruction
                     enter_win
                     exit_win
                  )
               )
               (help "current stage of the holla ")
            )
            (holla_back_config
               symbol
               (list (none holla_back_config_craze_70s))
               (help "the config to run the next instance of hollaback with")
            )
            (holla_back_winner
               int
               (range 0 2)
               (help "who won? 0 = tie, 1 = p1, 2 = p2")
            )
            (cam_player_config
               int
               (list PLAYER_FLAGS)
               (help "Player config for cameras")
            )
            (dance_battle_config
               int
               (list ("kHamPlayer0" "kHamPlayer1" "kHamPlayerBoth" "kHamPlayerOff"))
               (help "Player configuration for dance battle")
            )
            (freestyle bool (help "Is the game in freestyle"))
            (flash_cards_visible bool (help "Are the flash cards visible?"))
            (photo_flip_visible bool (help "Is the photo flip visible?"))
            (stars_earned int (help "how many stars have you earned?"))
            (score_multiplier int (help "what is the score multiplier?"))
            (player_leader int (help "which player is leading?"))
            (beat_animation bool (help "should we play beat animations?"))
            (beat int (help "current beat number in the measure"))
            (use_char_projection
               bool
               (help "Use the render to texture for player 1 instead of rendering it.")
            )
            (use_char_projectionp2
               bool
               (help "Use the render to texture for player 2 instead of rendering it.")
            )
            (visible_flashcard_btm
               int
               (help "For hiding all flashcards not in a range, if -1 not used")
            )
            (visible_flashcard_top
               int
               (help "For hiding all flashcards not in a range, if -1 not used")
            )
            (shellmusic_on bool (help "Is the shell music on?"))
            (language
               symbol
               (list TURBO_SUPPORTED_LANGUAGES)
               (help "What language are we using?")
            )
            (voice_available bool (help "Is voice available?"))
            (voice_commander_tip_temporary
               bool
               (help "Is the voice commander tip not persistent on this screen?")
            )
            (voice_commander_tip_lower
               bool
               (help "Shift the voice tip lower to account for having no back button?")
            )
            (use_gamertag_bg bool (help "Should we be using the gamertag background?"))
            (ui_nav_player int (help "Which player is in control of the ui?"))
            (ui_crown_player
               int
               (help
                  "Which player gets to wear a spiffy crown? (0 = left 1 = right -1 = nobody)"
               )
            )
            (ui_nav_mode
               symbol
               (list
                  (init
                     calibration
                     title
                     shell
                     shell_multi
                     shell_4p
                     shell_wrangler
                     movie
                     game
                     loading
                     results
                     pause
                     practice_shell
                     store
                     shell_pause_available
                  )
               )
               (help "The current mode for the ui")
            )
            (metamode
               symbol
               (list
                  (init
                     perform
                     perform_legacy
                     practice
                     playlist_perform
                     infinite_playlist_perform
                     dance_battle
                     showdown
                     routine_builder
                     name_that_dance
                     cascade
                     concentration
                     rhythm_battle
                     holla_back
                     campaign_holla_back
                     campaign
                     campaign_intro
                     campaign_outro
                     campaign_perform
                     campaign_practice
                     party_mode
                     frame_rate
                     bustamove
                     challenge
                     strike_a_pose
                  )
               )
               (help "The current metamode (gamemode in cpp code...)")
            )
            (video_replay bool (help "are we currently doing a video replay?"))
            (tool_mode
               bool
               (help "true if we're in a tool mode (milo or milo tool)")
               (read_only TRUE)
            )
            (is_last_song
               bool
               (help "Is this the last song (always yes if not a playlist)")
            )
            (finale bool (help "Is the game in the campaign's finale?"))
            (robot_a_damage
               int
               (range 0 5)
               (help "how damaged should the robota appear?")
            )
            (robot_b_damage
               int
               (range 0 5)
               (help "how damaged should the robotb appear?")
            )
            (crew_character
               symbol
               (help "Which character's song are we playing in campaign?")
            )
            (crew_complete bool (help "Is this crew complete in campaign?"))
            (golden_boomy bool (help "Is golden boomy unlocked?"))
            (in_controller_mode bool (help "Is controller mode on?"))
            (byo_bid bool (help "Custom Break it Down session?"))
            (suppress_recap_results_text
               bool
               (help "Hide Break it Down recap results text?")
            )
            (has_skeleton bool (help "Are we tracking any skeletons?"))
            (skipped_song bool (help "Did we just skip a song?"))
            (is_in_party_mode bool (help "Are we in party mode?"))
            (is_in_infinite_party_mode bool (help "Are we in infinite party mode?"))
            (is_in_timeywimey bool (help "Are we in timey wimey space?"))
            (is_in_loading bool (help "Are we in the loading_panel?"))
            (song_shortening_enabled bool (help "Will we try to shorten songs?"))
            (dynamic_difficulty_enabled
               bool
               (help "Is a mode allowed to adjust a player's difficulty on the fly?")
            )
            (left_side_color
               symbol
               (list (red blue none))
               (help "Which color is the left side? (updated by nav_player.milo flow)")
            )
            (right_side_color
               symbol
               (list (red blue none))
               (help "Which color is the right side? (updated by nav_player.milo flow)")
            )
            (sided_colors_locked
               bool
               (help "Should player colors transfer when a player switches sides?")
            )
            (left_team_crew
               symbol
               (list
                  (crew01
                     crew02
                     crew03
                     crew04
                     crew05
                     crew06
                     crew07
                     crew08
                     crew09
                     crew10
                     crew11
                  )
               )
               (help "The left team's crew name (i.e. 'crew01', etc.)")
            )
            (right_team_crew
               symbol
               (list
                  (crew01
                     crew02
                     crew03
                     crew04
                     crew05
                     crew06
                     crew07
                     crew08
                     crew09
                     crew10
                     crew11
                  )
               )
               (help "The right team's crew name (i.e. 'crew01', etc.)")
            )
            (force_depth_buffer_skeletons_to_side
               int
               (range -1 1)
               (help
                  "Should all players appear in a specific depth buffer? (-1 for no, 0 for left, 1 for right)"
               )
            )
            (is_in_campaign_mode bool (help "Are we in campaign mode?"))
            (is_in_campaign_stinger
               bool
               (help "Are we in post-campaign stinger cutscene?")
            )
            (is_in_campaign_master_quest_mode
               bool
               (help "Are we in Master Quest mode?")
            )
            (is_in_campaign_work_it
               bool
               (help "Are we in timey wimey work it loading?")
            )
            (doing_stupid_kinect_trick
               bool
               (help "Are we doing the campaign Kinect tilt?")
            )
            (current_campaign_era
               symbol
               (list (era01 era02 era03 era04 era05 era_tan_battle))
               (help "Current era if in campaign mode (i.e. 'era01', etc.)")
            )
            (uses_score_star_display
               bool
               (help
                  "Are we in a mode that awards stars, which are displayed on the boombox?"
               )
            )
            (rhythmbattle_jackedhelper
               bool
               (help "True if this move_passed event was a jacked event.")
            )
            (rhythmbattle_trick1 symbol (help "Right Player measure trick"))
            (rhythmbattle_trick2 symbol (help "Left Player measure trick"))
            (is_in_shell_pause
               bool
               (help "True if we are in the pause menu for the shell")
            )
            (challenger_name
               string
               (help "Name of the player that started the challenge")
            )
            (current_challenge_score float (help "Current score in challenge mode."))
            (target_challenge_score
               float
               (help "Target score we are trying to beat in challenge mode.")
            )
            (primary_challenge_player
               int
               (range 0 1)
               (help
                  "This index indicates which player_provider is the primary challenge player."
               )
            )
            (in_fatalities
               bool
               (help "Are we currently in pose fatalities? (includes Strike-A-Pose)")
            )
            (hide_venue
               bool
               (help "Should we render the venue (not during the visualizer!)")
            )
            (suppress_campaign_intro_audio
               bool
               (help
                  "Should we ignore the campaign_intro_start in <venuename_audio>.milo's <venuename>.flow?"
               )
            )
            (suppress_practice_options
               bool
               (help "Should we keep the practice options from coming up for this move?")
            )
         )
         (skills_mode start)
         (learn_slowdown FALSE)
         (performance high)
         (flash_cards_visible TRUE)
         (photo_flip_visible FALSE)
         (stars_earned 0)
         (score_multiplier 1)
         (player_leader 0)
         (beat_animation TRUE)
         (beat 1)
         (freestyle FALSE)
         (game_stage playing)
         (holla_back_stage initial)
         (holla_back_config none)
         (holla_back_winner 0)
         (cam_player_config kHamPlayerBoth)
         (use_char_projection FALSE)
         (use_char_projectionp2 FALSE)
         (visible_flashcard_btm -1)
         (visible_flashcard_top -1)
         (shellmusic_on FALSE)
         (language eng)
         (voice_available TRUE)
         (voice_commander_tip_temporary FALSE)
         (voice_commander_tip_lower FALSE)
         (use_gamertag_bg FALSE)
         (ui_nav_player 0)
         (ui_crown_player -1)
         (ui_nav_mode init)
         (dance_battle_config kHamPlayerBoth)
         (metamode init)
         (gameplay_mode perform)
         (peak_behavior perform)
         (microgame none)
         (song_override '')
         (is_in_party_mode FALSE)
         (is_in_infinite_party_mode FALSE)
         (is_in_pre_party_mode FALSE)
         (is_in_timeywimey FALSE)
         (is_in_loading FALSE)
         (song_shortening_enabled FALSE)
         (dynamic_difficulty_enabled FALSE)
         (left_side_color blue)
         (right_side_color red)
         (video_replay FALSE)
         (tool_mode FALSE)
         (finale FALSE)
         (is_last_song FALSE)
         (robot_a_damage 0)
         (robot_b_damage 0)
         (crew_character '')
         (crew_complete FALSE)
         (golden_boomy FALSE)
         (in_controller_mode FALSE)
         (byo_bid FALSE)
         (suppress_recap_results_text FALSE)
         (has_skeleton FALSE)
         (skipped_song FALSE)
         (merge_moves FALSE)
         (hide_venue FALSE)
         (use_movegraph FALSE)
         (use_single_move_detect FALSE)
         (sided_colors_locked FALSE)
         (left_team_crew crew01)
         (right_team_crew crew04)
         (force_depth_buffer_skeletons_to_side -1)
         (is_in_campaign_mode FALSE)
         (is_in_campaign_stinger FALSE)
         (is_in_campaign_master_quest_mode FALSE)
         (is_in_campaign_work_it FALSE)
         (doing_stupid_kinect_trick FALSE)
         (current_campaign_era era01)
         (uses_score_star_display TRUE)
         (rhythmbattle_jackedhelper FALSE)
         (rhythmbattle_trick1 none)
         (rhythmbattle_trick2 none)
         (is_in_party_pause FALSE)
         (is_in_shell_pause FALSE)
         (challenger_name "")
         (current_challenge_score 0.0)
         (target_challenge_score 0.0)
         (primary_challenge_player 0)
         (in_fatalities FALSE)
         (suppress_campaign_intro_audio FALSE)
         (suppress_practice_options FALSE)
         (supported_events
            (start
               intro_start
               intro_end
               music_start
               music_end
               halfbeat
               quarterbeat
               downbeat
               dance_together
               prepare_photo_take
               final_pose
               final_pose_photo
               midi_kick
               midi_snare
               midi_tom_lo
               midi_tom_mid
               midi_tom_hi
               midi_hat
               midi_hat_open
               midi_ride
               midi_crash
               (photo_take
                  (editor
                     (photo_take_index int (help "Current photo number being taken"))
                     (photo_take_max int (help "Maximum number of photos being taken"))
                  )
                  (photo_take_index 0)
                  (photo_take_max 0)
               )
               (learn_mode_result
                  (editor
                     (learn_mode_result
                        symbol
                        (list (fastlane check fail))
                        (help "result for learn mode")
                     )
                  )
                  (learn_mode_result check)
               )
               (points_awarded
                  (editor (points_awarded int (help "How many points we were awarded")))
                  (points_awarded 0)
               )
               (move_finished
                  (editor
                     (move_player_index int (help "which player index finished the move"))
                     (move_result
                        symbol
                        (list (FEEDBACK_STATES))
                        (help "how well the player did on this move")
                     )
                  )
                  (move_player_index 0)
                  (move_result move_perfect)
               )
               (best_move_rating
                  (editor
                     (best_move_rating
                        symbol
                        (list (FEEDBACK_STATES))
                        (help "best rating event for both players")
                     )
                  )
                  (best_move_rating move_perfect)
               )
               (player_join
                  (editor (player_join_index int (help "Index of player joining")))
                  (player_join_index 0)
               )
               (player_quit
                  (editor (player_quit_index int (help "Index of player quitting")))
                  (player_quit_index 0)
               )
               (setup_alert
                  (editor
                     (alert_type
                        symbol
                        (list (general fitness unlock server free4all free4all_streak none))
                        (help "The type for the current alert (none = hide)")
                     )
                     (alert_text string (help "Text to show for the current alert"))
                  )
                  (alert_type general)
                  (alert_text "")
               )
               (setup_0_alert
                  (editor
                     (alert_0_type
                        symbol
                        (list (general fitness unlock server free4all free4all_streak none))
                        (help "The type for the current alert (none = hide)")
                     )
                     (alert_0_text string (help "Text to show for the current alert"))
                  )
                  (alert_0_type general)
                  (alert_0_text "")
               )
               (setup_1_alert
                  (editor
                     (alert_1_type
                        symbol
                        (list (general fitness unlock server free4all free4all_streak none))
                        (help "The type for the current alert (none = hide)")
                     )
                     (alert_1_text string (help "Text to show for the current alert"))
                  )
                  (alert_1_type general)
                  (alert_1_text "")
               )
               (setup_0_alert_alt
                  (editor
                     (alert_0_type
                        symbol
                        (list (general fitness unlock server free4all free4all_streak none))
                        (help "The type for the current alert (none = hide)")
                     )
                     (alert_0_text string (help "Text to show for the current alert"))
                  )
                  (alert_0_type general)
                  (alert_0_text "")
               )
               (setup_1_alert_alt
                  (editor
                     (alert_1_type
                        symbol
                        (list (general fitness unlock server free4all free4all_streak none))
                        (help "The type for the current alert (none = hide)")
                     )
                     (alert_1_text string (help "Text to show for the current alert"))
                  )
                  (alert_1_type general)
                  (alert_1_text "")
               )
               skills_learn_earn_check
               skills_bonus_fasttrack_first
               skills_bonus_fasttrack_second
               skills_bonus_learn_complete
               skills_learn_fail_move
               skills_review
               skills_review_done
               skills_review_done_100_percent
               skills_learn
               skills_learn_done
               learn_result_fasttrack
               learn_result_passed
               learn_result_failed
               show_recap
               show_recap_final
               highlight_awards
               show_practice_options
               hide_practice_options
               invoke_practice_options
               deinvoke_practice_options
               show_loop_icon
               hide_loop_icon
               show_slow_icon
               hide_slow_icon
               show_microphone_icon
               hide_microphone_icon
               microphone_activity
               voice_commander_help
               voice_commander_help_hide
               voice_commander_help_bump
               show_voice_prompt
               voice_cancelled
               video_record_start
               video_record_end
               video_playback_start
               video_playback_pause
               video_playback_unpause
               video_playback_end
               camshot_changed
               post_move_finished
               (nav_highlight
                  (editor
                     (item_name symbol)
                     (item_index int)
                     (target_list object (class HamNavList))
                     (can_select bool)
                  )
                  (item_name '')
                  (item_index 0)
                  (target_list "")
                  (can_select TRUE)
               )
               (nav_highlight_settled
                  (editor
                     (item_name symbol)
                     (item_index int)
                     (target_list object (class HamNavList))
                     (can_select bool)
                  )
                  (item_name '')
                  (item_index 0)
                  (target_list "")
                  (can_select TRUE)
               )
               (nav_select
                  (editor
                     (item_name symbol)
                     (item_index int)
                     (target_list object (class HamNavList))
                     (can_select bool)
                  )
                  (item_name '')
                  (item_index 0)
                  (target_list "")
                  (can_select TRUE)
               )
               (nav_select_done
                  (editor
                     (item_name symbol)
                     (item_index int)
                     (target_list object (class HamNavList))
                     (can_select bool)
                  )
                  (item_name '')
                  (item_index 0)
                  (target_list "")
                  (can_select TRUE)
               )
               post_sides_switched
               show_char_projection
               hide_char_projection
               hide_char_projection_keepdrawing
               destroy_char_projection
               char_projection_move_active
               char_projection_move_inactive
               (db_overtake
                  (editor (player int (range 0 1)))
                  (player 0)
               )
               omg_hit
               omg_hit_gold
               omg_begin_streak_p1
               omg_begin_streak_p2
               omg_reset_streak_p1
               omg_reset_streak_p2
               omg_reset_break_p1
               omg_reset_break_p2
               hb_card_capture
               hb_card_powerup
               cascade_enter
               cascade_exit
               (cascade_capture
                  (editor
                     (cascade_capture_count int (help "number of cards captured at once"))
                  )
                  (cascade_capture_count 1)
               )
               cascade_score
               cascade_land
               (nar_play_crew_vo
                  (editor
                     (category symbol (list (omg_win encourage win lead)))
                     (crew
                        symbol
                        (list
                           (crew01
                              crew02
                              crew03
                              crew04
                              crew05
                              crew06
                              crew07
                              crew08
                              crew09
                              crew10
                              crew11
                           )
                        )
                     )
                  )
                  (category omg_win)
                  (crew crew01)
               )
               (finale_feedback
                  (editor
                     (player
                        int
                        (range 0 1)
                        (help "Show feedback for player 0 or player 1.")
                     )
                     (finale_feedback_state
                        int
                        (range -1 1)
                        (help
                           "player may be doing well (1) or poorly (-1).  A zero value means show the idle animation."
                        )
                     )
                  )
                  (player 0)
                  (finale_feedback_state 0)
               )
               practice_move_start
               practice_move_end
               eq_shift_even
               eq_shift_odd
               (set_bustamove_result
                  (editor
                     (player int (range 0 1))
                     (item int (range 0 2))
                     (result int (range 0 1))
                  )
                  (player 0)
                  (item 0)
                  (result 0)
               )
               (bustamove_winner
                  (editor (player int (range -1 1)))
                  (player 0)
               )
               (bustamove_record_state
                  (editor
                     (player int (range -1 1))
                     (state int (range -1 1))
                  )
                  (player 0)
                  (state 0)
               )
               (bustamove_start_create
                  (editor
                     (column_side
                        int
                        (help "side of the screen")
                        (list ("kSkeletonLeft" "kSkeletonRight"))
                     )
                  )
                  (column_side kSkeletonRight)
               )
               (bustamove_move_matched
                  (editor (match_count int))
                  (match_count 0)
               )
               (bustamove_get_ready
                  (editor
                     (column_side
                        int
                        (help "side of the screen")
                        (list ("kSkeletonLeft" "kSkeletonRight"))
                     )
                  )
                  (column_side kSkeletonRight)
               )
               bustamove_move_matched_finalsequence
               bustamove_move_created
               bustamove_fail_bust
               bustamove_fail_match
               bustamove_both_dance
               bustamove_hide_transition
               bustamove_end_create
               bustamove_successfully_matched
               high_five
               enter_timeywimey
               enter_nottimeywimey
               rhythm_battle_intro
               rhythm_battle_no_groove_p1
               rhythm_battle_no_groove_p2
               rhythm_battle_no_groove_p1p2
               rhythm_battle_fresh_moves_p1
               rhythm_battle_fresh_moves_p2
               rhythm_battle_fresh_moves_p1p2
               rhythm_battle_switch_it_up_p1
               rhythm_battle_switch_it_up_p2
               rhythm_battle_switch_it_up_p1p2
               rhythm_battle_stale_warning_p1
               rhythm_battle_stale_warning_p2
               rhythm_battle_stale_warning_p1p2
               rhythm_battle_stale_penalty_p1
               rhythm_battle_stale_penalty_p2
               rhythm_battle_stale_penalty_p1p2
               rhythm_battle_1x_p1
               rhythm_battle_2x_p1
               rhythm_battle_3x_p1
               rhythm_battle_4x_p1
               rhythm_battle_1x_p2
               rhythm_battle_2x_p2
               rhythm_battle_3x_p2
               rhythm_battle_4x_p2
               (fatality_matched
                  (editor
                     (player int (range 0 1))
                     (fatality_index int)
                     (player_side int (list ("kSkeletonLeft" "kSkeletonRight")))
                  )
                  (player 0)
                  (fatality_index 1)
                  (player_side kSkeletonLeft)
               )
               (fatality_missed
                  (editor
                     (player int (range 0 1))
                     (player_side int (list ("kSkeletonLeft" "kSkeletonRight")))
                  )
                  (player 0)
                  (player_side kSkeletonLeft)
               )
               (fatality_all_matched
                  (editor
                     (player int (range 0 1))
                     (player_side int (list ("kSkeletonLeft" "kSkeletonRight")))
                  )
                  (player 0)
                  (player_side kSkeletonLeft)
               )
               (fatality_lead_in_beat
                  (editor (beats_until_start int (range 1 4)))
                  (beats_until_start 4)
               )
               (fatality_begin
                  (editor (player int (range 0 1)))
                  (player 0)
               )
               (fatality_end
                  (editor (player int (range 0 1)))
                  (player 0)
               )
               (fatality_added
                  (editor
                     (player int (range 0 1))
                     (combo int)
                  )
                  (player 0)
                  (combo 0)
               )
               fatality_beat
               fatality_activate
               tan_battle_taunt
               tan_battle_fail
               tan_battle_success
               tan_battle_end
               tan_battle_success_1
               tan_battle_success_2
               tan_battle_success_3
               tan_battle_success_4
               tan_battle_success_5
               tan_battle_shellfail
               tan_battle_shellfail_2
               tan_battle_freestyle_start
               tan_battle_freestyle_end
               tan_finale_phasein01
               tan_finale_phasein02
               tan_finale_phasein03
               tan_finale_phaseout01
               tan_finale_phaseout02
               (mind_control_vo
                  (editor (vo_type symbol (list (start not_grooving grooving working))))
                  (vo_type start)
               )
               mind_control_complete
               challenge_boomy_feedback
               challenge_flash_score
               wave_gesture_phase_1
               wave_gesture_phase_2
               wave_gesture_phase_3
               wave_gesture_complete
               passed_move
               passed_move_p1
               passed_move_p2
               challenge_play_sfx_score_pass
               challenge_play_sfx_explosion
               challenge_play_fanfare_mission_accomplished
               challenge_play_vo_next
               challenge_play_vo_this_is_it
               challenge_play_vo_last_one
               challenge_boomy_feedback_one_third
               challenge_boomy_feedback_two_third
               challenge_boomy_feedback_two_third_for_self
               party_pause
               (begin_suppress_practice_options
                  (editor (suppress_seconds float))
                  (suppress_seconds 0.0)
               )
            )
         )
         (show_microphone_icon {letterbox on_show_mic})
         (hide_microphone_icon
            {letterbox on_hide_mic}
            {if {ui is_blacklight_mode}
               {ui toggle_letterbox}
            }
         )
      )
      (player_provider
         (editor
            (join_state
               int
               (list JOIN_STATE_LIST)
               (help "join state for the player")
            )
            (score
               int
               (range 0 1000000)
               (help "Score for the player")
            )
            (cumulative_score
               int
               (range 0 1000000000)
               (help "Cumulative score for the player")
            )
            (performance_state
               symbol
               (list (low high awesome))
               (help "Personal performance state")
            )
            (side
               int
               (list ("kSkeletonLeft" "kSkeletonRight"))
               (help "Which side the player is on")
            )
            (rating
               symbol
               (list (FEEDBACK_STATES))
               (help "Last move rating for this player")
            )
            (final_pose_rating
               symbol
               (list (FEEDBACK_STATES))
               (help "Final pose rating for this player")
            )
            (score_multiplier
               float
               (range 0 4)
               (help "Score multiplier for the player")
            )
            (num_perfect
               int
               (range 0 1000000)
               (help "Number of perfects for the player")
            )
            (num_awesome
               int
               (range 0 1000000)
               (help "Number of awesomes for the player")
            )
            (num_gold
               int
               (range 0 1000000)
               (help "Number of gold cards hit for the player")
            )
            (rating_frac
               float
               (range 0 1.0)
               (help "Current rating value which drives player spotlight")
            )
            (crew symbol (help "Which crew is being used by this player?"))
            (using_fitness bool (help "Is this player in fitness mode?"))
            (fitness_current_met
               float
               (help "How much is the player currently moving, in METs?")
            )
            (difficulty symbol (help "Which difficulty is being used by this player?"))
            (player_present bool (help "Is this player present?"))
            (player_tooclose bool (help "Is this player too close on top and bottom?"))
            (player_close_top bool (help "Is this player too close on top?"))
            (player_close_bottom bool (help "Is this player too close on bottom?"))
            (player_close_right bool (help "Is this player too close on right?"))
            (player_close_left bool (help "Is this player too close on left?"))
            (player_name string (help "Player name displayed under the depth buffer"))
            (dancer symbol (help "Which dancer is being used by this player?"))
            (identifying
               int
               (list IDENTITY_STATUS_LIST)
               (help "Is this player being identified?")
            )
            (in_freestyle bool (help "Is this player in freestyle?"))
            (has_valid_challenge_data
               bool
               (help "Does this player has valid in-game challenge data?")
            )
            (num_challenge_targets int (help "Number of in-game challenge targets."))
            (challenge_target_index
               int
               (help "The index of current challenge target.")
            )
            (challenge_target_score
               int
               (help "The target score of current challenge.")
            )
            (challenge_target_rival
               string
               (help "The name of current challenge rival.")
            )
            (challenge_mission_index
               int
               (help "The index of the challenge mission target.")
            )
            (challenge_mission_score
               int
               (help "The target score of challenge mission.")
            )
            (is_challenging_self bool (help "Is the player's rival himself?"))
         )
         (join_state kJoinPlaying)
         (side kSkeletonLeft)
         (score 0)
         (cumulative_score 0)
         (score_multiplier 1.0)
         (performance_state high)
         (performance_index 0)
         (start_score_move_index 0)
         (rating move_awesome)
         (final_pose_rating move_ok)
         (last_move_index -1)
         (tagged_moves ())
         (num_perfect 0)
         (num_awesome 0)
         (num_gold 0)
         (rating_frac 0.0)
         (crew crew01)
         (using_fitness FALSE)
         (fitness_current_met 0.0)
         (difficulty easy)
         (player_present FALSE)
         (player_tooclose FALSE)
         (player_close_top FALSE)
         (player_close_bottom FALSE)
         (player_close_right FALSE)
         (player_close_left FALSE)
         (player_name "")
         (dancer '')
         (identifying kIdentityStatus_None)
         (in_freestyle FALSE)
         (has_valid_challenge_data FALSE)
         (num_challenge_targets 0)
         (challenge_target_index 0)
         (challenge_mission_index 0)
         (challenge_target_score 0)
         (challenge_target_rival "")
         (challenge_mission_score 0)
         (is_challenging_self FALSE)
         (supported_events
            (
               (move_finished
                  (editor
                     (move_player_index int (help "which player index finished the move"))
                     (move_result
                        symbol
                        (list (FEEDBACK_STATES))
                        (help "how well the player did on this move")
                     )
                  )
                  (move_player_index 0)
                  (move_result move_perfect)
               )
               (player_join
                  (editor (player_join_index int (help "Index of player joining")))
                  (player_join_index 0)
               )
               (player_quit
                  (editor (player_quit_index int (help "Index of player quitting")))
                  (player_quit_index 0)
               )
               peak_start
               peak_stop
               (show_hud
                  (editor (animate bool (help "show with animating")))
                  (animate TRUE)
               )
               (hide_hud
                  (editor (animate bool (help "show with animating")))
                  (animate TRUE)
               )
               show_join_correction
               hide_join_correction
               count_in
               side_moved
               rhythmbattle_inthezone
               rhythmbattle_outthezone
               rhythmbattle_swag_jacked
            )
         )
      )
      (audio_channels
         (editor
            (channel0 float)
            (channel1 float)
            (channel2 float)
            (channel3 float)
            (channel4 float)
            (channel5 float)
            (channel6 float)
            (channel7 float)
         )
         (channel0 0.0)
         (channel1 0.0)
         (channel2 0.0)
         (channel3 0.0)
         (channel4 0.0)
         (channel5 0.0)
         (channel6 0.0)
         (channel7 0.0)
      )
   )
)