(WorldTrackDir
   (description "Top-level dir to hold plots and a TrackDir")
   (superclasses RndDir)
   (editor
      (current_plot_scheme
         file
         (help "Which plot file to preview in Milo.  Not serialized!")
      )
   )
   (allowed_dirs)
)
(TrackDir
   (description "Track class.  Manages TrackWidget instances.")
   (superclasses PanelDir)
   (allowed_dirs)
   (editor
      (y_per_beat_easy
         float
         (range 1 10000)
         (help "World units the smasher moves per beat on easy difficulty")
      )
      (y_per_beat_medium
         float
         (range 1 10000)
         (help "World units the smasher moves per beat on medium difficulty")
      )
      (y_per_beat_hard
         float
         (range 1 10000)
         (help "World units the smasher moves per beat on hard difficulty")
      )
      (y_per_beat_expert
         float
         (range 1 10000)
         (help "World units the smasher moves per beat on expert difficulty")
      )
      (world_camera
         object
         (class Cam)
         (help "Camera to use for drawing terrain and plots")
      )
      (smasher_trans
         object
         (class Trans)
         (help "Thing that code moves around to position the smasher")
      )
   )
   (types)
)
(SingleTrackDir
   (description "Single track with widgets on it.")
   (superclasses RndDir)
   (allowed_dirs)
   (editor
      (bonus_gem_tail_mat
         object
         (class Mat)
         (help "Alternate material to use for bonus gem tails")
      )
   )
)
(TrackWidget
   (description "Base class of TrackWidget.  Will soon be removed")
   (superclasses Draw Poll)
   (allowed_dirs RndDir)
   (types)
   (ext wid)
   (editor)
)
(TrackWidgetMultiMesh
   (description "Fast TrackWidget implemented using MultiMesh.")
   (superclasses TrackWidget)
   (allowed_dirs RndDir)
   (types)
   (ext wid)
   (editor
      (multi_meshes
         (array object (class MultiMesh))
         (help "The MultiMeshes that the TrackWidget use.")
      )
   )
)
(TrackWidgetRndDir
   (description "Slow TrackWidget implemented using RndDir.")
   (superclasses TrackWidget)
   (allowed_dirs RndDir)
   (types)
   (ext wid)
   (editor
      (rnd_dir
         object
         (class RndDir)
         (help "The RndDir that the TrackWidget uses.")
      )
   )
)
(TrackRegion
   (description "Defines an overlay used to mark a region of the track.")
   (superclasses)
   (ext region)
   (editor
      (mesh
         object
         (class Mesh)
         (refresh start_bone end_bone)
         (help "Which mesh to draw.  Should be skinned to exactly two bones.")
      )
      (start_bone
         object
         (class Trans)
         (help "Bone to place at the beginning of the region")
      )
      (end_bone
         object
         (class Trans)
         (help "Bone to place at the beginning of the region")
      )
      (z_adjustment float (help "Vertical adjustment to be applied to the mesh"))
      (segment_length
         float
         (help "Length of segments making up the overlay, in seconds")
      )
      (current_duration
         float
         (help
            "Duration of the current overlay in seconds.  Can be used to drive the texture transform of the material."
         )
      )
      (switch_bones
         script
         (script
            {do
               ($tmp [start_bone])
               {set [start_bone] [end_bone]}
               {set [end_bone] $tmp}
            }
         )
         (refresh start_bone end_bone)
      )
   )
)
(PlotDir
   (description "Used to define plots.")
   (superclasses RndDir)
   (allowed_dirs RndDir TrackDir)
   (editor
      (flat bool (help "If this plot has to go on flat terrain."))
      (section_type int (help "Type of section this blot can be used for"))
      (toggle_milo_test
         script
         (script {$this toggle_milo_test})
         (help "Toggle running the plot in test mode")
         (label "toggle")
      )
   )
   (types)
)
(PlotDef
   (description "You have to put one in a plot milo file.")
   (superclasses)
   (allowed_dirs RndDir)
   (editor
      (intensity
         int
         (help
            "Intensity of the song when using this plot, from 1(calm) to 3(intense)"
         )
      )
      (only_once bool (help "If this plot should only appear once."))
      (end bool (help "If this is the end of the world plot."))
      (use_hack_position
         bool
         (help
            "If this plot was not exported at (0,0), it will need to hack it's position (this is for older plots)"
         )
      )
      (placement_settings
         symbol
         (list (either_side together_only left_side_only right_side_only))
         (help
            "Can the left and right sides of the plot be placed independently?  Does this plot even have a left and right side?"
         )
      )
      (has_bridge
         bool
         (help "Does this plot have a bridge that goes over the track?")
      )
      (section_boundary_restriction
         symbol
         (help "Should this plot only be placed on section boundaries?")
         (list (no_constraint any_boundary))
      )
      (is_expensive
         bool
         (help "Is this plot tagged as computationally expensive?")
      )
      (environment
         object
         (class Environ)
         (help "Custom environment to use for this plot")
      )
      (length int (help "How long is this plot?"))
      (total_verts
         int
         (read_only TRUE)
         (no_test)
         (help "How many total verts will this plot render")
      )
      (vert_budget
         int
         (read_only TRUE)
         (no_test)
         (help "How many total verts should this plot be limited to")
      )
      (set_geom_owners
         script
         (script {$this set_geom_owners})
         (help "Instances mesh geometry in plot.")
         (label "Set Geom Owners")
      )
      (char_anims
         (array object (class Anim))
         (help "Code-controlled character animations in this plot.")
      )
   )
   (types)
)
(SyncWorldFx
   (description "Settings for sync world effects.")
   (superclasses)
   (ext wfx)
   (types)
   (editor
      (world_environ
         object
         (class Environ)
         (help "Lighting environment for the world.")
      )
      (attach_to_cam_trans
         object
         (class Trans)
         (alias "attach-to-cam trans")
         (help
            "Trans node which will be parented to the camera/smasher when the game runs."
         )
      )
      (attach_to_finish_trans
         object
         (class Trans)
         (alias "attach-to-finish trans")
         (help
            "Trans node which will be parented to where the finish plot is when the game runs."
         )
      )
      (attach_to_horizon_trans
         object
         (class Trans)
         (alias "attach-to-horizon trans")
         (help "Trans node which will follow the horizon when the game runs.")
      )
      (attach_to_horizon_dist
         float
         (alias "attach-to-horizon dist")
         (help
            "Distance from the camera to set the horizon for the purposes of the attach-to-horizon trans."
         )
      )
      (default_preset
         object
         (class LightPreset)
         (help "Default lighting preset to use.")
      )
      (default_postproc
         object
         (class PostProc)
         (help "Default post-proc to use.")
      )
      (default_dof_focal_dist
         float
         (help "Default depth-of-field focal distance.")
      )
      (default_dof_blur_depth
         float
         (range 0.0 1.0)
         (help "Default depth-of-field blur depth.")
      )
      (default_dof_min_blur
         float
         (range 0.0 1.0)
         (help "Default depth-of-field maximum blur.")
      )
      (default_dof_max_blur
         float
         (range 0.0 1.0)
         (help "Default depth-of-field minimum blur.")
      )
      (post_proc_mods
         (struct
            (bloom_intensity_offset
               float
               (alias "bloom intensity offset")
               (help "Additive offset to post-proc bloom intensity.")
            )
            (motion_blur_blend_offset
               float
               (alias "motion blur previous frame blend offset")
               (help
                  "Additive offset to post-proc motion blur previous frame blend (-1 to 1)."
               )
               (range -1.0 1.0)
            )
            (color_brightness_offset
               float
               (alias "color brightness offset")
               (help "Additive offset to post-proc color brightness (-200 to 200).")
               (range -200.0 200.0)
            )
            (color_out_hi_offset
               (indent
                  (color_out_hi_offset_r
                     float
                     (alias "r")
                     (range -255.0 255.0)
                     (help
                        "Red component of additive offset to post-proc color level out hi (-255 to 255)."
                     )
                  )
                  (color_out_hi_offset_g
                     float
                     (alias "g")
                     (range -255.0 255.0)
                     (help
                        "Green component of additive offset to post-proc color level out hi (-255 to 255)."
                     )
                  )
                  (color_out_hi_offset_b
                     float
                     (alias "b")
                     (range -255.0 255.0)
                     (help
                        "Blue component of additive offset to post-proc color level out hi (-255 to 255)."
                     )
                  )
               )
               (help "Additive offset to post-proc color level out hi.")
               (alias "color level out hi offset")
            )
         )
         (alias "post proc modifiers")
      )
      (cur_preset
         object
         (class LightPreset)
         (read_only TRUE)
         (help "Currently selected lighting preset (driven by Flow).")
      )
      (cur_postproc
         object
         (class PostProc)
         (read_only TRUE)
         (help "Currently selected post-proc (driven by Flow).")
      )
   )
   (flow_commands
      (set_postproc
         (editor
            (postproc
               object
               (class PostProc)
               (help "Post-proc to change to.")
            )
            (blend_time float (help "Blend time in seconds."))
         )
         (postproc '')
         (blend_time 0.0)
      )
      (set_preset
         (editor
            (preset
               object
               (class LightPreset)
               (help "Lighting preset to change to.")
            )
            (blend_time float (help "Blend time in seconds."))
         )
         (preset '')
         (blend_time 0.0)
      )
   )
)
#define kTrackType_NonCaptured (0)
#define kTrackType_Captured (1)
#define kTrackType_Always (2)
(TrackGeom
   (description "Renders a single track as a continuous ribbon")
   (superclasses Draw Trans)
   (ext trkgeo)
   (types)
   (editor
      (track_type
         int
         (alias "track type")
         (list ("kTrackType_NonCaptured" "kTrackType_Captured" "kTrackType_Always"))
         (help "Which type of track this is a piece of geometry for.")
      )
      (spline
         object
         (class Spline)
         (help "Spline which defines the shape of the track")
      )
      (material object (class Mat))
      (geom_owner
         object
         (class TrackGeom)
         (alias "geom owner")
         (no_test)
         (refresh
            spline
            material
            segment_mesh
            segment_subdivisions
            segments_per_ctrl_point
         )
      )
      (segment_mesh
         object
         (class Mesh)
         (alias "segment mesh")
         (help "Mesh which defines the track cross-section.")
         (read_only {!= [geom_owner] $this})
         (refresh material)
      )
      (segment_subdivisions
         int
         (alias "segment subdivisions")
         (range 1 10000)
         (read_only {!= [geom_owner] $this})
         (help
            "Number of times to subdivide the segment mesh in Y when extruding (min 1)."
         )
      )
      (segments_per_ctrl_point
         int
         (alias "segments per ctrl point")
         (range 1 10000)
         (read_only {!= [geom_owner] $this})
         (help
            "Number of times to repeat the segment mesh in a single spline section (overridden in-game, so don't worry about it too much) (min 1)"
         )
      )
      #ifdef _DEBUG
      (draw_start_segment
         int
         (no_test)
         (refresh draw_end_segment)
         (help
            "(DEBUG only) Segment to start drawing from (set -1 to start from the beginning)"
         )
      )
      (draw_end_segment
         int
         (no_test)
         (refresh draw_start_segment)
         (help
            "(DEBUG only) Segment to stop drawing at (set -1 to stop at the end)"
         )
      )
      #endif
      (charge_effect_settings
         (indent
            (charge_effect
               bool
               (alias enable)
               (refresh
                  charge_effect_beat_pulse
                  charge_effect_width_frac
                  charge_effect_amplitude
                  charge_effect_freq
                  charge_effect_period_offset
                  charge_effect_scroll_speed
                  charge_effect_axis_angle
                  test_charge_end_t
                  toggle_test
               )
               (help "Apply track charge effect to this piece of track geometry.")
            )
            (charge_effect_beat_pulse
               float
               (alias 'beat pulse')
               (range -1.0 1.0)
               (read_only {! [charge_effect]})
               (help
                  "Current position of the wave within its cycle (generally driven by a beat-driven propanim) (-1 to 1)."
               )
            )
            (charge_effect_width_frac
               float
               (alias width)
               (range 0.0 1000.0)
               (read_only {! [charge_effect]})
               (help "Width of the charge band (fraction of total width, min 0).")
            )
            (charge_effect_amplitude
               float
               (alias amplitude)
               (range 0.0 1000.0)
               (read_only {! [charge_effect]})
               (help "Amplitude of the wave (min 0).")
            )
            (charge_effect_freq
               float
               (alias frequency)
               (range 1.0e-2 1000.0)
               (read_only {! [charge_effect]})
               (help "Spatial frequency of the wave.")
            )
            (charge_effect_period_offset
               float
               (alias 'period offset')
               (range -1.0 1.0)
               (read_only {! [charge_effect]})
               (help
                  "Amount to offset the wave within its spatial period along the track (-1 to 1)."
               )
            )
            (charge_effect_scroll_speed
               float
               (alias 'scroll speed')
               (read_only {! [charge_effect]})
               (help "Speed to scroll the wave forward along the track.")
            )
            (charge_effect_axis_angle
               float
               (alias 'axis angle')
               (range 0.0 360.0)
               (read_only {! [charge_effect]})
               (help
                  "Angle which defines axis along which the charge effect deforms the geometry (0 to 360, 0 gives you +X, 90 gives you +Z)."
               )
            )
            (test_charge_end_t
               float
               (alias 'test charge end T')
               (no_test)
               (read_only {! [charge_effect]})
               (help "Test spline parameter value at which charge effect should end")
            )
            (toggle_test
               script
               (alias 'toggle test scroll')
               (read_only {! [charge_effect]})
               (script {$this toggle_test_charge_effect})
               (help
                  "Toggle testing of the charge effect scrolling (to test beat, run the beat anim, to test charge level, use the property event provider)."
               )
            )
         )
         (alias 'charge effect settings')
      )
   )
)
(SplineDeform
   (description "Applies deformation effects to a spline.")
   (superclasses Poll)
   (ext sdfm)
   (types)
   (editor
      (spline
         object
         (class Spline)
         (help "Spline to be deformed.")
      )
      (nodes (array object (class SplineDeformNode)))
   )
)
(SplineDeformNode
   (description
      "Generic node class for spline deformation.  Does nothing on its own, you should create one of the derived classes instead."
   )
   (allowed_dirs)
   (superclasses)
   (ext sdfmnode)
   (types)
   (editor)
)
(SplineDeformStraighten
   (description "Spline deform node to straighten the spline.")
   (superclasses SplineDeformNode)
   (ext sstraight)
   (types)
   (editor
      (start_y float (alias "start y"))
      (straighten_amount
         float
         (alias "straighten amount")
         (range 0.0 1.0)
         (help "Amount to straighten the spline (0 to 1).")
      )
   )
)
(SplineDeformBend
   (description "Spline deform node to apply a bend to the spline.")
   (superclasses SplineDeformNode)
   (ext sbend)
   (types)
   (editor
      (start_y float (alias "start y"))
      (left_right
         (indent
            (horiz_bend_per_100_y
               float
               (alias "bend per 100 y")
               (help "Degrees of ever-increasing bend per 100 units of distance in Y.")
            )
            (horiz_periodic_bend_per_100_y
               float
               (alias "periodic bend per 100 y")
               (help "Degrees of periodic bend per 100 units of distance in Y.")
            )
            (horiz_periodic_bend_freq
               float
               (alias "periodic bend freq")
               (range 0.0 1000.0)
               (help
                  "Frequency of the periodic bend (in terms of 100 units of distance in Y)."
               )
            )
         )
         (alias "left/right")
         (help "Horizontal bend of the spline.")
      )
      (up_down
         (indent
            (vert_bend_per_100_y
               float
               (alias "bend per 100 y")
               (help "Degrees of ever-increasing bend per 100 units of distance in Y.")
            )
            (vert_periodic_bend_per_100_y
               float
               (alias "periodic bend per 100 y")
               (help "Degrees of periodic bend per 100 units of distance in Y.")
            )
            (vert_periodic_bend_freq
               float
               (alias "periodic bend freq")
               (range 0.0 1000.0)
               (help
                  "Frequency of the periodic bend (in terms of 100 units of distance in Y)."
               )
            )
         )
         (alias "up/down")
         (help "Vertical bend of the spline.")
      )
   )
)
(SplineDeformTwist
   (description "Spline deform node to apply a twist along the spline.")
   (superclasses SplineDeformNode)
   (ext stwist)
   (types)
   (editor
      (start_y float (alias "start y"))
      (roll_per_100_y
         float
         (no_test)
         (alias "roll per 100 y")
         (help "Degrees of ever-increasing roll per 100 units of distance in Y.")
      )
      (periodic_roll_per_100_y
         float
         (no_test)
         (alias "periodic roll per 100 y")
         (help "Degrees of periodic roll per 100 units of distance in Y.")
      )
      (periodic_roll_freq
         float
         (no_test)
         (alias "periodic roll freq")
         (range 0.0 1000.0)
         (help
            "Frequency of the periodic roll (in terms of 100 units of distance in Y)."
         )
      )
   )
)