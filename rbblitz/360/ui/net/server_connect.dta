#define kServerConnectPanel_Inactive (0)
#define kServerConnectPanel_StartProcess (1)
#define kServerConnectPanel_StartSongCache (2)
#define kServerConnectPanel_LoadingSongCache (3)
#define kServerConnectPanel_CreateSongCache (4)
#define kServerConnectPanel_MissingSongCache (5)
#define kServerConnectPanel_CorruptSongCache (6)
#define kServerConnectPanel_EndSongCache (7)
#define kServerConnectPanel_StartGlobalOptions (8)
#define kServerConnectPanel_LoadingGlobalOptions (9)
#define kServerConnectPanel_CreateGlobalOptions (10)
#define kServerConnectPanel_MissingGlobalOptions (11)
#define kServerConnectPanel_CorruptGlobalOptions (12)
#define kServerConnectPanel_EndGlobalOptions (13)
#define kServerConnectPanel_NetStartUtility (14)
#define kServerConnectPanel_StartLogin (15)
#define kServerConnectPanel_EnterName (16)
#define kServerConnectPanel_EnterPassword (17)
#define kServerConnectPanel_NoValidLoginCandidate (18)
#define kServerConnectPanel_Connecting (19)
#define kServerConnectPanel_IncorrectPassword (20)
#define kServerConnectPanel_FailedNoAccount (21)
#define kServerConnectPanel_CreatingAccount (22)
#define kServerConnectPanel_Failed (23)
#define kServerConnectPanel_EndLoginSuccess (24)
#define kServerConnectPanel_StartPostLogin (25)
#define kServerConnectPanel_RequestingSaveData (26)
#define kServerConnectPanel_EnumeratingFriends (27)
#define kServerConnectPanel_StartEnumeratingContent (28)
#define kServerConnectPanel_EnumeratingContent (29)
#define kServerConnectPanel_FetchingConfig (30)
#define kServerConnectPanel_CheckingFacebookPermission (31)
#define kServerConnectPanel_RequestFacebookToken (32)
#define kServerConnectPanel_RequestingFacebookToken (33)
#define kServerConnectPanel_LinkingFacebook (34)
#define kServerConnectPanel_OfflineMode (35)
#define kServerConnectPanel_Connected (36)
#define kServerConnectPanel_RegisterTrophies (37)
#define kServerConnectPanel_TrophiesFailedToRegister (38)
#define kServerConnectPanel_NoSpaceGlobalOptions (39)
#define kServerConnectPanel_WaitingForTrialEnumeration (40)
{new ServerConnectPanel
   server_connect_panel
   (file "server_connect.milo")
   (enter {$this start_connect_process {user_mgr get_participating_user}})
   (update_state
      ($state)
      {status.lbl set
         text_token
         {switch $state
            (kServerConnectPanel_Inactive '')
            (kServerConnectPanel_LoadingSongCache song_info_cache_loading)
            (kServerConnectPanel_CreateSongCache song_info_cache_create)
            (kServerConnectPanel_MissingSongCache song_info_cache_missing)
            (kServerConnectPanel_CorruptSongCache song_info_cache_corrupt)
            (kServerConnectPanel_LoadingGlobalOptions global_options_loading)
            (kServerConnectPanel_CreateGlobalOptions global_options_create)
            (kServerConnectPanel_MissingGlobalOptions global_options_missing)
            (kServerConnectPanel_CorruptGlobalOptions global_options_corrupt)
            (kServerConnectPanel_EnterName server_connect_enter_name)
            (kServerConnectPanel_EnterPassword server_connect_enter_password)
            (kServerConnectPanel_NoValidLoginCandidate
               server_connect_no_valid_login_candidate
            )
            (kServerConnectPanel_IncorrectPassword server_connect_incorrect_password)
            (kServerConnectPanel_FailedNoAccount server_connect_create_account)
            (kServerConnectPanel_CreatingAccount server_connect_creating_account)
            (kServerConnectPanel_Failed server_connect_failed)
            (kServerConnectPanel_EnumeratingContent server_connect_enumerating_content)
            (kServerConnectPanel_Connected server_connect_connected)
            (kServerConnectPanel_OfflineMode server_connect_offline_mode)
            (kServerConnectPanel_RegisterTrophies server_connect_registering_trophies)
            (kServerConnectPanel_NoSpaceGlobalOptions global_options_no_space)
            server_connect_connecting
         }
      }
      #ifdef HX_PS3
      {if {== $state kServerConnectPanel_TrophiesFailedToRegister}
         {status.lbl set_token_fmt trophy_disk_space_error {trophy_file_size_mb}}
      }
      #endif
      {enter_name.grp set_showing {== $state kServerConnectPanel_EnterName}}
      {enter_password.grp set_showing
         {== $state kServerConnectPanel_EnterPassword}
      }
      {continue.ihp set_showing
         {'||'
            {== $state kServerConnectPanel_Connected}
            {== $state kServerConnectPanel_Failed}
            {== $state kServerConnectPanel_FailedNoAccount}
            {== $state kServerConnectPanel_NoValidLoginCandidate}
            {== $state kServerConnectPanel_CreateSongCache}
            {== $state kServerConnectPanel_MissingSongCache}
            {== $state kServerConnectPanel_CorruptSongCache}
            {== $state kServerConnectPanel_CreateGlobalOptions}
            {== $state kServerConnectPanel_MissingGlobalOptions}
            {== $state kServerConnectPanel_CorruptGlobalOptions}
            {== $state kServerConnectPanel_OfflineMode}
         }
      }
      {back.ihp set_showing
         {'||'
            {== $state kServerConnectPanel_IncorrectPassword}
            {== $state kServerConnectPanel_Failed}
            {== $state kServerConnectPanel_FailedNoAccount}
            {== $state kServerConnectPanel_NoValidLoginCandidate}
            {== $state kServerConnectPanel_OfflineMode}
         }
      }
      {skip.ihp set_showing
         {'||'
            {== $state kServerConnectPanel_EnterName}
            {== $state kServerConnectPanel_IncorrectPassword}
            {== $state kServerConnectPanel_CreateSongCache}
            {== $state kServerConnectPanel_MissingSongCache}
            {== $state kServerConnectPanel_CorruptSongCache}
            {== $state kServerConnectPanel_CreateGlobalOptions}
            {== $state kServerConnectPanel_MissingGlobalOptions}
            {== $state kServerConnectPanel_CorruptGlobalOptions}
         }
      }
      {unless {== $state kServerConnectPanel_EnterName}
         {typing_name.lbl set text_token ''}
      }
      {unless {== $state kServerConnectPanel_EnterPassword}
         {typing_password.lbl set text_token ''}
      }
   )
   (get_save_data save_data)
   (name_updated
      ($name_entry)
      {switch {$this get_state}
         (kServerConnectPanel_EnterName
            {typing_name.lbl set_name_entry $name_entry}
         )
         (kServerConnectPanel_EnterPassword
            {typing_password.lbl set_name_entry $name_entry TRUE}
         )
      }
   )
   (BUTTON_DOWN_MSG
      {do
         ($state {$this get_state})
         {switch $action
            (kAction_Confirm
               {shell_sfx play_select_short}
               {cond
                  ({'||'
                        {== $state kServerConnectPanel_OfflineMode}
                        {== $state kServerConnectPanel_Connected}}
                     {{splash_panel loaded_dir} set state main_menu}
                     {ui goto_screen splash_screen}
                  )
                  ({'||'
                        {== $state kServerConnectPanel_Failed}
                        {== $state kServerConnectPanel_NoValidLoginCandidate}}
                     {$this set_state kServerConnectPanel_OfflineMode}
                  )
                  ({'||'
                        {== $state kServerConnectPanel_CreateSongCache}
                        {== $state kServerConnectPanel_MissingSongCache}
                        {== $state kServerConnectPanel_CorruptSongCache}}
                     {saveload_mgr select_song_cache_choice TRUE}
                  )
                  ({'||'
                        {== $state kServerConnectPanel_CreateGlobalOptions}
                        {== $state kServerConnectPanel_MissingGlobalOptions}
                        {== $state kServerConnectPanel_CorruptGlobalOptions}}
                     {saveload_mgr select_global_options_choice TRUE}
                  )
                  ({== $state kServerConnectPanel_FailedNoAccount}
                     {$this create_account}
                  )
                  ({== $state kServerConnectPanel_TrophiesFailedToRegister})
               }
            )
            (kAction_Option
               {if {skip.ihp get showing}
                  {cond
                     ({'||'
                           {== $state kServerConnectPanel_CreateSongCache}
                           {== $state kServerConnectPanel_MissingSongCache}
                           {== $state kServerConnectPanel_CorruptSongCache}}
                        {saveload_mgr select_song_cache_choice FALSE}
                     )
                     ({'||'
                           {== $state kServerConnectPanel_CreateGlobalOptions}
                           {== $state kServerConnectPanel_MissingGlobalOptions}
                           {== $state kServerConnectPanel_CorruptGlobalOptions}}
                        {saveload_mgr select_global_options_choice FALSE}
                     )
                     ({== $state kServerConnectPanel_TrophiesFailedToRegister})
                     (TRUE
                        {{splash_panel loaded_dir} set state main_menu}
                        {ui goto_screen splash_screen}
                     )
                  }
               }
            )
            (kAction_Cancel
               {shell_sfx play_back}
               {if {back.ihp get showing}
                  {user_mgr set_participating_user ''}
                  {{splash_panel loaded_dir} set state start}
                  {ui goto_screen splash_screen}
               }
            )
         }
      }
   )
}
{new UIScreen
   server_connect_screen
   (panels shell_music_panel splash_panel server_connect_panel)
   (focus server_connect_panel)
   (enter {{splash_panel loaded_dir} set state waiting})
}