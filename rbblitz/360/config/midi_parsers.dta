#define kBandBassFocus (1)
#define kBandDrumFocus (2)
#define kBandGuitarFocus (4)
#define kBandMicFocus (8)
#define kBandNoBehind (16)
#define kBandForceFar (32)
#define kBandForceCloseup (64)
#define kBandNoCloseup (128)
(init
   {func rt_test_space
      ($before $after)
      {&& {> $mp.before_delta_sec $before} {> $mp.after_delta_sec $after}}
   }
   {new MidiParser
      stagekit_fogstrobe_parser
      (track_name VENUE)
      (compress TRUE)
      (message_self TRUE)
      (add_fog_keyframe
         ($key)
         {$banddirector add_symbol_key
            stagekit_fog
            $key
            {beat_to_seconds $mp.start}
         }
      )
      (text
         {if $banddirector
            {cond
               ({has_substr
                     $mp.val
                     "FogOn"}
                  {$this add_fog_keyframe on}
               )
               ({has_substr
                     $mp.val
                     "FogOff"}
                  {$this add_fog_keyframe off}
               )
            }
         }
      )
   }
   #define CAMERA_OFFSET (-0.125)
   #define MAX_CAM_SONG_LENGTH (1000000)
   #define CAM_BITS (
      (kBandBassFocus
         kBandDrumFocus
         kBandGuitarFocus
         kBandMicFocus
         kBandNoBehind
         kBandForceFar
         kBandForceCloseup
         kBandNoCloseup
      )
   )
   {if {&& $banddirector {$banddirector get propanim}}
      {new MidiParser
         guitarist_parser
         (track_name 'PART GUITAR')
         (init {$banddirector clear_symbol_keys guitar_intensity})
         (text
            {if {find_elem (BAND_GUITAR_EVENTS) $mp.val}
               {$banddirector add_symbol_key
                  guitar_intensity
                  $mp.val
                  {beat_to_seconds {- $mp.start 1}}
               }
            }
         )
      }
      {new MidiParser
         bassist_parser
         (track_name 'PART BASS')
         (init {$banddirector clear_symbol_keys bass_intensity})
         (text
            {if {find_elem (BAND_BASS_EVENTS) $mp.val}
               {$banddirector add_symbol_key
                  bass_intensity
                  $mp.val
                  {beat_to_seconds {- $mp.start 1}}
               }
            }
         )
      }
      {new MidiParser
         drummer_parser
         (track_name 'PART DRUMS')
         (init {$banddirector clear_symbol_keys drum_intensity})
         (text
            {if {find_elem (BAND_DRUM_EVENTS) $mp.val}
               {$banddirector add_symbol_key
                  drum_intensity
                  $mp.val
                  {beat_to_seconds {- $mp.start 1}}
               }
            }
         )
      }
      {new MidiParser
         vocal_parser
         (track_name 'PART VOCALS')
         (init {$banddirector clear_symbol_keys mic_intensity})
         (text
            {if {find_elem (BAND_MIC_EVENTS) $mp.val}
               {$banddirector add_symbol_key
                  mic_intensity
                  $mp.val
                  {beat_to_seconds {- $mp.start 1}}
               }
            }
         )
      }
      {new MidiParser
         keyboard_parser
         (track_name 'PART KEYS')
         (init {$banddirector clear_symbol_keys keyboard_intensity})
         (text
            {if {find_elem (BAND_KEYBOARD_EVENTS) $mp.val}
               {$banddirector add_symbol_key
                  keyboard_intensity
                  $mp.val
                  {beat_to_seconds {- $mp.start 1}}
               }
            }
         )
      }
      {do
         ($ver
            {do
               {cond
                  ({exists fake_songmgr}
                     {fake_songmgr get_data [song_name] version}
                  )
                  ({exists song_mgr}
                     {{song_mgr get_meta_data [song_name]} version}
                  )
                  {notify "Hey, no fake_songmgr or song_mgr for" [song_name]}
                  30
               }
            }
         )
         {if {< $ver 30}
            {new MidiParser
               world_crowd_parser
               (track_name EVENTS)
               (init {$banddirector clear_symbol_keys crowd})
               (text
                  {if {find_elem (BAND_CROWD_EVENTS) $mp.val}
                     {$banddirector add_symbol_key crowd $mp.val {beat_to_seconds $mp.start}}
                  }
               )
            }
            {new MidiParser
               singalong
               (track_name VENUE)
               (allowed_notes (85 86 87))
               (midi
                  {$banddirector add_symbol_key
                     {switch $mp.val
                        (85 part3_sing)
                        (86 part4_sing)
                        (87 part2_sing)
                     }
                     singalong_on
                     {beat_to_seconds $mp.start}
                  }
                  {$banddirector add_symbol_key
                     {switch $mp.val
                        (85 part3_sing)
                        (86 part4_sing)
                        (87 part2_sing)
                     }
                     singalong_off
                     {beat_to_seconds $mp.end}
                  }
               )
            }
            {new MidiParser
               world_postproc_parser
               (track_name VENUE)
               (init)
               (allowed_notes (96 97 98 99 100 101 102 103 104 105 106 107 108 109 110))
               (midi
                  {-= $mp.start 0.15}
                  {-= $mp.end 0.15}
                  {if {< $mp.length 0.5}
                     {set $mp.end $mp.start}
                     {set $mp.length 0}
                  }
                  {do
                     ($startSec {beat_to_seconds $mp.start})
                     ($endSec {beat_to_seconds $mp.end})
                     {$banddirector midi_add_postproc
                        {switch $mp.val
                           (96 ProFilm_a.pp)
                           (97 contrast_a.pp)
                           (98 film_16mm.pp)
                           (99 film_sepia_ink.pp)
                           (100 film_silvertone.pp)
                           (101 photo_negative.pp)
                           (102 photocopy.pp)
                           (103 ProFilm_a.pp)
                           (104 ProFilm_b.pp)
                           (105 ProFilm_mirror_a.pp)
                           (106 film_blue_filter.pp)
                           (107 video_a.pp)
                           (108 video_bw.pp)
                           (109 video_security.pp)
                           (110 video_trails.pp)
                           kDataUnhandled
                        }
                        $startSec
                        {- $endSec $startSec}
                     }
                  }
               )
            }
            {new MidiParser
               world_bonusfx_parser
               (track_name VENUE)
               (compress TRUE)
               (text
                  {if {find_elem (bonusfx bonusfx_optional) $mp.val}
                     {$banddirector add_symbol_key
                        world_event
                        bonusfx
                        {beat_to_seconds $mp.start}
                     }
                  }
               )
            }
            {new MidiParser
               world_lighting_pst_keyframes
               (track_name VENUE)
               (init {set [zero_length] TRUE})
               (compress TRUE)
               (allowed_notes (48 49 50))
               (get_keyframe
                  {switch $mp.val
                     (48 next)
                     (49 prev)
                     (50 first)
                     kDataUnhandled
                  }
               )
               (midi
                  {$banddirector add_symbol_key
                     lightpreset_keyframe
                     {$this get_keyframe}
                     {beat_to_seconds $mp.start}
                  }
               )
            }
            {new MidiParser
               world_lighting_presets
               (track_name VENUE)
               (legacy_presets FALSE)
               (init
                  {set [zero_length] TRUE}
                  {set [legacy_presets] FALSE}
               )
               (term
                  {if [legacy_presets]
                     {$banddirector midi_cleanup_presets}
                  }
               )
               (get_category
                  {switch $mp.val
                     (verse verse)
                     (chorus chorus)
                     (lighting '')
                     IGNORED_EVENT
                  }
               )
               (get_adjective
                  {if_else {== lighting $mp.val}
                     {elem $mp.data 1}
                     ''
                  }
               )
               (text
                  {set $mp.start {max 5 $mp.start}}
                  {do
                     ($cat {$this get_category})
                     {if {!= $cat IGNORED_EVENT}
                        {$banddirector midi_add_preset
                           $cat
                           {$this get_adjective}
                           {beat_to_seconds $mp.start}
                        }
                        {set [legacy_presets] TRUE}
                     }
                  }
               )
            }
            {new MidiParser
               world_spotlight_focus
               (track_name VENUE)
               (compress TRUE)
               (append_length TRUE)
               (init {set [start_offset] 0.25})
               (allowed_notes (37 38 39 40))
               (get_instrument
                  {switch $mp.val
                     (37 spot_bass)
                     (38 spot_drums)
                     (39 spot_guitar)
                     (40 spot_vocal)
                     kDataUnhandled
                  }
               )
               (midi
                  {$banddirector add_symbol_key
                     {$this get_instrument}
                     on
                     {beat_to_seconds $mp.start}
                  }
                  {$banddirector add_symbol_key
                     {$this get_instrument}
                     off
                     {beat_to_seconds $mp.end}
                  }
               )
            }
            {new MidiParser
               world_camera_parser
               (add_shot
                  {foreach_int $i 0 8
                     {if {>= $mp.last_time {elem $mp.last_times $i}}
                        {mask_eq $mp.camflags {elem CAM_BITS $i}}
                        {set_elem $mp.last_times $i MAX_CAM_SONG_LENGTH}
                     }
                  }
                  {$banddirector add_symbol_key
                     shot_bg
                     {$banddirector midi_shot_cat $mp.camflags}
                     {beat_to_seconds {- $mp.last_time CAMERA_OFFSET}}
                  }
                  {set $mp.last_time MAX_CAM_SONG_LENGTH}
               )
               (add_pad
                  {foreach_int $i 0 8
                     {if {>= $mp.next_dircut_pad {elem $mp.last_times $i}}
                        {mask_eq $mp.camflags {elem CAM_BITS $i}}
                        {set_elem $mp.last_times $i MAX_CAM_SONG_LENGTH}
                     }
                  }
                  {$banddirector add_symbol_key
                     shot_bg
                     {$banddirector midi_shot_cat $mp.camflags}
                     {beat_to_seconds $mp.next_dircut_pad}
                  }
                  {set $mp.next_dircut_pad MAX_CAM_SONG_LENGTH}
               )
               (check
                  {if_else {< $mp.next_dircut_pad $mp.last_time}
                     {do
                        {if {> $mp.start $mp.next_dircut_pad}
                           {handle_type ($this add_pad)}
                        }
                        {if {> $mp.start $mp.last_time}
                           {handle_type ($this add_shot)}
                        }
                     }
                     {do
                        {if {> $mp.start $mp.last_time}
                           {handle_type ($this add_shot)}
                        }
                        {if {> $mp.start $mp.next_dircut_pad}
                           {handle_type ($this add_pad)}
                        }
                     }
                  }
               )
               (track_name VENUE)
               (init
                  {set $mp.camflags 0}
                  {set $mp.last_time MAX_CAM_SONG_LENGTH}
                  {set $mp.next_dircut_pad MAX_CAM_SONG_LENGTH}
                  {set $mp.last_times
                     (0 0 0 0 0 0 0 0)
                  }
               )
               (term
                  {set $mp.start MAX_CAM_SONG_LENGTH}
                  {handle_type ($this check)}
               )
               (allowed_notes (60 61 62 63 64 70 71 72 73))
               (midi
                  {handle_type ($this check)}
                  {if_else {== $mp.val 60}
                     {set $mp.last_time $mp.start}
                     {do
                        ($op
                           {-
                              $mp.val
                              {if_else {< $mp.val 70}
                                 61
                                 66
                              }
                           }
                        )
                        {'|=' $mp.camflags {elem CAM_BITS $op}}
                        {set_elem $mp.last_times $op $mp.end}
                     }
                  }
               )
               (text
                  {switch $mp.val
                     (
                        (do_directed_cut do_optional_cut)
                        {do
                           ($start {beat_to_seconds $mp.start})
                           ($dc {elem $mp.data 1})
                           {handle_type ($this check)}
                           {set $mp.next_dircut_pad {seconds_to_beat {'+' $start 0.125}}}
                           {set $dc
                              {switch $dc
                                 (directed_guitar_cam
                                    {random_elem (directed_guitar_cam_pr directed_guitar_cam_pt)}
                                 )
                                 (directed_vocal_cam
                                    {random_elem (directed_vocals_cam_pr directed_vocals_cam_pt)}
                                 )
                                 (directed_crowd_b
                                    {random_elem (directed_crowd_b directed_crowd_b directed_crowd)}
                                 )
                                 (directed_crowd_g
                                    {random_elem (directed_crowd_g directed_crowd_g directed_crowd)}
                                 )
                                 $dc
                              }
                           }
                           {$banddirector add_symbol_key shot_bg $dc $start}
                        }
                     )
                  }
               )
            }
         }
      }
   }
   {new MidiParser
      end_of_song
      (track_name EVENTS)
      (text
         {if {&& {== $mp.val end} $banddirector}
            {$banddirector set_end {beat_to_seconds $mp.start}}
         }
      )
   }
)