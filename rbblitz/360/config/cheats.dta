(left)
(right
   (kPad_Square "Print Current Screen" {handle ({ui current_screen} print)})
   (kPad_Xbox_Y
      "Game: Double song speed"
      {if {&& {exists game} {game is_running}}
         {change_music_speed 2.0}
      }
   )
   (kPad_Select
      "Game: Normalize game speed"
      {if {&& {exists game} {game is_running}}
         {set_music_speed 1.0}
      }
   )
   (kPad_Start
      "Game: Halt game speed"
      {if {&& {exists game} {game is_running}}
         {set_music_speed 1.0e-5}
      }
   )
)
(keyboard
   (KB_F7
      ctrl
      "Toggle beatmatch visualizer output"
      {if {exists game}
         {if_else {game_cheats debug_toggle_beatmatch_visualizer}
            {cheat_display show "Beatmatch visualization is ON."}
            {cheat_display show "Beatmatch visualization is off."}
         }
      }
   )
   (0
      ctrl
      "Pause/unpause game"
      {if {game_panel is_up}
         {game_cheats debug_toggle_pause}
      }
   )
   (1
      ctrl
      "Toggle bloom"
      {set $disable_bloom {! $disable_bloom}}
      {print
         "Bloom is "
         {if_else $disable_bloom
            off
            on
         }
         "\n"
      }
   )
   (2
      ctrl
      "Toggle velocity motion blur"
      {set $disable_vel_blur {! $disable_vel_blur}}
      {print
         "Velocity motion blur is "
         {if_else $disable_vel_blur
            off
            on
         }
         "\n"
      }
   )
   (3
      ctrl
      "Toggle noise"
      {set $disable_noise {! $disable_noise}}
      {print
         "Noise is "
         {if_else $disable_noise
            off
            on
         }
         "\n"
      }
   )
   (4
      ctrl
      "Toggle motion blur"
      {set $disable_blur {! $disable_blur}}
      {print
         "Motion blur is "
         {if_else $disable_blur
            off
            on
         }
         "\n"
      }
   )
   (5
      ctrl
      "Toggle depth of field"
      {set $disable_dof {! $disable_dof}}
      {print
         "Depth of field is "
         {if_else $disable_dof
            off
            on
         }
         "\n"
      }
   )
   ('[' ctrl "Toggle in-game timer stats" {rnd toggle_timers_verbose})
   (t
      "Toggle trial mode"
      (filters safe)
      {trial_mgr toggle_trial_mode}
      {cheat_display show {sprintf "Trial mode: %d" {trial_mgr get_trial_mode}}}
   )
   #ifdef HX_XBOX
   (f
      "Toggle game offer to purchase"
      (filters safe)
      {trial_mgr toggle_offer_to_purchase}
      {cheat_display show
         {sprintf "Game will offer: %s" {trial_mgr get_offer_str_to_purchase}}
      }
   )
   #endif
   #ifdef HX_PS3
   (p
      "Toggle Store Service ID (PS3-only)"
      (value {store_panel service_id})
      (filters store safe)
      {cheat_display show
         {sprintf
            "PS3 In-Game Commerce Service ID: %s"
            {store_panel toggle_service_id}
         }
      }
   )
   #endif
   ('+'
      "Toggle Store Metadata Index"
      (value {net_cache_mgr server_type})
      (filters store safe)
      {cheat_display show
         {sprintf
            "Music Store now using %s metadata"
            {net_cache_mgr cheat_next_server}
         }
      }
   )
   (a
      ctrl
      "Game: Cycles through combinations of Autoplay"
      {if {&& {exists game} {game is_running} {! {game is_paused}}}
         {cheat_display show {game_cheats debug_cycle_autoplay}}
      }
   )
   (A
      ctrl
      "Unlock All"
      (filters safe)
      {if {user_mgr get_participating_user}
         {{user_mgr get_participating_user} set_unlock_all}
         {cheat_display show "Unlock All Active"}
      }
   )
   (B
      ctrl
      "Toggle showing the Blitz Meter"
      {game_screen set blitz_hidden {! {game_screen get blitz_hidden}}}
      {cheat_display show
         {sprint "Blitz Hidden: " {game_screen get blitz_hidden}}
      }
   )
   (d
      ctrl
      "Game: Track curve type"
      {'++' $track_curve_type}
      {set $track_curve_type {mod $track_curve_type 2}}
      {cheat_display show
         {sprint "Track curve type = " $track_curve_type "."}
      }
   )
   (c
      ctrl
      "Toggle frustum culling"
      {if_else {rnd toggle_frustum_culling}
         {cheat_display show "Frustum culling is ON."}
         {cheat_display show "Frustum culling is OFF."}
      }
   )
   (C
      ctrl
      "Game: Cycle controller layout."
      (filters safe)
      {if {exists game}
         {do
            ($layout_num {'+' {game_cheats debug_cycle_controller_layout} 1})
            {cheat_display show
               {sprint "Cycled controller layout to " $layout_num "."}
            }
         }
      }
   )
   (e
      ctrl
      "Game: Toggle track debugging."
      {if {exists game}
         {game_cheats toggle_track_debug}
      }
   )
   (F
      ctrl
      alt
      "Collect frenzy"
      {game_cheats collect_powerup frenzy}
      {cheat_display show "frenzy collected"}
   )
   (G
      "Game: Print faders"
      {if {exists audio}
         {audio print_faders}
      }
   )
   (i
      ctrl
      "Game: Toggle prop events overlay."
      {rnd toggle_overlay prop_states}
   )
   (j
      ctrl
      "GrowthCoach: IncMode"
      {if {exists growth_coach}
         {growth_coach inc_mode}
      }
   )
   (L ctrl "Toggle audio levels" {synth toggle_hud})
   (M ctrl "Toggle mutes all" {toggle_mute_global})
   (m
      ctrl
      "Game: Toggle no-fail"
      {if {exists game}
         {if_else {game_cheats debug_toggle_no_fail}
            {cheat_display show "No fail is ON."}
            {cheat_display show "No fail is off."}
         }
      }
   )
   (m
      ctrl
      alt
      "Get latest strings from Magnu"
      (filters writer)
      {do
         ($num_strings {magnu_refresh_strings})
         {cheat_display show
            {sprintf "Found %i new strings from Magnu" $num_strings}
         }
      }
   )
   (M
      ctrl
      alt
      "Collect multiplexer"
      {game_cheats collect_powerup multiplexer}
      {cheat_display show "multiplexer collected"}
   )
   (n
      ctrl
      "Cycle notify level"
      (value {elem (disable overlay modal) $notify_level})
      {do
         ($names (disable overlay modal))
         {set $notify_level {mod {'++' $notify_level} {size $names}}}
         {cheat_display show {sprint "Notify level " {elem $names $notify_level}}}
      }
   )
   (o
      ctrl
      "Game: Fill player's energy."
      {if {exists game}
         {game_cheats increment_player_energy 1.0}
      }
   )
   (o
      ctrl
      alt
      "Game: Empty player's energy."
      {if {exists game}
         {game_cheats increment_player_energy -1.0}
      }
   )
   (O ctrl "Print the symbol table" {print_symbol_table syms})
   (p
      ctrl
      "Game: Toggle force peak state."
      {if {exists game}
         {game_cheats toggle_peak}
      }
   )
   (q ctrl "Print Current Screen" {handle ({ui current_screen} print)})
   (s ctrl "Toggle scoring info" {rnd toggle_overlay score})
   (S
      ctrl
      alt
      "Collect SUPER multiplexer"
      {game_cheats collect_powerup super_multiplexer}
      {cheat_display show "SUPER multiplexer collected"}
   )
   (t ctrl "Toggle time overlay" {rnd toggle_overlay time})
   (T "Toggle track state overlay" {rnd toggle_overlay track_state})
   (T ctrl alt "Toggle per-pixel lighting on trees" {toggle_tree_per_pixel})
   (r
      ctrl
      "Allow RBN demo songs to play"
      (filters safe)
      {if {user_mgr get_participating_user}
         {{user_mgr get_participating_user} set_allow_rbn_demos}
         {cheat_display show "RBN demo songs are now available"}
      }
   )
   (R ctrl "Toggle framerate display" {rnd toggle_overlay rate})
   (S
      ctrl
      "Toggle rendering stats"
      {rnd toggle_overlay stats}
      {rnd toggle_overlay rate}
   )
   (T ctrl "Toggle profiling timers" {rnd toggle_timers})
   (t
      alt
      "Toggle profiling plots"
      {if {exists game}
         {game_cheats toggle_profile plots}
      }
   )
   (t
      ctrl
      alt
      "Toggle overlay position (top/bottom)"
      {rnd toggle_overlay_position}
   )
   (w
      ctrl
      "Game: Force a win"
      {if {exists game}
         {game_cheats win_cheat}
      }
   )
   (Y
      ctrl
      "Game: Toggle mute song stream"
      {if {exists audio}
         {if_else {audio toggle_mute_master}
            {cheat_display show "Song stream muted."}
            {cheat_display show "Song stream unmuted."}
         }
      }
   )
   (Z ctrl "Hi-reZ screen shot" {rnd hi_res_screen 3})
   ('\\'
      ctrl
      alt
      "Sync and reload locale files"
      (filters writer)
      {sync_reload_locale}
      {cheat_display show "Locale files synced and reloaded"}
   )
   (KB_UP
      ctrl
      "Game: Double song speed"
      {if {&& {exists game} {game is_running}}
         {change_music_speed 2.0}
      }
   )
   (KB_DOWN
      ctrl
      "Game: Halve song speed"
      {if {&& {exists game} {game is_running}}
         {change_music_speed 0.5}
      }
   )
   ('{'
      ctrl
      "Game: Yaw camera left"
      {if {&& {exists game} {game is_running}}
         {do
            ($newYaw {game_cheats increment_camera_yaw 0.1})
            {cheat_display show {sprintf "New camera yaw is %0.1f" $newYaw}}
         }
      }
   )
   ('}'
      ctrl
      "Game: Yaw camera right"
      {if {&& {exists game} {game is_running}}
         {do
            ($newYaw {game_cheats increment_camera_yaw -0.1})
            {cheat_display show {sprintf "New camera yaw is %0.1f" $newYaw}}
         }
      }
   )
)