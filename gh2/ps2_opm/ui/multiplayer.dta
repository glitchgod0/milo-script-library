{new GHPanel
   multi_panel
   (file multi.milo)
   (focus coop.btn)
   (enter
      {if_else {campaign is_unlocked multi_fo}
         {do
            {$this enable faceoff.btn}
            {faceoff.btn set_showing TRUE}
         }
         {do
            {$this disable faceoff.btn}
            {faceoff.btn set_showing FALSE}
         }
      }
   )
   (SELECT_MSG
      {switch $component
         (coop.btn
            {gamecfg set mode multi_coop}
            {ui goto_screen multi_coop_venue_screen}
         )
         (versus.btn
            {gamecfg set mode multi_vs}
            {ui goto_screen multi_sel_guitar_screen}
         )
         (faceoff.btn
            {gamecfg set mode multi_fo}
            {ui goto_screen multi_sel_guitar_screen}
         )
      }
   )
}
{new GHScreen
   multi_screen
   (panels meta multi_panel helpbar)
   (focus multi_panel)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (strum help_updown)
         )
      )
   )
}
{new MultiCharSelPanel
   multi_sel_character_panel
   (file multi_sel_character.milo)
   (char_navigator (vertical alterna rockabill))
}
#define CHARACTERS ((alterna rockabill))
{new CharsysPanel
   char_multi
   (file char_multi.milo)
   (placers "char_multi0.placer" "char_multi1.placer")
   (load_order alterna rockabill)
   (enter
      {$this hide TRUE}
      {$this show_char 0 {game get_character}}
      {do
         ($player2 {game get_player_config 1})
         {$this show_char 1 {$player2 get_character}}
      }
   )
}
{new GHScreen
   multi_sel_character_screen
   (panels meta multi_sel_character_panel char_multi helpbar)
   (focus multi_sel_character_panel)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (sel_char_highlight_off
      ($playerNum)
      {do
         ($idx 0)
         ($config {game get_player_config $playerNum})
         {while {< $idx {size CHARACTERS}}
            {do
               ($char {elem CHARACTERS $idx})
               {{sprintf
                     "sc_char_%s_focus_p%d.view"
                     $char
                     {'+' $playerNum 1}} set_showing
                  FALSE
               }
            }
            {'++' $idx}
         }
      }
   )
   (scroll_char_sel
      ($playerNum)
      {do
         ($config {game get_player_config $playerNum})
         {{sprintf
               "sc%d_char_nm.lbl"
               {'+' $playerNum 1}} set_text
            {$config get_character}
         }
         {{sprintf
               "sc_char_%s_focus_p%d.view"
               {$config get_character}
               {'+' $playerNum 1}} set_showing
            TRUE
         }
         {char_multi show_char $playerNum {$config get_character}}
      }
   )
   (enter
      {animate_forever_30fps $this multi_sel_character.view}
      {set $player_zero_done FALSE}
      {set $player_one_done FALSE}
      {$this sel_char_highlight_off 0}
      {$this sel_char_highlight_off 1}
      {$this scroll_char_sel 0}
      {$this scroll_char_sel 1}
   )
   (TRANSITION_COMPLETE_MSG {char_multi hide FALSE})
   (exit {char_multi hide TRUE})
   (poll
      {msc_loading1.lbl set_showing {! {char_multi is_char_loaded 0}}}
      {msc_loading2.lbl set_showing {! {char_multi is_char_loaded 1}}}
      {sc_ready_p1.mesh set_showing {$this is_player_done 0}}
      {sc_ready_p2.mesh set_showing {$this is_player_done 1}}
   )
   (SCROLL_MSG
      {$this sel_char_highlight_off $player_num}
      {if_else {== $player_num 0}
         {$this scroll_char_sel 0}
         {$this scroll_char_sel 1}
      }
   )
   (GH_SELECT_MSG {synth play_sequence button_select})
   (chars_selected {ui goto_screen multi_sel_guitar_screen})
   (deselect_char {synth play_sequence button_back})
}
{new UIPanel multi_sel_guitar_panel (file multi_sel_guitar.milo)}
{new GuitarDisplayPanel
   multi_guitar_display_panel
   (file guitar_display.milo)
   (force_exit TRUE)
   (config multiplayer)
}
{new GuitarSelectPanel
   multi_input_guitar_panel
   (file "")
   (multiplayer TRUE)
}
#define MULTI_SKIN_ANIM_START (0)
#define MULTI_SKIN_ANIM_END (10)
#define MULTI_SKIN_ANIM_PERIOD (0.25)
{new GHScreen
   multi_sel_guitar_screen
   (panels
      meta
      multi_sel_guitar_panel
      multi_input_guitar_panel
      multi_guitar_display_panel
      helpbar
   )
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (player0_done FALSE)
   (player1_done FALSE)
   (focus multi_input_guitar_panel)
   (enter
      {$this set player0_done {< {$this get_num_guitar_skins 0} 2}}
      {if_else {> {$this get_num_guitar_skins 0} 1}
         {{multi_sel_guitar_panel find msg_label0.lbl} set_text msg_select_guitar}
         {{multi_sel_guitar_panel find msg_label0.lbl} set_localized_text ""}
      }
      {{multi_sel_guitar_panel find sg1_player.lbl} set_text
         {sprintf
            {localize sg_player1}
            {localize {multi_input_guitar_panel get_instrument_type 0}}
         }
      }
      {$this set player1_done {< {$this get_num_guitar_skins 1} 2}}
      {if_else {> {$this get_num_guitar_skins 1} 1}
         {{multi_sel_guitar_panel find msg_label1.lbl} set_text msg_select_guitar}
         {{multi_sel_guitar_panel find msg_label1.lbl} set_localized_text ""}
      }
      {{multi_sel_guitar_panel find sg2_player.lbl} set_text
         {sprintf
            {localize sg_player2}
            {localize {multi_input_guitar_panel get_instrument_type 1}}
         }
      }
      {multi_input_guitar_panel set_skin_select 0 FALSE}
      {multi_input_guitar_panel set_skin_select 1 FALSE}
      {multi_input_guitar_panel set_quickplay 0 TRUE}
      {multi_input_guitar_panel set_quickplay 1 TRUE}
      {$this update_display}
   )
   (exit)
   (poll
      {{multi_sel_guitar_panel find sg_ready_p1.mesh} set_showing [player0_done]}
      {{multi_sel_guitar_panel find sg_ready_p2.mesh} set_showing [player1_done]}
   )
   (update_display
      {$this update_player_display 0}
      {$this update_player_display 1}
   )
   (update_player_display
      ($player)
      {$this set_guitar_label
         $player
         {multi_input_guitar_panel get_selected_skin $player}
      }
      {multi_guitar_display_panel show_guitar
         $player
         {multi_input_guitar_panel get_selected_guitar $player}
         {multi_input_guitar_panel get_selected_skin $player}
         {{multi_sel_guitar_panel loaded_dir} find
            {sprintf "guitar_multi%d.pxy" $player}
         }
         {{multi_sel_guitar_panel loaded_dir} find
            {sprintf "guitar_multi%d.filt" $player}
         }
      }
   )
   (set_guitar_label
      ($player $text)
      {if_else $player
         {{multi_sel_guitar_panel find sg2_guitar_nm.lbl} set_text $text}
         {{multi_sel_guitar_panel find sg1_guitar_nm.lbl} set_text $text}
      }
   )
   (get_num_guitar_skins
      ($playerNum)
      {multi_input_guitar_panel get_num_skins
         $playerNum
         {multi_input_guitar_panel get_selected_guitar $playerNum}
      }
   )
   (SCROLL_MSG {$this update_player_display $player_num})
   (guitar_selected
      {$this handle_select $player_num}
      {if {&& [player0_done] [player1_done]}
         {$this set_guitar 0}
         {$this set_guitar 1}
         {switch {gamecfg get mode}
            (multi_coop {ui goto_screen multi_coop_seldiff_screen})
            (multi_vs {ui goto_screen multi_vs_venue_screen})
            (multi_fo {ui goto_screen multi_fo_venue_screen})
         }
      }
      kDataUnhandled
   )
   (set_guitar
      ($player_num)
      {do
         ($config {game get_player_config $player_num})
         {$config set_guitar
            {multi_input_guitar_panel get_selected_guitar $player_num}
            {multi_input_guitar_panel get_selected_skin $player_num}
         }
      }
   )
   (handle_select
      ($player)
      {synth play_sequence button_select}
      {$this set_done $player TRUE}
      {$this update_player_display $player}
      TRUE
   )
   (is_done
      ($player)
      {if_else $player
         [player1_done]
         [player0_done]
      }
   )
   (set_done
      ($player $status)
      {if_else $player
         {$this set player1_done $status}
         {$this set player0_done $status}
      }
   )
   (BUTTON_DOWN_MSG
      {switch $button
         (kPad_Tri
            {if_else
               {&&
                  {$this is_done $player_num}
                  {> {$this get_num_guitar_skins $player_num} 1}
               }
               {do
                  {synth play_sequence button_back}
                  {$this set_done $player_num FALSE}
                  {$this update_player_display $player_num}
                  TRUE
               }
               kDataUnhandled
            }
         )
         (kPad_X {handle ($this guitar_selected $player_num)})
         (kPad_DUp
            {if_else {$this is_done $player_num}
               'TRUE;'
               kDataUnhandled
            }
         )
         (kPad_DDown
            {if_else {$this is_done $player_num}
               'TRUE;'
               kDataUnhandled
            }
         )
         kDataUnhandled
      }
   )
}
#define MULTI_SELDIFF_SCREEN_HANDLERS (
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (SELECT_MSG {ui goto_screen [next_screen]} kDataUnhandled)
)
{new GHScreen
   multi_fo_seldiff_screen
   (panels meta sel_difficulty_panel helpbar)
   (focus sel_difficulty_panel)
   MULTI_SELDIFF_SCREEN_HANDLERS
   (next_screen loading_screen)
}
#define MULTISELECT_DIFF_HANDLERS ((sel_buttons easy.btn medium.btn hard.btn expert.btn))
{new UIPanel seldiff_bg_panel (file seldiff_bg.milo)}
{new MultiSelectPanel
   seldiff0
   (file seldiff0.milo)
   (player_num 0)
   MULTISELECT_DIFF_HANDLERS
}
{new MultiSelectPanel
   seldiff1
   (file seldiff1.milo)
   (player_num 1)
   MULTISELECT_DIFF_HANDLERS
}
#define DUAL_DIFF_SEL_SCREEN_HANDLERS (
   (panels meta seldiff_bg_panel seldiff0 seldiff1 helpbar)
   (focus seldiff_bg_panel)
   (panel_base_name seldiff)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (exclusive FALSE)
   (get_selection
      ($player)
      {{game get_player_config $player} get_difficulty_sym}
   )
   (set_selection
      ($player $selection)
      {{game get_player_config $player} set_difficulty $selection}
   )
   (all_ready {ui goto_screen loading_screen})
)
{new MultiSelectScreen
   multi_coop_seldiff_screen
   DUAL_DIFF_SEL_SCREEN_HANDLERS
}
{new MultiSelectScreen
   multi_vs_seldiff_screen
   DUAL_DIFF_SEL_SCREEN_HANDLERS
}
#define MULTISELECT_PART_HANDLERS (
   (sel_buttons part0.btn part1.btn)
   (enter
      {part0.btn set_text
         {song_provider get_instrument {gamecfg get_song} 0}
      }
      {part1.btn set_text
         {song_provider get_instrument {gamecfg get_song} 1}
      }
   )
)
{new MultiSelectPanel
   selpart0
   (file selpart0.milo)
   (player_num 0)
   MULTISELECT_PART_HANDLERS
}
{new MultiSelectPanel
   selpart1
   (file selpart1.milo)
   (player_num 1)
   MULTISELECT_PART_HANDLERS
}
{new UIPanel selpart_bg_panel (file selpart_bg.milo)}
{new MultiSelectScreen
   selpart_screen
   (panels meta selpart_bg_panel selpart0 selpart1 helpbar)
   (focus selpart_bg_panel)
   (panel_base_name selpart)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (exclusive TRUE)
   (get_selection
      ($player)
      {if_else
         {==
            {gamecfg get_track_sym $player}
            {song_provider get_instrument {gamecfg get_song} 0}
         }
         part0
         part1
      }
   )
   (set_selection
      ($player $selection)
      {if_else {== $selection part0}
         {gamecfg set_track $player 0}
         {gamecfg set_track $player 1}
      }
   )
   (all_ready {ui goto_screen multi_sel_guitar_screen})
}
{new GHScreen
   multi_vs_venue_screen
   (next_screen multi_vs_selsong_screen)
   SEL_VENUE_SCREEN_HANDLERS
   (BUTTON_DOWN_MSG
      {cond
         ({== $button kPad_Tri}
            {$this backwards_anim}
            {synth play_sequence button_back}
            {ui goto_screen multi_screen}
         )
      }
      kDataUnhandled
   )
}
{new GHScreen
   multi_coop_venue_screen
   (next_screen multi_coop_selsong_screen)
   SEL_VENUE_SCREEN_HANDLERS
   (BUTTON_DOWN_MSG
      {cond
         ({== $button kPad_Tri}
            {$this backwards_anim}
            {synth play_sequence button_back}
            {ui goto_screen multi_screen}
         )
      }
      kDataUnhandled
   )
}
{new GHScreen
   multi_fo_venue_screen
   (next_screen multi_fo_selsong_screen)
   SEL_VENUE_SCREEN_HANDLERS
   (BUTTON_DOWN_MSG
      {cond
         ({== $button kPad_Tri}
            {$this backwards_anim}
            {synth play_sequence button_back}
            {ui goto_screen multi_screen}
         )
      }
      kDataUnhandled
   )
}
#define MULTI_SELSONG_SCREEN_HANDLERS (
   (panels meta sel_song_panel helpbar)
   (focus sel_song_panel)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (sel_song_career FALSE)
)
{new GHScreen
   multi_coop_selsong_screen
   MULTI_SELSONG_SCREEN_HANDLERS
   (SELECT_MSG
      {gamecfg set_track 0 0}
      {gamecfg set_track 1 1}
      {if_else
         {'||'
            {song_provider has_instrument {gamecfg get_song} bass}
            {song_provider has_instrument {gamecfg get_song} rhythm}
         }
         {ui goto_screen selpart_screen}
         {ui goto_screen multi_sel_guitar_screen}
      }
      kDataUnhandled
   )
}
{new GHScreen
   multi_vs_selsong_screen
   MULTI_SELSONG_SCREEN_HANDLERS
   (SELECT_MSG {ui goto_screen multi_vs_seldiff_screen} kDataUnhandled)
}
{new GHScreen
   multi_fo_selsong_screen
   MULTI_SELSONG_SCREEN_HANDLERS
   (SELECT_MSG {ui goto_screen multi_fo_seldiff_screen} kDataUnhandled)
}
#define MULTI_COMPETE_PANEL_HANDLERS (
   (clear_vram TRUE)
   (update_winner_info
      {do
         ($winner)
         {cond
            ({>
                  {player0 score}
                  {player1 score}}
               {set $winner 0}
            )
            ({<
                  {player0 score}
                  {player1 score}}
               {set $winner 1}
            )
            ({==
                  {player0 score}
                  {player1 score}}
               {set $winner -1}
            )
         }
         {winner_photo0.mesh set_showing {== 0 $winner}}
         {winner_photo1.mesh set_showing {== 1 $winner}}
         {me_winner.lbl set_text
            {cond
               ({== $winner 0} PLAYER_1_WINS)
               ({== $winner 1} PLAYER_2_WINS)
               (TRUE DRAW)
            }
         }
         {me_song_data.lbl set_localized_text {game get_song_text}}
         {me_artist_data.lbl set_localized_text {game get_song_artist_text}}
         {me_score_data1.lbl set_localized_text {sprint {player0 score}}}
         {me_percent_data1.lbl set_localized_text
            {sprintf {localize me_percent_format} {player0 percent_hit}}
         }
         {me_streak_data1.lbl set_localized_text {sprint {player0 longest_streak}}}
         {me_stars1.lbl set_text {player0 star_rating}}
         {me_score_data2.lbl set_localized_text {sprint {player1 score}}}
         {me_percent_data2.lbl set_localized_text
            {sprintf {localize me_percent_format} {player1 percent_hit}}
         }
         {me_streak_data2.lbl set_localized_text {sprint {player1 longest_streak}}}
         {me_stars2.lbl set_text {player1 star_rating}}
      }
   )
)
{new GHPanel
   multi_compete_panel
   (file multi_compete.milo)
   MULTI_COMPETE_PANEL_HANDLERS
   (enter
      {crowd_audio turn_off}
      {new ScriptTask (delay 0.3) (script {play_sfx postshow_loop})}
      {$this update_winner_info}
      {me_diff_data.lbl set_text {game get_difficulty_sym 0}}
   )
}
{new GHScreen
   multi_compete_screen
   (panels GAME_PANELS multi_compete_panel helpbar)
   (focus multi_compete_panel)
   (allow_back FALSE)
   (animate_transition FALSE)
   (helpbar (default ((fret1 help_continue))))
   (enter {game set_paused TRUE})
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {synth play_sequence button_select}
         {ui goto_screen complete_screen}
      }
      kDataUnhandled
   )
}
{new GHPanel
   multi_compete_coop_panel
   (file multi_compete_coop.milo)
   MULTI_COMPETE_PANEL_HANDLERS
   HEADLINE_HANDLERS
   (enter
      {crowd_audio turn_off}
      {new ScriptTask (delay 0.3) (script {play_sfx postshow_loop})}
      {me_song_data.lbl set_localized_text {game get_song_text}}
      {$this set_headline me_winner.lbl}
      {me_skill_data1.lbl set_text {game get_difficulty_sym 0}}
      {me_skill_data2.lbl set_text {game get_difficulty_sym 1}}
      {me_score_data2.lbl set_localized_text {sprint {band score}}}
      {me_percent_data2.lbl set_localized_text
         {sprintf {localize me_percent_format} {band percent_hit}}
      }
      {me_streak_data2.lbl set_localized_text
         {sprintf {localize me_streak_format} {band longest_streak}}
      }
   )
}
{new GHScreen
   multi_compete_coop_screen
   (panels GAME_PANELS multi_compete_coop_panel helpbar)
   (focus multi_compete_panel)
   (allow_back FALSE)
   (animate_transition FALSE)
   (helpbar (default ((fret1 help_continue))))
   (enter {game set_paused TRUE})
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {synth play_sequence button_select}
         {meta_loading_goto demo_marketing_screen}
      }
      kDataUnhandled
   )
}
{new GHPanel
   multi_compete_fo_panel
   (file multi_compete_fo.milo)
   MULTI_COMPETE_PANEL_HANDLERS
   (enter
      {crowd_audio turn_off}
      {new ScriptTask (delay 0.3) (script {play_sfx postshow_loop})}
      {$this update_winner_info}
      {me_diff_data0.lbl set_text {game get_difficulty_sym 0}}
      {me_diff_data1.lbl set_text {game get_difficulty_sym 1}}
   )
}
{new GHScreen
   multi_compete_fo_screen
   (panels GAME_PANELS multi_compete_fo_panel helpbar)
   (focus multi_compete_panel)
   (allow_back FALSE)
   (animate_transition FALSE)
   (helpbar (default ((fret1 help_continue))))
   (enter {game set_paused TRUE})
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {synth play_sequence button_select}
         {ui goto_screen complete_screen}
      }
      kDataUnhandled
   )
}