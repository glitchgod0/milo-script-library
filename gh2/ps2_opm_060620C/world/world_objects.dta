#include ../config/macros.dta
#include world_objects_worldbase.dta
#define LIGHTING_ADJECTIVES ((blackout strobe flare color1 color2 sweep))
(ObjectDir
   (allowed_dirs RndDir)
   (types
      #include small2/objects.dta
   )
)
(RndDir
   (types
      (lighting
         (editor
            (set_multiplayer
               script
               (help "Hide single-player only objects")
               (script {handle ($this set_multiplayer)})
            )
            (set_singleplayer
               script
               (help "Hide multi-player only objects")
               (script {handle ($this set_singleplayer)})
            )
            (multiplayer_hide_objects
               (array object (class Draw))
               (help "List of objects that should be hidden in multiplayer")
            )
            (singleplayer_hide_objects
               (array object (class Draw))
               (help "List of objects that should be hidden in singleplayer")
            )
         )
         (multiplayer_hide_objects ())
         (singleplayer_hide_objects ())
         (set_multiplayer
            {$this show_objects [multiplayer_hide_objects] FALSE}
            {$this show_objects [singleplayer_hide_objects] TRUE}
            kDataUnhandled
         )
         (set_singleplayer
            {$this show_objects [multiplayer_hide_objects] TRUE}
            {$this show_objects [singleplayer_hide_objects] FALSE}
            kDataUnhandled
         )
      )
      (chars
         (editor
            (set_multiplayer
               script
               (help "Hide single-player only objects")
               (script {handle ($this set_multiplayer)})
            )
            (set_singleplayer
               script
               (help "Hide multi-player only objects")
               (script {handle ($this set_singleplayer)})
            )
         )
         (change_proxies {handle (game change_chars $this)})
         (set_multiplayer
            {handle (guitarist0 start_at {waypoint_find kStartGuitarist0Mp})}
            {handle (guitarist1 set_showing TRUE)}
            {handle
               (bassist set showing FALSE)
            }
            {handle
               (singer set showing FALSE)
            }
            kDataUnhandled
         )
         (set_singleplayer
            {handle (guitarist0 start_at {waypoint_find kStartGuitarist0})}
            {handle
               (guitarist1 set showing FALSE)
            }
            {handle
               (bassist set showing TRUE)
            }
            {handle
               (singer set showing TRUE)
            }
            kDataUnhandled
         )
      )
      (geom
         (editor
            (multiplayer_hide_objects
               (array object (class Draw))
               (help "List of objects that should be hidden in multiplayer")
            )
            (singleplayer_hide_objects
               (array object (class Draw))
               (help "List of objects that should be hidden in singleplayer")
            )
            (set_multiplayer
               script
               (help "Hide single-player only objects")
               (script {handle ($this set_multiplayer)})
            )
            (set_singleplayer
               script
               (help "Hide multi-player only objects")
               (script {handle ($this set_singleplayer)})
            )
         )
         (multiplayer_hide_objects ())
         (singleplayer_hide_objects ())
         (set_multiplayer
            {$this show_objects [multiplayer_hide_objects] FALSE}
            {$this show_objects [singleplayer_hide_objects] TRUE}
         )
         (set_singleplayer
            {$this show_objects [multiplayer_hide_objects] TRUE}
            {$this show_objects [singleplayer_hide_objects] FALSE}
         )
         (budget_set_singleplayer
            {$this show_objects [multiplayer_hide_objects] FALSE}
         )
         (budget_set_multiplayer
            {$this show_objects [multiplayer_hide_objects] FALSE}
         )
      )
   )
)
(WorldCrowd
   (types
      (gh2
         #include crowd.dta
      )
   )
)
(WorldDir
   (editor
      (test_adj_blackout script (script {world lighting (blackout)}))
      (test_adj_strobe script (script {world lighting (strobe)}))
      (test_adj_flare script (script {world lighting (flare)}))
      (test_adj_chaos script (script {world lighting (chaos)}))
      (test_adj_soft script (script {world lighting (soft)}))
      (test_adj_rock script (script {world lighting (rock)}))
   )
   (types
      (small2
         #include small2/small2.dta
      )
   )
)
(LightPreset
   (editor
      (category
         symbol
         (list
            (INTRO
               INTRO_ENCORE
               WIN
               WIN_ENCORE
               LOSE
               VERSE
               CHORUS
               VERSECHORUS
               SOLO
               VERSECHORUSSOLO
            )
         )
         (help "Category of the preset")
      )
      (adjectives (array symbol (list LIGHTING_ADJECTIVES)))
   )
   (types)
)
(CamShot
   (editor
      (category
         symbol
         (list
            (flr_near_lft
               flr_near_rt
               flr_far_lft
               flr_far_rt
               band_POV
               balcony_lft
               balcony_rt
               SOLO_NEAR
               SOLO_FAR
               LOSE
               WIN
               WIN_ENCORE
               INTRO
               INTRO_ENCORE
               LIGHTER
            )
         )
         (help "Category of the shot")
      )
   )
   (table
      (flags
         ("shot distance" [distance])
         ("shot facing" [facing])
         ("walking ok" [walk_ok])
         ("solo ok" [solo])
         ("starpower ok" [starpower_ok])
         ("jump ok" [jump_ok])
         ("low excitment ok" [low_excitement_ok])
         ("crowd facing camera" [crowd_face_camera])
         ("hide crowd" [hide_crowd])
         ("force LOD" [force_char_lod])
         ("special" [special])
      )
   )
   (types
      (band
         (editor
            (crowd_face_camera bool (help "Whether the crowd should face the camera"))
            (hide_crowd
               bool
               (help "Whether to hide the crowd while this shot is active")
            )
            (force_char_lod
               int
               (help "Minimum character LOD to force while this shot is active")
            )
            (bad_waypoints
               (array object (class Waypoint))
               (help
                  "If the character is currently on any of these walk spots, the shot will not be used"
               )
            )
            (distance
               symbol
               (list (null near far closeup behind))
               (help "Distance categorization of the shot")
            )
            (facing
               symbol
               (list (null left right))
               (help "Facing categorization of the shot")
            )
            (special bool (help "Whether this shot is special-purpose"))
            (solo
               symbol
               (list (ok only never))
               (help "Whether this shot can be used during a solo")
            )
            (walk_ok
               bool
               (help "Whether this shot can be used while the target is walking")
            )
            (starpower_ok
               bool
               (help "Whether this shot can be used while in starpower")
            )
            (jump_ok
               bool
               (help "whether this shot can be used while the band is jumping")
            )
            (low_excitement_ok
               bool
               (help "Whether this shot can be used while excitement is low")
            )
            (next_shot
               object
               (class CamShot)
               (help "Shot to start when this shot has finished")
            )
         )
         #include camshot.dta
      )
   )
)