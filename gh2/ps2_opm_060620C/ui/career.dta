{func is_updown_button
   ($button)
   {'||' {== $button kPad_DDown} {== $button kPad_DUp}}
}
#define VENUE_MAP_SCROLL_SEC (0.25)
{new CharsysPanel
   char_single
   (file char_single.milo)
   (placers "char_single.placer")
   (load_order rockabill alterna)
   (enter
      {$this hide TRUE}
      {$this show_char 0 {game get_character}}
   )
}
#define SEL_DIFFICULTY_COMMON (
   (update_focus
      {$this set_focus
         {switch {$this last_difficulty}
            (kDifficultyEasy sd_diff1.btn)
            (kDifficultyMedium sd_diff2.btn)
            (kDifficultyHard sd_diff3.btn)
            (kDifficultyExpert sd_diff4.btn)
         }
      }
   )
   (set_difficulty
      ($component $player_num)
      {{game get_player_config $player_num} set_difficulty
         {switch $component
            (sd_diff1.btn kDifficultyEasy)
            (sd_diff2.btn kDifficultyMedium)
            (sd_diff3.btn kDifficultyHard)
            (sd_diff4.btn kDifficultyExpert)
         }
      }
      {$this update_difficulty}
   )
   (SELECT_MSG
      {$this set_difficulty $component 0}
      {if {> {game get_num_players} 1}
         {$this set_difficulty $component 1}
      }
      kDataUnhandled
   )
)
{new UIPanel
   sel_difficulty_panel
   (file sel_difficulty.milo)
   SEL_DIFFICULTY_COMMON
   (enter {$this update_focus})
   (last_difficulty {game get_difficulty 0})
   (update_difficulty)
}
{new UIPanel
   sel_diff_career_panel
   (file sel_diff_career.milo)
   SEL_DIFFICULTY_COMMON
   (enter
      {sd_easy_status.lbl set_localized_text
         {campaign get_status_progress kDifficultyEasy}
      }
      {sd_med_status.lbl set_localized_text
         {campaign get_status_progress kDifficultyMedium}
      }
      {sd_hard_status.lbl set_localized_text
         {campaign get_status_progress kDifficultyHard}
      }
      {sd_expert_status.lbl set_localized_text
         {campaign get_status_progress kDifficultyExpert}
      }
      {$this update_focus}
   )
   (last_difficulty {campaign last_difficulty})
   (update_difficulty {campaign update_difficulty})
}
{new GHScreen
   sel_difficulty_screen
   (panels meta sel_diff_career_panel helpbar char_single)
   (focus sel_diff_career_panel)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (SELECT_MSG
      {sel_diff_career_panel set_difficulty $component 0}
      {if_else {campaign new_campaign}
         {ui goto_screen sel_character_new_screen}
         {do
            {campaign get_character_info}
            {ui goto_screen career_screen}
         }
      }
      kDataUnhandled
   )
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Tri}
         {$this backwards_anim}
         {synth play_sequence button_back}
         {ui goto_screen chooseprof_screen}
      }
      kDataUnhandled
   )
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Tri}
         {ui goto_screen main_screen}
      }
      kDataUnhandled
   )
}
{new GHPanel
   career_panel
   (file career.milo)
   (focus cm_letsrock.btn)
   (enter
      {cm_char.lbl set_text {game get_character}}
      {cm_guitar.lbl set_text {game get_guitar_skin}}
      {cm_cash.lbl set_localized_text
         {sprintf {localize career_cash_format} {campaign cash}}
      }
      {cm_band.lbl set_localized_text
         {campaign profile_name {campaign profile_slot}}
      }
      {cm_score.lbl set_localized_text
         {sprintf {localize career_score_format} {campaign career_score}}
      }
      {cm_status.lbl set_text {campaign get_cur_status_sym}}
      {cm_career.lbl set_text {game get_difficulty_sym 0}}
      {if {== kDifficultyEasy {game get_difficulty 0}}
         {$this disable cm_store.btn}
      }
      {cm_cash.lbl set_showing {!= kDifficultyEasy {game get_difficulty 0}}}
      {cm_cash_title.lbl set_showing
         {!= kDifficultyEasy {game get_difficulty 0}}
      }
   )
   (SELECT_MSG
      {switch $component
         (cm_letsrock.btn {autosave_goto sel_venue_screen})
         (cm_hero.btn {ui goto_screen sel_character_edit_screen})
         (cm_guitar.btn {ui goto_screen sel_guitar_edit_screen})
         (cm_store.btn {ui goto_screen store_screen})
      }
   )
}
{new GHScreen
   career_screen
   (panels meta career_panel helpbar char_single)
   (focus career_panel)
   (allow_back FALSE)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (enter
      {$this turn_off_ambient}
      {gamecfg set mode career}
   )
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Tri}
         {$this backwards_anim}
         {synth play_sequence button_back}
         {ui goto_screen sel_difficulty_screen}
      }
      kDataUnhandled
   )
}
{new GHPanel
   sel_character_panel
   (file sel_character_e3.milo)
   (char_focus rockabill)
   (old_scroll_pos 0)
   (focus character.lst)
   (enter
      {character.lst set_provider character_provider}
      {animate_forever_30fps $this sel_character.view}
      {do
         ($character {game get_character})
         {char_single show_char 0 $character}
         {sc_char_nm.lbl set_text $character}
         {sc_char_blurb.lbl set_localized_text
            {localize {sprint $character "_blurb"}}
         }
         {$this set char_focus $character}
         {character.lst set_selected {character_provider get_index $character}}
         {$this set old_scroll_pos {character.lst selected_pos}}
      }
   )
   (exit)
   (SCROLL_MSG
      {do
         ($new_scroll_pos {character.lst selected_pos})
         {if {!= $new_scroll_pos [old_scroll_pos]}
            {$this set char_focus {character_provider get_symbol $new_scroll_pos}}
            {if [char_focus]
               {sc_char_nm.lbl set_text [char_focus]}
               {sc_char_blurb.lbl set_localized_text
                  {localize {sprint [char_focus] "_blurb"}}
               }
               {char_single show_char 0 [char_focus]}
               {$this set old_scroll_pos $new_scroll_pos}
            }
         }
      }
      kDataUnhandled
   )
}
{new UIPanel
   sel_character_loading_panel
   (file sel_character_loading.milo)
   (poll {scl_loading.lbl set_showing {! {char_single are_chars_loaded}}})
}
#define SEL_CHARACTER_COMMON (
   (panels
      meta
      sel_character_panel
      char_single
      sel_character_loading_panel
      helpbar
   )
   (focus sel_character_panel)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (TRANSITION_COMPLETE_MSG {char_single hide FALSE})
   (exit {char_single hide TRUE})
)
{new GHScreen
   sel_character_new_screen
   SEL_CHARACTER_COMMON
   (SELECT_MSG
      {synth play_sequence button_select}
      {do
         ($sel_char {sel_character_panel get char_focus})
         {if {&& $sel_char {!= {game get_character} $sel_char}}
            {game set_character $sel_char}
         }
      }
      {ui goto_screen sel_guitar_screen}
      kDataUnhandled
   )
}
{new GHScreen
   sel_character_edit_screen
   SEL_CHARACTER_COMMON
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Tri}
         {$this backwards_anim}
         {synth play_sequence button_back}
         {ui goto_screen career_screen}
      }
      kDataUnhandled
   )
   (SELECT_MSG
      {synth play_sequence button_select}
      {do
         ($sel_char {sel_character_panel get char_focus})
         {if {&& $sel_char {!= {game get_character} $sel_char}}
            {game set_character $sel_char}
         }
      }
      {campaign set_character_info}
      {ui goto_screen career_screen}
   )
}
{new UIPanel sel_guitar_panel (file sel_guitar.milo)}
{new GuitarDisplayPanel
   guitar_display_panel
   (file guitar_display.milo)
   (force_exit TRUE)
}
{new GuitarSelectPanel input_guitar_panel (file "")}
#define SKIN_ANIM_START (0)
#define SKIN_ANIM_END (12)
#define SKIN_ANIM_PERIOD (0.25)
#define SEL_GUITAR_COMMON (
   (panels
      meta
      sel_guitar_panel
      helpbar
      guitar_display_panel
      input_guitar_panel
      char_single
   )
   (focus input_guitar_panel)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (enter
      {{sel_guitar_panel find sg_selectyourguitar.lbl} set_text select_guitar}
      {input_guitar_panel set_quickplay 0 FALSE}
      {input_guitar_panel set_skin_select 0 FALSE}
      {$this update_display FALSE}
      {{guitar_display_panel find guitar_transition.tnm} set_frame
         SKIN_ANIM_START
      }
      {char_single set_paused TRUE}
   )
   (exit {char_single set_paused FALSE})
   (guitar_selected
      ($player_num)
      {synth play_sequence button_select}
      {$this goto_career}
      kDataUnhandled
   )
   (goto_career
      {game set_guitar
         {input_guitar_panel get_selected_guitar 0}
         {input_guitar_panel get_selected_skin 0}
      }
      {ui goto_screen demo_selsong_screen}
   )
   (update_display
      ($play_sfx)
      {do
         ($guitar {input_guitar_panel get_selected_guitar 0})
         ($skin {input_guitar_panel get_selected_skin 0})
         {{sel_guitar_panel find sg_guitar_nm.lbl} set_text $skin}
         {{sel_guitar_panel find sg_guitar_desc.lbl} set_text
            {game get_guitar_skin_desc $skin}
         }
         {guitar_display_panel show_guitar
            0
            $guitar
            $skin
            {{sel_guitar_panel loaded_dir} find guitar.pxy}
            {{sel_guitar_panel loaded_dir} find guitar_single.filt}
         }
         {if $play_sfx
            {synth play_sequence button_toggle}
         }
      }
   )
   (BUTTON_DOWN_MSG
      {if_else {$this animating 0}
         TRUE
         {switch $button
            (kPad_Tri
               {if_else {$this auto_back}
                  kDataUnhandled
                  {$this go_back}
               }
            )
            (kPad_X {handle ($this guitar_selected $player_num)})
            kDataUnhandled
         }
      }
   )
)
{new GHScreen sel_guitar_screen SEL_GUITAR_COMMON (auto_back TRUE)}
{new GHScreen
   sel_guitar_edit_screen
   SEL_GUITAR_COMMON
   (auto_back FALSE)
   (go_back
      {$this backwards_anim}
      {synth play_sequence button_back}
      {campaign set_character_info}
      {ui goto_screen career_screen}
   )
}
{new CharsysPanel
   char_store
   (file char_store.milo)
   (store TRUE)
   (placers "char_store.placer")
   (load_order)
}
{new GuitarDisplayPanel
   store_guitar_display_panel
   (file guitar_display.milo)
   (config store)
}
{new UIPanel
   store_cd_panel
   (file store_cd.milo)
   (hide {store_cd.view set_showing FALSE})
}
{new UIPanel
   store_video_panel
   (file store_video.milo)
   (hide {store_video.view set_showing FALSE})
}
{new UIPanel store_back_panel (file store_back.milo)}
{new StorePanel
   store_panel
   (file store.milo)
   (focus st_guitars.btn)
   (retain_last_focus FALSE)
   (category "")
   (itemIdx 0)
   (set_store_mode
      ($b)
      {song_provider set_store_mode $b}
      {character_provider set_store_mode $b}
      {store_guitar_provider init_data}
      {store_skin_provider init_data}
      {store_video_provider init_data}
   )
   (show_store_screen_1
      {st_screen1.view set_showing TRUE}
      {st_screen2.view set_showing FALSE}
   )
   (show_store_screen_2
      {st_screen1.view set_showing FALSE}
      {st_screen2.view set_showing TRUE}
      {$this set itemIdx 0}
   )
   (get_item_price {$this price {$this get category} {$this get_item_name}})
   (get_item_name {$store_item_provider get_symbol {$this get itemIdx}})
   (update_store_item_desc
      {st_item_name.lbl set_text
         {$store_item_provider get_text {$this get itemIdx}}
      }
      {st_item_desc.lbl set_text {sprintf "%s_shop_desc" {$this get_item_name}}}
      {st_cost.lbl set_localized_text {sprintf "$%d" {$this get_item_price}}}
   )
   (update_store_item_display
      {switch {$this get category}
         (character
            {char_store show_char
               0
               {character_provider get_symbol {$this get itemIdx}}
            }
         )
         (guitar
            {store_guitar_display_panel show_guitar
               0
               {store_guitar_provider get_symbol {$this get itemIdx}}
               ''
               {{store_panel loaded_dir} find guitar.pxy}
               {{store_panel loaded_dir} find guitar_single.filt}
            }
         )
         (skin
            {store_guitar_display_panel show_guitar
               0
               {store_skin_provider get_guitar {$this get itemIdx}}
               {store_skin_provider get_symbol {$this get itemIdx}}
               {{store_panel loaded_dir} find guitar.pxy}
               {{store_panel loaded_dir} find guitar_single.filt}
            }
         )
         (song {song_preview {$this get_item_name}})
      }
      TRUE
   )
   (update_store_category_desc
      {st_blurb.lbl set_text {sprint {$this get category} _shop_desc}}
      {st_poster.pic set_tex
         {sprint "ui/image/shop_" {$this get category} "_poster_keep.png"}
      }
      {st_costrange.lbl set_localized_text
         {sprintf
            {localize category_cost}
            {store_panel low_cost {$this get category}}
            {store_panel high_cost {$this get category}}
         }
      }
      {st_cat_name.lbl set_text {sprint "store_" {$this get category}}}
   )
   (update_total_cash_display
      {st_cash.lbl set_localized_text
         {sprintf {localize store_cash_format} {campaign cash}}
      }
   )
   (update_helpbar
      {do
         ($array)
         {set $array ()}
         {resize $array 0}
         {if_else {st_screen1.view showing}
            {push_back $array (fret1 help_select)}
            {if {! {campaign is_unlocked {$this get_item_name}}}
               {push_back $array (fret1 help_buyitem)}
            }
         }
         {push_back $array (fret2 help_back)}
         {push_back $array (strum help_updown)}
         {helpbar set_display $array}
      }
   )
   (enter
      {$this set_store_mode TRUE}
      {$this show_store_screen_1}
      {$this update_total_cash_display}
      {set $store_item_provider NULL}
      {$this hide_models}
      {cash.view set_showing FALSE}
      {char_store show_char 0 {character_provider get_symbol 0}}
   )
   (TRANSITION_COMPLETE_MSG {cash.view set_showing TRUE})
   (exit
      {$this set_store_mode FALSE}
      {cash.view set_showing FALSE}
   )
   (poll
      {do
         ($show_item {== store_screen {ui current_screen}})
         {if {st_screen2.view showing}
            {st_loading.lbl set_showing
               {&& {== {$this get category} character} {! {char_store are_chars_loaded}}}
            }
            {do
               ($item_sold {&& $show_item {campaign is_unlocked {$this get_item_name}}})
               {st_sold.mesh set_showing $item_sold}
               {if {== {$this get category} character}
                  {char_store char_store_lights_on $item_sold}
               }
            }
         }
         {if $show_item
            {$this update_helpbar}
         }
      }
   )
   (SELECT_MSG
      {switch $component
         (st_guitars.btn
            {set $store_item_provider store_guitar_provider}
            {$this show_store_screen_2}
            {$this update_store_item_desc}
            {$this update_store_item_display}
            {store_guitar_display_panel hide FALSE}
         )
         (st_skins.btn
            {set $store_item_provider store_skin_provider}
            {$this show_store_screen_2}
            {$this update_store_item_desc}
            {$this update_store_item_display}
            {store_guitar_display_panel hide FALSE}
         )
         (st_songs.btn
            {set $store_item_provider song_provider}
            {$this show_store_screen_2}
            {$this update_store_item_desc}
            {$this update_store_item_display}
            {{store_cd_panel find store_cd.view} set_showing TRUE}
            {taskmgr clear_tasks}
            {animate_forever_30fps store_cd_panel store_cd.view}
            {meta_music_stop}
         )
         (st_characters.btn
            {set $store_item_provider character_provider}
            {$this show_store_screen_2}
            {$this update_store_item_desc}
            {$this update_store_item_display}
            {char_store hide FALSE}
         )
         (st_videos.btn
            {set $store_item_provider {game video_provider}}
            {$this show_store_screen_2}
            {$this update_store_item_desc}
            {{store_video_panel find store_video.view} set_showing TRUE}
            {taskmgr clear_tasks}
            {animate_forever_30fps store_video_panel store_video.view}
         )
      }
      kDataUnhandled
   )
   (FOCUS_MSG
      {do
         ($new_cat)
         {set $new_cat
            {switch $new_focus
               (st_guitars.btn guitar)
               (st_skins.btn skin)
               (st_songs.btn song)
               (st_characters.btn character)
               (st_videos.btn video)
            }
         }
         {if {!= $new_cat kDataUnhandled}
            {$this set category $new_cat}
            {$this update_store_category_desc}
         }
      }
      kDataUnhandled
   )
   (hide_models
      {song_preview ''}
      {meta_music_start}
      {char_store hide TRUE}
      {store_guitar_display_panel hide TRUE}
      {store_cd_panel hide}
      {store_video_panel hide}
   )
}
{new GHScreen
   store_screen
   (panels
      meta
      store_back_panel
      store_guitar_display_panel
      store_cd_panel
      store_video_panel
      char_store
      store_panel
      helpbar
   )
   (focus store_panel)
   (BUTTON_DOWN_MSG
      {cond
         ({&&
               {'||'
                  {== $button kPad_DUp}
                  {== $button kPad_DDown}}
               {{store_panel find st_screen2.view}
                  showing}}
            {do
               ($increment)
               ($index {store_panel get itemIdx})
               {if_else {== $button kPad_DDown}
                  {set $increment 1}
                  {set $increment -1}
               }
               {set $index {'+' $increment {store_panel get itemIdx}}}
               {store_panel set itemIdx {mod $index {$store_item_provider list_length}}}
               {store_panel update_store_item_desc}
               {store_panel update_store_item_display}
            }
            {synth play_sequence button_toggle}
            TRUE
         )
         ({== $button kPad_Tri}
            {synth play_sequence button_back}
            {if_else {{store_panel find st_screen1.view} showing}
               {do
                  {store_screen backwards_anim}
                  {autosave_goto career_screen}
               }
               {do
                  {store_panel hide_models}
                  {store_panel show_store_screen_1}
               }
            }
            kDataUnhandled
         )
         ({&&
               {== $button kPad_X}
               {{store_panel find st_screen2.view}
                  showing}}
            {if_else
               {&&
                  {! {campaign is_unlocked {store_panel get_item_name}}}
                  {>= {campaign cash} {store_panel get_item_price}}
               }
               {do
                  {campaign buy_item
                     {store_panel get_item_name}
                     {store_panel get_item_price}
                  }
                  {store_panel update_total_cash_display}
                  {ui push_screen store_bought_screen}
                  {play_sfx cash_register}
               }
               {play_sfx button_error}
            }
            TRUE
         )
         (TRUE kDataUnhandled)
      }
   )
}
{new UIPanel store_bought_panel (file store_bought.milo)}
{new GHScreen
   store_bought_screen
   (panels store_bought_panel)
   (focus store_bought_panel)
   (allow_back FALSE)
   (animate_transition FALSE)
   (helpbar (default ((fret1 help_continue))))
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {synth play_sequence button_select}
         {ui pop_screen}
      }
   )
   (enter
      {{store_bought_panel find store_bought.lbl} set_text
         {sprintf "%s_bought_blurb" {store_panel get category}}
      }
      {store_panel hide_models}
   )
   (exit {store_panel show_store_screen_1})
}
#define SEL_VENUE_SCREEN_HANDLERS (
   (panels meta sel_venue_panel helpbar)
   (focus sel_venue_panel)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (venue_button_name
      ($venue)
      {sprintf "sv_%s.btn" $venue}
   )
   (venue_button
      ($venue)
      {sel_venue_panel find {sprintf "sv_%s.btn" $venue}}
   )
   (enter
      {campaign foreach_venue $venue
         {do
            ($button {$this venue_button_name $venue})
            ($unlocked {campaign is_unlocked $venue})
            {if_else $unlocked
               {$this enable $button}
               {$this disable $button}
            }
         }
      }
      {if {== 0 {song_provider get_quickplay}}
         {game set_career_venue}
      }
      {do
         ($index {game get_venue_index})
         ($venue {game get_venue})
         {{sel_venue_panel find sv_map.view} set_frame {'+' $index 1}}
         {$this set_focus {$this venue_button $venue}}
      }
      {set $scrolldir 0}
   )
   (set_venue_map_frame
      ($frame)
      {new AnimTask
         (anim {sel_venue_panel find sv_map.view} kTaskRange)
         (period VENUE_MAP_SCROLL_SEC)
         (units kTaskUISeconds)
         (start {{sel_venue_panel find sv_map.view} frame})
         (end $frame)
      }
   )
   (FOCUS_MSG
      {if {! {ui in_transition}}
         {switch $new_focus
            (sv_battle.btn
               {$this set_venue_map_frame 1}
               {game set_venue battle}
            )
            (sv_small1.btn
               {$this set_venue_map_frame 2}
               {game set_venue small1}
            )
            (sv_small2.btn
               {$this set_venue_map_frame 3}
               {game set_venue small2}
            )
            (sv_big.btn
               {$this set_venue_map_frame 4}
               {game set_venue big}
            )
            (sv_theatre.btn
               {$this set_venue_map_frame 5}
               {game set_venue theatre}
            )
            (sv_fest.btn
               {$this set_venue_map_frame 6}
               {game set_venue fest}
            )
            (sv_arena.btn
               {$this set_venue_map_frame 7}
               {game set_venue arena}
            )
            (sv_stone.btn
               {$this set_venue_map_frame 8}
               {game set_venue stone}
            )
         }
      }
   )
   (SELECT_MSG {ui goto_screen [next_screen]} kDataUnhandled)
)
{new GHPanel sel_venue_panel (file sel_venue.milo) (focus sv_battle.btn)}
{new GHScreen
   sel_venue_screen
   (allow_back FALSE)
   (next_screen sel_song_screen)
   SEL_VENUE_SCREEN_HANDLERS
   (BUTTON_DOWN_MSG
      {cond
         ({== $button kPad_Tri}
            {$this backwards_anim}
            {synth play_sequence button_back}
            {ui goto_screen career_screen}
         )
      }
      kDataUnhandled
   )
   (BUTTON_DOWN_MSG
      {cond
         ({== $button kPad_Tri}
            {$this backwards_anim}
            {synth play_sequence button_back}
            {ui goto_screen career_screen}
         )
         ({== $button kPad_DUp}
            {set $scrolldir 1}
         )
         ({== $button kPad_DDown}
            {set $scrolldir -1}
         )
      }
      kDataUnhandled
   )
}
{new GHPanel
   sel_song_panel
   (file sel_song.milo)
   (exiting_sel_song FALSE)
   (metamusic_on_exit TRUE)
   (old_list_pos 0)
   (old_scroll_pos 0)
   (focus ss_song.lst)
   (joypad
      (hold_ms 500)
      (repeat_ms 80)
   )
   (enter
      {{ui current_screen} turn_off_ambient}
      {$this set exiting_sel_song FALSE}
      {$this set metamusic_on_exit TRUE}
      {if {! {{ui current_screen} sel_song_career}}
         {song_provider set_quickplay TRUE}
      }
      {ss_song.lst set_provider song_provider}
      {if {== {game get_song_index} -1}
         {game set_song_index 0}
      }
      {$this update_song_info}
   )
   (update_song_info
      {if {== 0 {song_provider get_quickplay}}
         {game set_career_song}
      }
      {ss_song.lst set_selected {game get_song_index}}
      {$this set old_list_pos {ss_song.lst selected_pos}}
      {meta_music_stop}
      {song_preview {game get_song}}
      {sel_song.view set_frame {$this get_scroll_frame}}
      {$this set old_scroll_pos {$this get_scroll_frame}}
   )
   (exit
      {$this set exiting_sel_song TRUE}
      {song_preview ''}
      {if {$this get metamusic_on_exit}
         {meta_music_start}
      }
      {song_provider set_quickplay FALSE}
   )
   (get_scroll_frame {ss_song.lst selected_pos})
   (SCROLL_MSG
      {do
         ($new_scroll_pos {$this get_scroll_frame})
         {if {!= $new_scroll_pos [old_scroll_pos]}
            {sel_song.view set_frame $new_scroll_pos}
            {$this set old_scroll_pos $new_scroll_pos}
            {$this set old_list_pos {ss_song.lst selected_pos}}
            {game set_song_index {ss_song.lst selected_pos}}
         }
      }
   )
   (BUTTON_DOWN_MSG
      {if {is_updown_button $button}
         {if {!= {$this get old_list_pos} {ss_song.lst selected_pos}}
            {$this set old_list_pos {ss_song.lst selected_pos}}
            {song_preview ''}
         }
      }
      kDataUnhandled
   )
   (BUTTON_UP_MSG
      {if {&& {! {$this get exiting_sel_song}} {is_updown_button $button}}
         {song_preview {game get_song}}
      }
      kDataUnhandled
   )
   (beat_song
      ($score)
      {if {$this is_up}
         {do
            ($index {ss_song.lst selected_pos})
            ($song {song_provider get_symbol $index})
            {campaign cheat_beat_song $song $score}
            {$this refresh}
         }
      }
   )
   (beat_song
      {if {$this is_up}
         {do
            ($index {ss_song.lst selected_pos})
            ($song {song_provider get_symbol $index})
            {campaign beat_song $song}
            {$this refresh}
         }
      }
   )
}
{new GHScreen
   sel_song_screen
   (panels meta sel_song_panel helpbar)
   (focus sel_song_panel)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (sel_song_career TRUE)
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Tri}
         {$this backwards_anim}
         {synth play_sequence button_back}
         {ui goto_screen sel_venue_screen}
      }
      kDataUnhandled
   )
   (SELECT_MSG
      {sel_song_panel set metamusic_on_exit FALSE}
      {ui goto_screen loading_screen}
      kDataUnhandled
   )
}