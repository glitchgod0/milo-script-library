{new GHScreen
   post_show_screen
   (panels GAME_PANELS fade_panel)
   (allow_back FALSE)
   (animate_transition FALSE)
   (enter
      {game set_paused TRUE}
      {crowd_audio turn_off}
      {do
         ($win_screen)
         {set $win_screen
            {if_else {meta get won_campaign}
               {if_else {== kDifficultyEasy {game get_difficulty 0}}
                  win_easy_screen
                  win_game_screen
               }
               {gamecfg get win_screen}
            }
         }
         {new ScriptTask
            (units kTaskUISeconds)
            (delay 0.3)
            (script {play_sfx postshow_loop})
         }
         {ui goto_screen $win_screen}
      }
   )
}
{func goto_endgame_complete
   {stop_sfx postshow_loop}
   {meta_loading_goto demo_marketing_screen}
}
#define ADJS (
   (
      (adj_c_1 adj_c_2 adj_c_3)
      (adj_b_1 adj_b_2 adj_b_3)
      (adj_a_1 adj_a_2 adj_a_3 adj_a_4)
   )
)
#define VERBS (
   (
      (verb_c_1 verb_c_2 verb_c_3)
      (verb_b_1 verb_b_2)
      (verb_a_1 verb_a_2 verb_a_3 verb_a_4)
   )
)
#define NOUNS ((set show))
#define HEADLINE_HANDLERS (
   (gen_game_headline1
      {sprintf
         "%s %s %s %s %s %s"
         {localize {random_elem {elem ADJS $index}}}
         {localize {random_elem NOUNS}}
         {localize "from"}
         $band
         {localize "at"}
         {localize {game get_venue}}
      }
   )
   (gen_demo_headline1
      {sprintf
         "%s %s %s %s"
         {localize {random_elem {elem ADJS $index}}}
         {localize {random_elem NOUNS}}
         {localize "at"}
         {localize {game get_venue}}
      }
   )
   (gen_headline_1
      {do
         ($index {- {player0 num_stars} 3})
         ($band {campaign profile_name {campaign profile_slot}})
         {headline_format $band $band}
         {$this gen_demo_headline1}
      }
   )
   (gen_headline_2
      {do
         ($index {- {player0 num_stars} 3})
         ($band {campaign profile_name {campaign profile_slot}})
         {headline_format $band $band}
         {sprintf
            "%s %s %s %s %s %s"
            {localize "new_band_headline"}
            {localize {random_elem {elem VERBS $index}}}
            {localize {game get_venue}}
            {localize "with"}
            {localize {random_elem {elem ADJS $index}}}
            {localize {random_elem NOUNS}}
         }
      }
   )
   (gen_basement_headline
      {localize {sprintf "headline_basement_star%i" {player0 num_stars}}}
   )
   (set_headline
      ($label)
      {$label set_localized_text
         {$this
            {if_else {== {game get_venue} basement}
               gen_basement_headline
               {random_elem (gen_headline_1 gen_headline_2)}
            }
         }
      }
   )
)
{new GHPanel
   endgame_panel
   (file endgame.milo)
   (clear_vram TRUE)
   HEADLINE_HANDLERS
   (enter
      {endgame_song_data.lbl set_localized_text {game get_song_text}}
      {endgame_diff_data.lbl set_text {game get_difficulty_sym 0}}
      {do
         ($player player0)
         {endgame_score_data.lbl set_localized_text {sprint {$player score}}}
         {endgame_percent_data.lbl set_localized_text
            {sprintf {localize eg_percent_format} {$player percent_hit}}
         }
         {endgame_streak_data.lbl set_localized_text
            {sprintf {localize eg_streak_format} {$player longest_streak}}
         }
         {endgame_review_data.lbl set_text {$player star_rating}}
      }
      {$this set_headline endgame_headline.lbl}
      {set $new_venue ""}
      {set $new_status 0}
      {set $new_cash 0}
      {if {== career {gamecfg get mode}}
         {do
            ($score {player0 score})
            {campaign finish_song $score $new_venue $new_status}
            {if {!= $new_venue ""}
               {gamecfg set continue_screen career_screen}
            }
         }
      }
   )
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {synth play_sequence button_select}
         {if_else {== career {gamecfg get mode}}
            {if_else $new_status
               {ui goto_screen status_screen}
               {if_else {campaign has_cash_award}
                  {ui goto_screen cashaward_screen}
                  {goto_endgame_complete}
               }
            }
            {goto_endgame_complete}
         }
      }
      kDataUnhandled
   )
}
{new GHScreen
   endgame_screen
   (panels GAME_PANELS endgame_panel helpbar)
   (focus endgame_panel)
   (enter {world_panel set_showing FALSE})
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (helpbar (default ((fret1 help_continue))))
}
{new UIPanel win_easy_panel (file win_easy.milo)}
{new GHScreen
   win_easy_screen
   (panels GAME_PANELS win_easy_panel helpbar)
   (focus win_easy_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (continue_time 0)
   (animate_transition FALSE)
   (helpbar (default ()))
   (enter
      {$this set continue_time {'+' {taskmgr ui_seconds} 6000}}
      {play_sfx beat_easy}
      {play_sfx crowd_win}
      {{win_easy_panel find we_bandname.lbl} set_localized_text
         {campaign profile_name {campaign profile_slot}}
      }
   )
   (can_continue {> {taskmgr ui_seconds} [continue_time]})
   (poll
      {if {$this can_continue}
         {helpbar set_display ((fret1 help_continue))}
      }
   )
   (BUTTON_DOWN_MSG
      {if {&& {$this can_continue} {== $button kPad_X}}
         {synth play_sequence button_select}
         {ui goto_screen endgame_screen}
      }
   )
}
#define WIN_GAME_FADE_TO_BLACK_SEC (1)
#define WIN_GAME_FADE_TO_WHITE_SEC (1)
#define WIN_GAME_FADE_IN_SCREEN_SEC (4)
#define WIN_GAME_INPUT_DELAY_SEC (6)
{new GuitarDisplayPanel
   endgame_guitar_display_panel
   (file guitar_display.milo)
   (config endgame)
}
{new UIPanel win_game_panel (file win_game.milo)}
{new GHScreen
   win_game_screen
   (panels
      GAME_PANELS
      win_game_panel
      endgame_guitar_display_panel
      helpbar
      fade_panel
   )
   (focus win_game_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (helpbar (default ()))
   (enter
      {fade_panel start_fade
         WIN_GAME_FADE_IN_SCREEN_SEC
         (color 1 1 1)
         (fade_synth FALSE)
         (fade_out FALSE)
      }
      {$this set
         continue_time
         {'+' {taskmgr ui_seconds} WIN_GAME_INPUT_DELAY_SEC}
      }
      {endgame_guitar_display_panel hide TRUE}
      {{win_game_panel find win_screen1.view} set_showing TRUE}
      {{win_game_panel find win_screen2.view} set_showing FALSE}
      {{win_game_panel find wg_diff.lbl} set_localized_text
         {sprintf {localize win_diff} {localize {game get_difficulty_sym 0}}}
      }
      {play_sfx beat_other}
      {play_sfx crowd_win}
      {$this set battleaxe_display FALSE}
   )
   (can_continue {> {taskmgr ui_seconds} [continue_time]})
   (poll
      {if {$this can_continue}
         {helpbar set_display ((fret1 help_continue))}
      }
   )
   (leave_screen
      {fade_panel start_fade
         WIN_GAME_FADE_TO_BLACK_SEC
         (color 0 0 0)
         (fade_synth FALSE)
         (fade_out TRUE)
      }
      {synth play_sequence button_select}
      {new ScriptTask
         (delay WIN_GAME_FADE_TO_BLACK_SEC)
         (script {ui goto_screen endgame_screen})
      }
   )
   (display_battleaxe
      {campaign unlock_global_item battleaxe}
      {$this set battleaxe_display TRUE}
      {$this set
         continue_time
         {'+' {taskmgr ui_seconds} WIN_GAME_INPUT_DELAY_SEC}
      }
      {fade_panel start_fade
         WIN_GAME_FADE_TO_WHITE_SEC
         (color 1 1 1)
         (fade_synth FALSE)
         (fade_out TRUE)
      }
      {new ScriptTask
         (delay WIN_GAME_FADE_TO_WHITE_SEC)
         (script
            {{win_game_panel find win_screen1.view} set_showing FALSE}
            {{win_game_panel find win_screen2.view} set_showing TRUE}
            {endgame_guitar_display_panel hide FALSE}
            {endgame_guitar_display_panel show_guitar
               0
               battleaxe
               ''
               {{sel_guitar loaded_dir} find guitar.pxy}
               {{sel_guitar loaded_dir} find guitar_single.filt}
            }
            {fade_panel start_fade
               WIN_GAME_FADE_IN_SCREEN_SEC
               (color 1 1 1)
               (fade_synth FALSE)
               (fade_out FALSE)
            }
         )
      }
   )
   (BUTTON_DOWN_MSG
      {if {&& {$this can_continue} {== $button kPad_X}}
         {if_else
            {&&
               {== kDifficultyExpert {game get_difficulty 0}}
               {! {$this get battleaxe_display}}
            }
            {$this display_battleaxe}
            {$this leave_screen}
         }
      }
   )
}
{new StatusPanel
   status_panel
   (file {sprint "status_" {campaign status} ".milo"})
   (retain_last_focus FALSE)
   (enter
      {if
         {&&
            {meta get won_campaign}
            {== 5 {campaign status}}
            {== kDifficultyEasy {game get_difficulty 0}}
         }
         {status_guitarhero_newvenue.view set_showing FALSE}
      }
   )
   (text
      (status1
         (band
            (label "status_rocker_headline1.lbl")
            (token status_rocker_week)
         )
      )
      (status2
         (band
            (label "status_young_bandname.lbl")
            (token status_young_gun_interview)
         )
      )
      (status3
         (band
            (label "status_shredder_headline2.lbl")
            (token status_shredder_changing)
         )
      )
      (status4
         (band
            (label "status_pro_headline1.lbl")
            (token status_pro_goes)
         )
         (band
            (label "status_pro_headline2.lbl")
            (token status_pro_piece)
         )
      )
      (status5
         (band
            (label "status_guitarhero_venue1.lbl")
            (token status_guitarhero_crash)
         )
         (char (label "status_guitarhero_headline1.lbl"))
         (char (label "status_guitarhero_headline5.lbl"))
      )
      (status6 (char (label "status_guitarlegend_charname.lbl")))
      (status7
         (char (label "status_guitargod_headline3.lbl"))
         (char (label "status_guitargod_status2.lbl"))
         (char (label "status_guitargod_headline2.lbl"))
         (band
            (label "status_guitargod_headline5.lbl")
            (token status_god_depart)
         )
         (band
            (label "status_guitargod_headline7.lbl")
            (token status_god_drummer)
         )
      )
   )
}
{new GHScreen
   status_screen
   (panels GAME_PANELS status_panel helpbar)
   (focus status_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (helpbar (default ((fret1 help_continue))))
   (enter {play_sfx beat_venue})
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {synth play_sequence button_select}
         {cond
            ({campaign has_cash_award}
               {ui goto_screen cashaward_screen}
            )
            (TRUE {goto_endgame_complete})
         }
      }
   )
}
{new UIPanel
   cashaward_panel
   (file "cashaward.milo")
   (enter
      {ca_bandname.lbl set_localized_text
         {campaign profile_name {campaign profile_slot}}
      }
      {animate_forever_30fps $this cashaward.view}
   )
}
{new GHScreen
   cashaward_screen
   (panels GAME_PANELS cashaward_panel helpbar)
   (focus cashaward_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (force_exit TRUE)
   (helpbar (default ((fret1 help_continue))))
   (enter {$this show_next_award})
   (show_next_award
      {play_sfx cash_award}
      {do
         ($amount 0)
         ($reason 0)
         ($gross)
         {campaign next_cash_award $amount $reason}
         {{cashaward_panel find ca_reason.lbl} set_text $reason}
         {{cashaward_panel find ca_amount.lbl} set_localized_text
            {sprintf "$%d" $amount}
         }
         {set $gross {int {/ $amount 5.0e-2}}}
         {{cashaward_panel find ca_grossnum.lbl} set_localized_text
            {sprintf "$%d" $gross}
         }
         {$this show_fee ca_num1.lbl $gross 0.26}
         {$this show_fee ca_num2.lbl $gross 0.21}
         {$this show_fee ca_num3.lbl $gross 9.0e-2}
         {$this show_fee ca_num4.lbl $gross 0.12}
         {$this show_fee ca_num5.lbl $gross 0.15}
         {$this show_fee ca_num6.lbl $gross 4.0e-2}
         {$this show_fee ca_num7.lbl $gross 8.0e-2}
      }
   )
   (show_fee
      ($lbl $gross $pct)
      {do
         ($fee {int {'*' $pct $gross}})
         {{cashaward_panel find $lbl} set_localized_text {sprintf "-$%d" $fee}}
      }
   )
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {synth play_sequence button_select}
         {if_else {campaign has_cash_award}
            {$this show_next_award}
            {goto_endgame_complete}
         }
      }
   )
}
{new UIPanel
   highscore_panel
   (file highscore.milo)
   (active_ten NULL)
   (flushed FALSE)
   (enter
      {set [flushed] FALSE}
      {hs_stats.lbl set_localized_text
         {sprintf
            {localize highscore_score_fmt}
            {game get_song_text}
            {localize {game get_difficulty_sym 0}}
         }
      }
      {do
         ($score {player0 score})
         ($index {'+' {highscores check_highscore $score} 1})
         {$this fill_scores $index $score}
         {if_else {== $index 0}
            {$this view_scores}
            {$this enter_score $index}
         }
      }
      {highscore_screen update_help_bar}
   )
   (fill_scores
      ($new_index $new_score)
      {do
         ($slot 0)
         {foreach_int $i 1 6
            {do
               ($name 0)
               ($score 0)
               {if_else {== $i $new_index}
                  {$this set_entry $i "" $new_score}
                  {do
                     {highscores get_highscore $slot $name $score}
                     {$this set_entry $i $name $score}
                     {'++' $slot}
                  }
               }
            }
         }
      }
   )
   (set_entry
      ($index $name $score)
      {do
         ($name_lbl {sprintf "hs_name%d.lbl" $index})
         ($score_lbl {sprintf "hs_score%d.lbl" $index})
         {$name_lbl set_localized_text $name}
         {$score_lbl set_text {sprintf "%d" $score}}
      }
   )
   (get_text_entry
      ($index)
      {sprintf "hs_entry%d.ten" $index}
   )
   (get_name_label
      ($index)
      {sprintf "hs_name%d.lbl" $index}
   )
   (enter_score
      ($index)
      {do
         ($ten {$this get_text_entry $index})
         {set [active_ten] $ten}
         {$this set_focus $ten}
         {hs_flush.tnm set_frame 0}
         {$this set_text_entry $index}
      }
   )
   (view_scores
      {set [active_ten] 0}
      {$this set_text_entry -1}
      {hs_start.lbl set_showing FALSE}
   )
   (set_text_entry
      ($index)
      {foreach_int $i 1 6
         {{$this get_text_entry $i} set_showing {== $i $index}}
         {{$this get_name_label $i} set_showing {!= $i $index}}
      }
   )
   (get_active_ten
      {if_else [active_ten]
         {$this find [active_ten]}
         NULL
      }
   )
   (poll
      {if
         {&&
            {!= {$this get_active_ten} NULL}
            {{$this get_active_ten} is_done}
            {! [flushed]}
         }
         {set [flushed] TRUE}
         {new AnimTask
            (anim hs_flush.tnm kTaskRange)
            (units kTaskUISeconds)
            (period 1)
            (start 0)
            (end 17)
         }
         {play_sfx flush}
         {highscore_screen update_help_bar}
         {new ScriptTask
            (delay 7)
            (units kTaskUISeconds)
            (script {goto_endgame_complete})
         }
      }
   )
}
{new GHScreen
   highscore_screen
   (panels GAME_PANELS highscore_panel helpbar)
   (focus highscore_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (okay_to_add_score TRUE)
   (update_help_bar
      {do
         ($ten {highscore_panel get_active_ten})
         {helpbar set_display
            {if_else {&& {!= $ten NULL} {! {$ten is_done}}}
               {get_text_entry_help_text () $ten FALSE}
               {if_else {highscore_panel get flushed}
                  ()
                  ((fret1 help_continue))
               }
            }
         }
      }
   )
   (SELECT_MSG {$this update_help_bar} kDataUnhandled)
   (SCREEN_BACK_MSG {$this update_help_bar} kDataUnhandled)
   (TEXT_ENTRY_MSG
      {do
         ($ten {highscore_panel get_active_ten})
         {if {&& {!= $ten NULL} [okay_to_add_score]}
            {set [okay_to_add_score] FALSE}
            {highscores add {$ten get_text} {player0 score}}
         }
         kDataUnhandled
      }
   )
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {do
            ($ten {highscore_panel get_active_ten})
            {if {'||' {== $ten NULL} {$ten is_done}}
               {synth play_sequence button_select}
               {goto_endgame_complete}
            }
         }
      }
      kDataUnhandled
   )
}
{new GHPanel
   complete_panel
   (file complete.milo)
   (clear_vram TRUE)
   (enter
      {$this set_focus comp_selsong.btn}
      {if
         {&&
            {== career {gamecfg get mode}}
            {! {campaign is_store_song {game get_song}}}
         }
         {comp_selsong.btn set_text CONTINUE}
      }
   )
   (SELECT_MSG
      {switch $component
         (comp_restart.btn
            {world_panel set_showing TRUE}
            {game_restart_fast}
         )
         (comp_selsong.btn
            {if_else {== {gamecfg get mode} multi_coop}
               {meta_loading_goto demo_multi_coop_selsong_screen}
               {meta_loading_goto demo_selsong_screen}
            }
         )
         (comp_quit.btn {meta_loading_goto {gamecfg get main_screen}})
      }
      {stop_sfx postshow_loop}
      {if {== career {gamecfg get mode}}
         {gamecfg set mode career}
      }
   )
}
{new GHScreen
   complete_screen
   (panels GAME_PANELS complete_panel helpbar)
   (focus complete_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (strum help_updown)
         )
      )
   )
}