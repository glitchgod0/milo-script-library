#define ATMOSPHERIC_STATS (
   (
      (stat_faces_melted 1 300)
      (stat_bottles_thrown 1 80)
      (stat_roadies_lost 1 8)
      (stat_guitars_broken 1 4)
      (stat_speakers_blown 1 20)
      (stat_cds_sold 1 500)
      (stat_bootlegs_made 1 30)
      (stat_cars_stickered 1 80)
      (stat_hotels_trashed 1 3)
      (stat_sound_guys_blamed 1 3)
      (stat_strings_snapped 1 6)
      (stat_noise_complaints 1 20)
      (stat_laws_broken 1 20)
      (stat_drinks_spilled 1 200)
      (stat_reviewers_floored 1 5)
      (stat_scouts_impressed 1 5)
   )
)
{new GHScreen
   post_show_screen
   (panels GAME_PANELS fade_panel)
   (allow_back FALSE)
   (animate_transition FALSE)
   (pfo_newly_unlocked 0)
   (enter
      {game set_paused TRUE}
      {crowd_audio turn_off}
      {set $new_venue ""}
      {set $new_status 0}
      {set $new_status_award 0}
      {if {== career {gamecfg get mode}}
         {do
            ($score {player0 score})
            ($pfo {campaign is_unlocked multi_fo})
            {campaign finish_song $score $new_venue $new_status $new_status_award}
            {set [pfo_newly_unlocked] {&& {! $pfo} {campaign is_unlocked multi_fo}}}
            {cashaward_screen set new_status $new_status}
            {status_panel set new_status_award $new_status_award}
            {endgame_panel set new_venue $new_venue}
            {if {get_highscore_index $score}
               {highscores add {campaign profile_name {campaign profile_slot}} $score}
            }
         }
      }
      {endgame_stats_screen set atmospheric_stat {random_elem ATMOSPHERIC_STATS}}
      {do
         ($win_screen $freebird)
         {set $win_screen
            {if_else {meta get won_campaign}
               win_game_screen
               {if_else
                  {'||'
                     {game get force_encore}
                     {&&
                        {game get encore_unlock_check}
                        {campaign encore_newly_unlocked $freebird}
                     }
                  }
                  endgame_encore_screen
                  {gamecfg get win_screen}
               }
            }
         }
         {script_task
            (units kTaskUISeconds)
            (delay 0.3)
            (script {play_sfx postshow_loop})
         }
         {if {== $win_screen endgame_encore_screen}
            {endgame_encore_panel set freebird $freebird}
         }
         {ui goto_screen $win_screen}
      }
   )
}
{func goto_endgame_complete
   {if_else {== {gamecfg get mode} career}
      {cond
         ({campaign has_cash_award}
            {ui goto_screen cashaward_screen}
         )
         ($new_status
            {set $new_status FALSE}
            {ui goto_screen status_screen}
         )
         (TRUE {ui goto_screen complete_screen})
      }
      {ui goto_screen complete_screen}
   }
}
#define ADJS (
   (
      (adj_c_1
         adj_c_2
         adj_c_3
         adj_c_4
         adj_c_5
         adj_c_6
         adj_c_7
         adj_c_8
         adj_c_9
         adj_c_10
         adj_c_11
         adj_c_12
         adj_c_13
      )
      (adj_b_1
         adj_b_2
         adj_b_3
         adj_b_4
         adj_b_5
         adj_b_6
         adj_b_7
         adj_b_8
         adj_b_9
         adj_b_10
         adj_b_11
         adj_b_12
         adj_b_13
      )
      (adj_a_1
         adj_a_2
         adj_a_3
         adj_a_4
         adj_a_5
         adj_a_6
         adj_a_7
         adj_a_8
         adj_a_9
         adj_a_10
         adj_a_11
         adj_a_12
         adj_a_13
      )
   )
)
#define VERBS (
   (
      (verb_c_1 verb_c_2 verb_c_3 verb_c_4 verb_c_5 verb_c_6 verb_c_7)
      (verb_b_1
         verb_b_2
         verb_b_3
         verb_b_4
         verb_b_5
         verb_b_6
         verb_b_7
         verb_b_8
         verb_b_9
         verb_b_10
         verb_b_11
         verb_b_12
      )
      (verb_a_1
         verb_a_2
         verb_a_3
         verb_a_4
         verb_a_5
         verb_a_6
         verb_a_7
         verb_a_8
         verb_a_9
         verb_a_10
      )
   )
)
#define VERBS_PAST (
   (
      (verb_past_c_1 verb_past_c_2 verb_past_c_3)
      (verb_past_b_1 verb_past_b_2)
      (verb_past_a_1 verb_past_a_2 verb_past_a_3 verb_past_a_4)
   )
)
#define NOUNS (
   (
      (noun_c_1 noun_c_2 noun_c_3)
      (noun_b_1 noun_b_2)
      (noun_a_1 noun_a_2 noun_a_3 noun_a_4)
   )
)
#define BATTLE_WIN_PHRASE (
   (
      (win_phrase_c_1 win_phrase_c_2)
      (win_phrase_b_1 win_phrase_b_2)
      (win_phrase_a_1 win_phrase_a_2)
   )
)
#define WIN_VS_VERB (
   (
      (win_vs_verb_c_1 win_vs_verb_c_2)
      (win_vs_verb_b_1 win_vs_verb_b_2)
      (win_vs_verb_a_1 win_vs_verb_a_2)
   )
)
#define WIN_VS_NOUN (
   (
      (win_vs_noun_c_1 win_vs_noun_c_2)
      (win_vs_noun_b_1 win_vs_noun_b_2)
      (win_vs_noun_a_1 win_vs_noun_a_2)
   )
)
#define HEADLINE_HANDLERS (
   (gen_headline_tour_1
      {do
         ($index {- {player0 num_stars} 3})
         {$this generate_headline
            headline1
            (adj {localize {random_elem {elem ADJS $index}}})
            (noun {localize {random_elem {elem NOUNS $index}}})
         }
      }
   )
   (gen_headline_tour_2
      {do
         ($index {- {player0 num_stars} 3})
         {$this generate_headline
            headline2
            (adj {localize {random_elem {elem ADJS $index}}})
            (noun {localize {random_elem {elem NOUNS $index}}})
            (verb {localize {random_elem {elem VERBS $index}}})
         }
      }
   )
   (gen_battle_headline
      {do
         ($index {- {player0 num_stars} 3})
         {$this generate_headline
            headline_battle
            (win_phrase {localize {random_elem {elem BATTLE_WIN_PHRASE $index}}})
         }
      }
   )
   (gen_headline_perfect {$this generate_headline headline_perfect})
   (gen_headline_perfect_coop {$this generate_headline headline_perfect_coop})
   (gen_headline_qc_1
      {do
         ($index {- {player0 num_stars} 3})
         {$this generate_headline
            headline_quick_coop1
            (adj {localize {random_elem {elem ADJS $index}}})
            (noun {localize {random_elem {elem NOUNS $index}}})
            (verb {localize {random_elem {elem VERBS $index}}})
         }
      }
   )
   (gen_headline_qc_2
      {do
         ($index {- {player0 num_stars} 3})
         {$this generate_headline
            headline_quick_coop2
            (adj {localize {random_elem {elem ADJS $index}}})
            (noun {localize {random_elem {elem NOUNS $index}}})
            (verb_past {localize {random_elem {elem VERBS_PAST $index}}})
         }
      }
   )
   (gen_versus_headline
      {if_else {== {player0 score} {player1 score}}
         headline_vs_tie
         {do
            ($spread {$this get_versus_spread {player0 score} {player1 score}})
            ($winner
               {if_else {> {player1 score} {player0 score}}
                  "2"
                  "1"
               }
            )
            {$this generate_headline
               headline_vs
               (num $winner)
               (vs_verb {localize {random_elem {elem WIN_VS_VERB $spread}}})
               (vs_noun {localize {random_elem {elem WIN_VS_NOUN $spread}}})
            }
         }
      }
   )
   (set_headline
      ($label)
      {$label set_localized_text
         {$this
            {cond
               ({&&
                     {==
                        multi_coop
                        {gamecfg get mode}}
                     {==
                        {player0 percent_hit}
                        100}
                     {==
                        {player1 percent_hit}
                        100}}
                  gen_headline_perfect_coop
               )
               ({==
                     multi_coop
                     {gamecfg get mode}}
                  {random_elem (gen_headline_qc_1 gen_headline_qc_2)}
               )
               ({==
                     quickplay
                     {gamecfg get mode}}
                  {if_else {== {player0 percent_hit} 100}
                     gen_headline_perfect
                     {random_elem (gen_headline_qc_1 gen_headline_qc_2)}
                  }
               )
               ({&&
                     {==
                        career
                        {gamecfg get mode}}
                     {==
                        {player0 percent_hit}
                        100}}
                  gen_headline_perfect
               )
               ({==
                     career
                     {gamecfg get mode}}
                  {if_else {== {game get_venue} battle}
                     gen_battle_headline
                     {random_elem (gen_headline_tour_1 gen_headline_tour_2)}
                  }
               )
               ({'||'
                     {==
                        multi_vs
                        {gamecfg get mode}}
                     {==
                        multi_fo
                        {gamecfg get mode}}}
                  gen_versus_headline
               )
            }
         }
      }
   )
)
{new EndGamePanel
   endgame_panel
   (file endgame.milo)
   (focus me_continue.btn)
   HEADLINE_HANDLERS
   ENDGAME_SELECT_HANDLERS
   (new_venue "")
   (new_status 0)
   (new_status_award 0)
   (enter
      {endgame_song_data.lbl set_localized_text {game get_song_text}}
      {endgame_diff_data.lbl set_text {game get_difficulty_sym 0}}
      {if {!= [new_venue] ""}
         {gamecfg set continue_screen career_screen}
      }
      {do
         ($player player0)
         {endgame_score_data.lbl set_localized_text {sprint {$player score}}}
         {endgame_streak_data.lbl set_localized_text
            {sprint {$player longest_streak}}
         }
         {endgame_percent_data.lbl set_localized_text
            {sprintf {localize eg_percent_format} {$player percent_hit}}
         }
         {endgame_streak_data.lbl set_localized_text
            {sprintf {localize eg_streak_format} {$player longest_streak}}
         }
         {endgame_review_data.lbl set_text {$player star_rating}}
         {percentbar_p1.mesh set_local_scale {/ {$player percent_hit} 100.0} 1 1}
      }
      {$this set_headline endgame_headline.lbl}
      {$this set_focus me_continue.btn}
   )
   (SELECT_MSG
      {switch $component
         (me_continue.btn {goto_endgame_complete})
         (me_morestats.btn
            {endgame_stats_screen set prev_screen {ui current_screen}}
            {ui goto_screen endgame_stats_screen}
         )
      }
      kDataUnhandled
   )
}
{new GHScreen
   endgame_screen
   (panels GAME_PANELS endgame_panel helpbar)
   (focus endgame_panel)
   (clear_vram TRUE)
   (enter {world_panel set_showing FALSE})
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (helpbar (default ((fret1 help_continue))))
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {ui goto_screen complete_screen}
      }
      TRUE
   )
}
{new GHPanel
   endgame_stats_panel
   (file
      {if_else {gamecfg multiplayer}
         endgame_stats_multi.milo
         endgame_stats.milo
      }
   )
   (is_scrolling FALSE)
   (reset_focus TRUE)
   (enter
      {song_name.lbl set_localized_text {game get_song_text}}
      {gamecfg foreach_player $player
         {do
            ($gems_hit {$player gems_hit})
            ($gems_total {'+' $gems_hit {$player gems_passed}})
            {{sprint
                  $player
                  "_notes_hit.lbl"} set_localized_text
               {sprint $gems_hit "/" $gems_total}
            }
         }
         {{sprint
               $player
               "_sp_phrases.lbl"} set_localized_text
            {$player sp_phrases}
         }
      }
      {if_else {gamecfg multiplayer}
         {$this update_multiplayer_stats}
         {$this update_singleplayer_stats}
      }
      {stats_sections.lst set_provider {new StatsProvider}}
   )
   (update_singleplayer_stats
      {player0_sp_points.lbl set_localized_text
         {sprintf {localize eg_percent_format} {player0 sp_points_percent}}
      }
      {do
         ($stat {endgame_stats_screen get atmospheric_stat})
         ($hit {player0 gems_hit})
         ($total {'+' $hit {player0 gems_passed}})
         ($min {elem $stat 1})
         ($max {elem $stat 2})
         ($base {'*' 0.6 $total})
         ($num
            {'+'
               {int {'*' {/ {max 0 {- $hit $base}} {- $total $base}} {- $max $min}}}
               $min
            }
         )
         {label_atmospheric.lbl set_text {elem $stat 0}}
         {player0_atmospheric.lbl set_localized_text {sprint $num}}
      }
   )
   (update_multiplayer_stats
      {do
         ($p0hit {player0 gems_hit})
         ($p0all {'+' $p0hit {player0 gems_passed}})
         ($p1hit {player1 gems_hit})
         ($p1all {'+' $p1hit {player1 gems_passed}})
         {if_else {> {'*' $p0hit $p1all} {'*' $p1hit $p0all}}
            {do
               {player0_best.lbl set_showing TRUE}
               {player1_best.lbl set_showing FALSE}
            }
            {do
               {player1_best.lbl set_showing TRUE}
               {player0_best.lbl set_showing FALSE}
            }
         }
      }
      {if_else {== {gamecfg get mode} multi_coop}
         {$this update_coop_stats}
         {$this update_faceoff_stats}
      }
   )
   (update_coop_stats
      {stats_coop.grp set_showing TRUE}
      {stats_faceoff.grp set_showing FALSE}
      {gamecfg foreach_player $player
         {{sprint
               $player
               "_streaks_broken.lbl"} set_localized_text
            {sprint {$player streaks_broken}}
         }
      }
      {player_teamwork.lbl set_localized_text {sprint {player0 sp_usages}}}
   )
   (update_faceoff_stats
      {stats_coop.grp set_showing FALSE}
      {stats_faceoff.grp set_showing TRUE}
      {gamecfg foreach_player $player
         {{sprint
               $player
               "_lead_time.lbl"} set_localized_text
            {sprintf
               {localize eg_percent_format}
               {int {/ {'*' 100 {$player lead_time_sec}} {game song_duration_sec}}}
            }
         }
      }
   )
   (stop_scrolling
      {if [is_scrolling]
         {receipt_scroll.tnm stop_animation}
         {set [is_scrolling] FALSE}
      }
   )
   (BUTTON_DOWN_MSG
      {if {is_updown_button $button}
         {$this stop_scrolling}
         {receipt_scroll.tnm animate
            (dest
               {if_else {== $button kPad_DDown}
                  {receipt_scroll.tnm end_frame}
                  0
               }
            )
            (units kTaskUISeconds)
         }
         {set [is_scrolling] TRUE}
      }
      kDataUnhandled
   )
   (BUTTON_UP_MSG
      {if {is_updown_button $button}
         {$this stop_scrolling}
      }
      kDataUnhandled
   )
}
{new GHScreen
   endgame_stats_screen
   (panels GAME_PANELS endgame_stats_panel helpbar)
   (focus endgame_stats_panel)
   (in_game TRUE)
   (allow_back TRUE)
   (animate_transition FALSE)
   (atmospheric_stat 0)
   (prev_screen 0)
   (next_screen 0)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (BUTTON_DOWN_MSG
      {cond
         ({== $button kPad_X}
            {synth play_sequence button_select}
            {if_else [next_screen]
               {do
                  ($next_screen [next_screen])
                  {set [next_screen] 0}
                  {ui goto_screen $next_screen}
               }
               {goto_endgame_complete}
            }
         )
         ({== $button kPad_Tri}
            {synth play_sequence button_select}
            {ui goto_screen [prev_screen]}
         )
      }
      kDataUnhandled
   )
}
#define START_ENCORE (
   {world play_meta_sfx encore_yes}
   {game set_song {campaign get_cur_encore}}
   {game retain_world_bank}
   {ui goto_screen loading_screen}
)
{new GHPanel
   endgame_encore_panel
   (file endgame_encore.milo)
   (focus yes.btn)
   (cash_award 0)
   (freebird 0)
   (freebird_count 0)
   (enter
      {$this set_focus yes.btn}
      {set [freebird_count] 0}
      {set [cash_award] 0}
      {while {campaign has_cash_award}
         {do
            ($amount 0)
            ($reason 0)
            {campaign next_cash_award $amount $reason}
            {set [cash_award] {'+' $total $amount}}
         }
      }
      {letter1.lbl set_localized_text
         {if_else [cash_award]
            {sprint
               {sprintf
                  {localize endgame_encore_letter1}
                  {player0 score}
                  {player0 num_stars}
               }
               {sprintf {localize endgame_encore_letter2} [cash_award]}
            }
            {sprintf
               {localize endgame_encore_letter1}
               {player0 score}
               {player0 num_stars}
            }
         }
      }
      {if_else [freebird]
         {do
            {title1.lbl set_text endgame_encore_title_freebird1}
            {title2.lbl set_localized_text ""}
            {letter2.lbl set_text endgame_encore_freebird1}
         }
         {do
            {title1.lbl set_text endgame_encore_title1}
            {title2.lbl set_text endgame_encore_title2}
            {letter2.lbl set_text endgame_encore_letter3}
         }
      }
   )
   (SELECT_MSG
      {synth play_sequence button_select}
      {switch $component
         (yes.btn
            {if_else [freebird]
               {do
                  {switch [freebird_count]
                     (0
                        {set [freebird_count] 1}
                        {title1.lbl set_text endgame_encore_title_freebird2}
                        {letter1.lbl set_localized_text ""}
                        {letter2.lbl set_localized_text ""}
                     )
                     (1
                        {set [freebird_count] 2}
                        {title1.lbl set_text endgame_encore_title_freebird3}
                     )
                     (2 START_ENCORE)
                  }
               }
               {do
                  START_ENCORE
               }
            }
         )
         (no.btn
            {world play_meta_sfx encore_no}
            {encore_stream stop}
            {ui goto_screen endgame_screen}
         )
      }
      kDataUnhandled
   )
}
{new GHScreen
   endgame_encore_screen
   (panels GAME_PANELS endgame_encore_panel helpbar)
   (focus endgame_panel)
   (clear_vram TRUE)
   (animate_transition FALSE)
   (allow_back FALSE)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (strum help_updown)
         )
      )
   )
   (enter
      {world_panel set_showing FALSE}
      {$this set_focus_panel endgame_encore_panel}
   )
}
#define WIN_GAME_FADE_TO_BLACK_SEC (1)
#define WIN_GAME_FADE_TO_WHITE_SEC (1)
#define WIN_GAME_FADE_IN_SCREEN_SEC (4)
#define WIN_GAME_INPUT_DELAY_SEC (6)
{new UIPanel
   win_game_panel
   (file {sprintf "win_%s.milo" {gamecfg get_difficulty_sym 0}})
   (enter
      {we_bandname.lbl set_localized_text
         {campaign profile_name {campaign profile_slot}}
      }
   )
}
{new GHScreen
   win_game_screen
   (panels GAME_PANELS win_game_panel helpbar fade_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (continue_time 0)
   (animate_transition FALSE)
   (helpbar (default ()))
   (enter
      {fade_panel start_fade
         WIN_GAME_FADE_IN_SCREEN_SEC
         (color 1 1 1)
         (fade_synth FALSE)
         (fade_out FALSE)
      }
      {set [continue_time] {'+' {taskmgr ui_seconds} WIN_GAME_INPUT_DELAY_SEC}}
      {play_sfx
         {if_else {== kDifficultyEasy {game get_difficulty 0}}
            beat_easy
            beat_other
         }
      }
      {world play_meta_sfx crowd_win}
   )
   (can_continue {> {taskmgr ui_seconds} [continue_time]})
   (poll
      {if {$this can_continue}
         {helpbar set_display ((fret1 help_continue))}
      }
   )
   (BUTTON_DOWN_MSG
      {if {&& {$this can_continue} {== $button kPad_X}}
         {fade_panel start_fade
            WIN_GAME_FADE_TO_BLACK_SEC
            (color 0 0 0)
            (fade_synth FALSE)
            (fade_out TRUE)
         }
         {synth play_sequence button_select}
         {script_task
            (delay WIN_GAME_FADE_TO_BLACK_SEC)
            (units kTaskUISeconds)
            (script
               {ui goto_screen
                  {if_else {post_show_screen get pfo_newly_unlocked}
                     unlock_pfo_screen
                     endgame_screen
                  }
               }
            )
         }
      }
   )
}
{new GHPanel unlock_pfo_panel (file "unlock_profaceoff.milo")}
{new GHScreen
   unlock_pfo_screen
   (panels GAME_PANELS unlock_pfo_panel helpbar)
   (animate_transition FALSE)
   (focus unlock_pfo_panel)
   (helpbar (default ((fret1 help_continue))))
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {ui goto_screen endgame_screen}
      }
   )
}
{new StatusPanel
   status_panel
   (file
      {cond
         ({campaign is_max_status} "status_god.milo")
         ({==
               kDifficultyEasy
               {game get_difficulty 0}}
            {sprint "status_" {campaign status} "_easy.milo"}
         )
         (TRUE {sprint "status_" {campaign status} ".milo"})
      }
   )
   (reset_focus TRUE)
   (new_status_award 0)
   (enter
      {if
         {&&
            {meta get won_campaign}
            {== 8 {campaign status}}
            {== kDifficultyEasy {game get_difficulty 0}}
         }
         {status_guitarhero_newvenue.view set_showing FALSE}
      }
      {if {!= kDifficultyEasy {game get_difficulty 0}}
         {status_award.lbl set_text {sprintf "%d" [new_status_award]}}
      }
   )
   (text
      (status1
         (band
            (label "status_rocker_headline1.lbl")
            (token status_rocker_week)
         )
      )
      (status2
         (band
            (label "status_young_bandname.lbl")
            (token status_young_gun_interview)
         )
      )
      (status3
         (band
            (label "status_shredder_headline2.lbl")
            (token status_shredder_changing)
         )
      )
      (status4
         (band
            (label "status_pro_headline1.lbl")
            (token status_pro_goes)
         )
         (band
            (label "status_pro_headline2.lbl")
            (token status_pro_piece)
         )
      )
      (status5
         (band
            (label "status_guitarhero_venue1.lbl")
            (token status_guitarhero_crash)
         )
         (char (label "status_guitarhero_headline1.lbl"))
         (char (label "status_guitarhero_headline5.lbl"))
      )
      (status6 (char (label "status_guitarlegend_charname.lbl")))
      (status7
         (char (label "status_guitargod_headline3.lbl"))
         (char (label "status_guitargod_status2.lbl"))
         (char (label "status_guitargod_headline2.lbl"))
         (band
            (label "status_guitargod_headline5.lbl")
            (token status_god_depart)
         )
         (band
            (label "status_guitargod_headline7.lbl")
            (token status_god_drummer)
         )
      )
      (status8
         (char (label "status_guitargod_headline3.lbl"))
         (char (label "status_guitargod_status2.lbl"))
         (char (label "status_guitargod_headline2.lbl"))
         (band
            (label "status_guitargod_headline5.lbl")
            (token status_god_depart)
         )
         (band
            (label "status_guitargod_headline7.lbl")
            (token status_god_drummer)
         )
      )
   )
}
{new GHScreen
   status_screen
   (panels GAME_PANELS status_panel helpbar)
   (focus status_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (helpbar (default ((fret1 help_continue))))
   (enter {play_sfx beat_venue})
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {synth play_sequence button_select}
         {cond
            ({!
                  {meta get won_campaign}}
               {ui goto_screen unlock_venue_screen}
            )
            (TRUE {goto_endgame_complete})
         }
      }
   )
}
{new UIPanel cashaward_panel (file "cashaward.milo")}
{new GHScreen
   cashaward_screen
   (panels GAME_PANELS cashaward_panel helpbar)
   (focus cashaward_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (force_exit TRUE)
   (new_status 0)
   (helpbar (default ((fret1 help_continue))))
   (enter
      {print "new status is " [new_status] "\n"}
      {$this show_next_award}
   )
   (show_next_award
      {play_sfx cash_award}
      {do
         ($amount 0)
         ($reason 0)
         ($gross)
         {campaign next_cash_award $amount $reason}
         {{cashaward_panel find ca_reason.lbl} set_text $reason}
         {{cashaward_panel find ca_amount.lbl} set_localized_text
            {sprintf "$%d" $amount}
         }
         {set $gross {int {/ $amount 5.0e-2}}}
         {{cashaward_panel find ca_num1.lbl} set_localized_text
            {sprintf "$%d" $gross}
         }
         {$this show_fee ca_num2.lbl $gross 0.21}
         {$this show_fee ca_num3.lbl $gross 9.0e-2}
         {$this show_fee ca_num4.lbl $gross 0.12}
         {$this show_fee ca_num5.lbl $gross 0.15}
         {$this show_fee ca_num6.lbl $gross 4.0e-2}
         {$this show_fee ca_num7.lbl $gross 8.0e-2}
      }
   )
   (show_fee
      ($lbl $gross $pct)
      {do
         ($fee {int {'*' $pct $gross}})
         {{cashaward_panel find $lbl} set_localized_text {sprintf "-$%d" $fee}}
      }
   )
   (BUTTON_DOWN_MSG
      {if {== $button kPad_X}
         {synth play_sequence button_select}
         {if_else {campaign has_cash_award}
            {$this show_next_award}
            {if_else [new_status]
               {ui goto_screen status_screen}
               {goto_endgame_complete}
            }
         }
      }
   )
}
{new UIPanel
   unlock_venue_panel
   (file {sprint "unlockvenue" {campaign status} ".milo"})
   (retain_last_focus FALSE)
   (animation_begin FALSE)
   (enter
      {unlock_anim.grp set_frame 0}
      {set [animation_begin] FALSE}
   )
   (TRANSITION_COMPLETE_MSG
      {unlock_anim.grp animate
         (name unlock_anim)
         (period 3)
         (range 0 200)
         (units kTaskUISeconds)
      }
      {set [animation_begin] TRUE}
   )
   (exit {set [animation_begin] FALSE})
   (poll
      {if {&& [animation_begin] {! {exists unlock_anim}}}
         {set [animation_begin] FALSE}
         {ui goto_screen complete_screen}
      }
   )
}
{new GHScreen
   unlock_venue_screen
   (panels GAME_PANELS unlock_venue_panel helpbar)
   (focus unlock_venue_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (helpbar (default ((fret1 help_continue))))
   (enter {play_sfx beat_venue})
}
{func get_highscore_index
   ($score)
   {'+' {highscores check_highscore $score} 1}
}
{new UIPanel
   highscore_panel
   (file highscore.milo)
   (active_ten 0)
   (auto_add TRUE)
   (flushed FALSE)
   (enter
      {set [auto_add] {== career {gamecfg get mode}}}
      {set [flushed] FALSE}
      {hs_stats.lbl set_localized_text
         {sprintf
            {localize highscore_score_fmt}
            {game get_song_text}
            {localize {game get_difficulty_sym 0}}
         }
      }
      {do
         ($score {player0 score})
         ($index {get_highscore_index $score})
         {$this fill_scores $index $score {$this get_default_name}}
         {if_else {!= $index 0}
            {$this enter_score $index}
            {if_else [auto_add]
               {ui goto_screen complete_screen}
               {$this view_scores}
            }
         }
      }
      {highscore_screen update_help_bar}
   )
   (fill_scores
      ($new_index $new_score $new_name)
      {do
         ($slot 0)
         {foreach_int $i 1 6
            {do
               ($name 0)
               ($score 0)
               {if_else {== $i $new_index}
                  {$this set_entry $i $new_name $new_score}
                  {do
                     {highscores get_highscore $slot $name $score}
                     {$this set_entry $i $name $score}
                     {'++' $slot}
                  }
               }
            }
         }
      }
   )
   (get_default_name
      {if_else [auto_add]
         {campaign profile_name {campaign profile_slot}}
         {highscores get_default_name}
      }
   )
   (set_entry
      ($index $name $score)
      {do
         ($name_lbl {sprintf "hs_name%d.lbl" $index})
         ($score_lbl {sprintf "hs_score%d.lbl" $index})
         {$name_lbl set_localized_text $name}
         {$score_lbl set_text {sprintf "%d" $score}}
      }
   )
   (get_text_entry
      ($index)
      {sprintf "hs_entry%d.ten" $index}
   )
   (get_name_label
      ($index)
      {sprintf "hs_name%d.lbl" $index}
   )
   (enter_score
      ($index)
      {hs_flush.tnm set_frame 0}
      {do
         ($ten {$this get_text_entry $index})
         {$ten set_text {$this get_default_name}}
         {if_else [auto_add]
            {do
               {set [active_ten] 0}
               {$this set_text_entry -1}
               {hs_start.lbl set_showing FALSE}
               {highscores add {$ten get_text} {player0 score}}
            }
            {do
               {set [active_ten] $ten}
               {$this set_text_entry $index}
               {$this set_focus $ten}
            }
         }
         {printf {$ten get_text}}
      }
   )
   (view_scores
      {printf "view_scores\n"}
      {set [active_ten] 0}
      {$this set_text_entry -1}
      {hs_start.lbl set_showing FALSE}
   )
   (set_text_entry
      ($index)
      {foreach_int $i 1 6
         {{$this get_text_entry $i} set_showing {== $i $index}}
         {{$this get_name_label $i} set_showing {!= $i $index}}
      }
   )
   (get_active_ten
      {if_else [active_ten]
         {$this find [active_ten]}
         NULL
      }
   )
   (poll
      {if
         {&&
            {!= {$this get_active_ten} NULL}
            {{$this get_active_ten} is_done}
            {! [flushed]}
         }
         {set [flushed] TRUE}
         {hs_flush.tnm animate (range 0 17) (period 1) (units kTaskUISeconds)}
         {play_sfx flush}
         {highscore_screen update_help_bar}
         {script_task
            (delay 7)
            (units kTaskUISeconds)
            (script {ui goto_screen complete_screen})
         }
      }
   )
}
{new GHScreen
   highscore_screen
   (panels GAME_PANELS highscore_panel helpbar)
   (focus highscore_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (okay_to_add_score TRUE)
   (enter {set [okay_to_add_score] TRUE})
   (update_help_bar
      {do
         ($ten {highscore_panel get_active_ten})
         {helpbar set_display
            {if_else {&& {!= $ten NULL} {! {$ten is_done}}}
               {get_text_entry_help_text () $ten FALSE}
               {if_else {highscore_panel get flushed}
                  ()
                  ((fret1 help_continue))
               }
            }
         }
      }
   )
   (SELECT_MSG {$this update_help_bar} kDataUnhandled)
   (SCREEN_BACK_MSG
      {synth play_sequence button_back}
      {$this update_help_bar}
      kDataUnhandled
   )
   (TEXT_ENTRY_MSG
      {do
         ($ten {highscore_panel get_active_ten})
         {if {!= $ten NULL}
            {do
               ($text {$ten get_text})
               {if [okay_to_add_score]
                  {set [okay_to_add_score] FALSE}
                  {highscores add $text {player0 score}}
                  {highscores set_default_name $text}
               }
            }
         }
         kDataUnhandled
      }
   )
   (BUTTON_DOWN_MSG
      {if_else {== $button kPad_X}
         {do
            ($ten {highscore_panel get_active_ten})
            {if {'||' {== $ten NULL} {$ten is_done}}
               {synth play_sequence button_select}
               {ui goto_screen complete_screen}
            }
            kDataUnhandled
         }
         {if_else {highscore_panel get_active_ten}
            kDataUnhandled
            TRUE
         }
      }
   )
}
{new GHPanel
   complete_panel
   (file complete.milo)
   (enter
      {$this set_focus comp_selsong.btn}
      {if
         {&&
            {== career {gamecfg get mode}}
            {! {campaign is_store_song {game get_song}}}
         }
         {comp_selsong.btn set_text CONTINUE}
      }
   )
   (SELECT_MSG
      {switch $component
         (comp_selsong.btn {meta_loading_goto {gamecfg get continue_screen}})
         (comp_restart.btn {game_restart_fast})
         (comp_quit.btn {meta_loading_goto main_screen})
      }
      {stop_sfx postshow_loop}
      {if {== career {gamecfg get mode}}
         {gamecfg set mode career}
      }
   )
}
{new GHScreen
   complete_screen
   (panels GAME_PANELS complete_panel helpbar)
   (focus complete_panel)
   (clear_vram TRUE)
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (strum help_updown)
         )
      )
   )
}