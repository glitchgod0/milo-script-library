{func DoAutogen_Lighting
   {set [working_track] "EVENTS"}
   {set $hasPractice FALSE}
   {$this foreach_textevent $text
      $tick
      {if {'||' {has_substr $text "[section "} {has_substr $text "[prc_"}}
         {set $hasPractice TRUE}
      }
   }
   {unless $hasPractice
      {notify
         "Warning: No practice sections found in the MIDI, so lighting autogen won't yield good results"
      }
   }
   {set $probability_lighting_types
      (
         (dischord TRUE)
         (verse TRUE)
         (chorus TRUE)
         (harmony FALSE)
         (manual_cool TRUE)
         (manual_warm TRUE)
         (searchlights FALSE)
         (silhouettes_spot FALSE)
         (sweep FALSE)
         (loop_cool FALSE)
         (loop_warm FALSE)
         (blackout_fast FALSE)
         (blackout_slow FALSE)
         (flare_fast FALSE)
         (flare_slow FALSE)
         (frenzy FALSE)
         (silhouettes FALSE)
         (stomp TRUE)
         (strobe_fast FALSE)
         (strobe_slow FALSE)
         (win_bre FALSE)
         (bre FALSE)
      )
   }
   {set $lighting_prob_by_section
      (
         (default (1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0))
         (intro (16 0 0 20 28 39 25 78 13 59 15 0 0 0 0 0 41 0 0 0 0 0))
         (verse (114 200 0 69 220 281 56 62 28 298 93 0 0 0 0 0 0 0 0 0 0 0))
         (chorus (196 150 200 0 95 303 224 0 162 0 0 0 0 0 0 0 0 0 0 0 0 0))
         (bridge (34 0 0 25 21 48 42 38 37 31 13 0 0 0 0 0 0 0 0 0 0 0))
         (solo (53 0 0 36 28 67 46 19 82 26 34 0 0 0 0 0 0 0 0 0 0 0))
         (outro (53 0 0 17 16 63 38 29 25 24 14 0 0 0 0 0 2 0 0 0 0 0))
      )
   }
   {func SelectRandomLighting
      ($sectionIdx)
      {set $lightingCurve {elem {elem $lighting_prob_by_section $sectionIdx} 1}}
      {set $lightingCurveTotal 0}
      {foreach $total $lightingCurve
         {'+=' $lightingCurveTotal $total}
      }
      {do
         ($val {random_int 0 $lightingCurveTotal})
         ($i 0)
         {while {>= $val {elem $lightingCurve $i}}
            {-= $val {elem $lightingCurve $i}}
            {'++' $i}
         }
         {set $lighting_type {elem $probability_lighting_types $i}}
      }
      $lighting_type
   }
   {do
      ($count 0)
      ($tick 0)
      {set [working_track] "VENUE"}
      {set $should_autogen 1}
      {foreach $lightingProp
         (lightpreset
            lightpreset_keyframe
            spot_bass
            spot_guitar
            spot_drums
            spot_keyboard
            spot_vocal
         )
         {$this remove_keys $lightingProp}
      }
   }
   {print "MIDI Compiler: Autogenerating lighting changes...\n"}
   {print "music_start: " $music_start " music_end: " $music_end "\n"}
   {if_else {&& {< $music_start $music_end} {> $music_end 0}}
      {do
         ($tick 0)
         ($found_first_downbeat FALSE)
         ($lighting_name "N/A")
         ($last_used_lighting_name $lighting_name)
         {set $first_change_tick 0}
         {if_else {!= $coda -1}
            {set $final_change_tick $coda}
            {set $final_change_tick $music_end}
         }
         {set [working_track] "EVENTS"}
         {set $lighting_cues {array 0}}
         {$this foreach_textevent $text
            $tick
            {if
               {&&
                  {'||' {has_substr $text "[section "} {has_substr $text "[prc_"}}
                  {> $tick $first_change_tick}
                  {< $tick $final_change_tick}
               }
               {push_back $lighting_cues {array ($text $tick)}}
            }
         }
         {set $lastCueTick -1}
         {$this foreach_textevent $text
            $tick
            {if
               {&&
                  {'||' {has_substr $text "crowd_intense"} {has_substr $text "crowd_mellow"}}
                  {> $tick $first_change_tick}
                  {< $tick $final_change_tick}
               }
               {set $okToAdd TRUE}
               {foreach_int $i 0 {size $lighting_cues}
                  {if {<= {- $tick {elem {elem $lighting_cues $i} 1}} 960}
                     {set $okToAdd FALSE}
                  }
               }
               {if $okToAdd
                  {print "adding non-practice section cue " $text " at " $tick "\n"}
                  {push_back $lighting_cues {array ($text $tick)}}
               }
            }
         }
         {print "   found " {size $lighting_cues} " lighting cues\n"}
         {set [working_track] "VENUE"}
         {$this add_symbol_key lightpreset verse 0}
         {if {!= $coda -1}
            {$this add_symbol_key lightpreset bre $coda}
         }
         {$this add_symbol_key
            lightpreset
            {random_elem (blackout_slow silhouettes)}
            {int {'+' $music_end {/ {- $end $music_end} 2}}}
         }
         {set $lightingSelections {array 0}}
         {push_back $lightingSelections {array ("FooBar" TRUE)}}
         {foreach_int $i 1 {size $lighting_prob_by_section}
            {set $newSelection {SelectRandomLighting $i}}
            {while
               {&&
                  {find_elem $lightingSelections $newSelection $foundIdx}
                  {! {== $foundIdx 0}}
               }
               {set $newSelection {SelectRandomLighting $i}}
            }
            {push_back $lightingSelections $newSelection}
            {print
               "preselecting lighting "
               {elem {elem $lightingSelections $i} 0}
               " for section "
               {elem {elem $lighting_prob_by_section $i} 0}
               "\n"
            }
         }
         {set $lighting_name ""}
         {set $last_used_lighting_name ""}
         {foreach_int $i 0 {size $lighting_cues}
            {set $tick {int {elem {elem $lighting_cues $i} 1}}}
            {set $section_name {elem {elem $lighting_cues $i} 0}}
            {if_else {== $i {- {size $lighting_cues} 1}}
               {set $lighting_end_tick {int $final_change_tick}}
               {set $lighting_end_tick {int {elem {elem $lighting_cues {'+' $i 1}} 1}}}
            }
            {set $lightingCurveIdx 0}
            {foreach_int $i 1 {size $lighting_prob_by_section}
               {if {has_substr $section_name {elem {elem $lighting_prob_by_section $i} 0}}
                  {set $lightingCurveIdx $i}
               }
            }
            {if
               {'||'
                  {has_substr $section_name "prechorus"}
                  {has_substr $section_name "preverse"}
               }
               {set $lightingCurveIdx 0}
            }
            {print
               "section "
               $section_name
               " picked prop curve "
               $lightingCurveIdx
               " in category "
               {elem {elem $lighting_prob_by_section $lightingCurveIdx} 0}
               "\n"
            }
            {if_else {== $lightingCurveIdx 0}
               {do
                  {set $newSelection {SelectRandomLighting 0}}
                  {while
                     {&&
                        {find_elem $lightingSelections $newSelection $foundIdx}
                        {! {== $foundIdx 0}}
                     }
                     {set $newSelection {SelectRandomLighting 0}}
                  }
                  {set $lightingType $newSelection}
               }
               {set $lightingType {elem $lightingSelections $lightingCurveIdx}}
            }
            {set $lighting_name {elem $lightingType 0}}
            {set $lighting_uses_keyframes {elem $lightingType 1}}
            {print "picked preset " $lighting_name "\n"}
            {$this add_symbol_key lightpreset $lighting_name {- $tick 15}}
            {if $lighting_uses_keyframes
               {if_else
                  {'||'
                     {has_substr $section_name "solo"}
                     {has_substr $section_name "chorus"}
                     {has_substr $section_name "crowd_intense"}
                  }
                  {set $keyframe_rate {random_elem (1 2)}}
                  {if_else {has_substr $section_name "intro"}
                     {set $keyframe_rate 4}
                     {set $keyframe_rate {random_elem (2 4)}}
                  }
               }
               {while {< $tick $lighting_end_tick}
                  {$this add_symbol_key lightpreset_keyframe next $tick}
                  {'+=' $tick {'*' $keyframe_rate 480}}
               }
            }
         }
      }
      {do
         {notify
            "ERROR: music_start and music_end events not specified correctly.  Lighting autogen not performed correctly!\n"
         }
      }
   }
   {do
      ($part_spotlight_info
         (
            ("PART DRUMS" spot_drums)
            ("PART GUITAR" spot_guitar)
         )
      )
      ($spotlight_midievents {array 0})
      {foreach $info $part_spotlight_info
         {do
            ($pitch 0)
            ($tick 0)
            ($state 0)
            ($on_tick -1)
            {set [working_track] {elem $info 0}}
            {$this foreach_midievent kNote_G6
               kNote_G6
               $pitch
               $tick
               $state
               {if_else $state
                  {set $on_tick $tick}
                  {if {!= $on_tick -1}
                     {do
                        ($midievent {array 0})
                        {push_back $midievent {elem $info 1}}
                        {push_back $midievent $on_tick}
                        {push_back $midievent $tick}
                        {push_back $spotlight_midievents $midievent}
                        {set $on_tick -1}
                     }
                  }
               }
            }
         }
      }
      {set [working_track] "VENUE"}
      {foreach $midievent $spotlight_midievents
         {$this add_symbol_key {elem $midievent 0} on {elem $midievent 1}}
         {$this add_symbol_key {elem $midievent 0} off {elem $midievent 2}}
      }
      {foreach $spotProp (spot_bass spot_guitar spot_drums spot_keyboard spot_vocal)
         {$this add_symbol_key $spotProp off 0}
      }
   }
}