(parser
   (hopo_threshold 170)
   (drum_style_instruments (kAudioDrums))
   (vocal_style_instruments (kAudioVocals))
   (keyboard_range_shift_duration_ms 200)
   (track_mapping
      (GUITAR kAudioGuitar kTrackGuitar 'PART GUITAR')
      (BASS kAudioBass kTrackBass 'PART BASS')
      (DRUMS kAudioDrums kTrackDrum 'PART DRUMS')
      (VOCALS kAudioVocals kTrackVocals 'PART VOCALS')
      (SINGER kAudioVocals kTrackVocals 'PART SINGER')
      (HARM1 kAudioVocals kTrackVocals HARM1)
      (HARM2 kAudioVocals kTrackVocals HARM2)
      (HARM3 kAudioVocals kTrackVocals HARM3)
      (KEYS kAudioKeys kTrackKeys 'PART KEYS')
      (REAL_GUITAR kAudioGuitar kTrackRealGuitar 'PART REAL_GUITAR')
      (REAL_GUITAR_22 kAudioGuitar kTrackRealGuitar22Fret 'PART REAL_GUITAR_22')
      (REAL_BASS kAudioBass kTrackRealBass 'PART REAL_BASS')
      (REAL_BASS_22 kAudioBass kTrackRealBass22Fret 'PART REAL_BASS_22')
      (REAL_KEYS_E kAudioKeys kTrackRealKeys 'PART REAL_KEYS')
      (REAL_KEYS_M kAudioKeys kTrackRealKeys 'PART REAL_KEYS')
      (REAL_KEYS_H kAudioKeys kTrackRealKeys 'PART REAL_KEYS')
      (REAL_KEYS_X kAudioKeys kTrackRealKeys 'PART REAL_KEYS')
      (KEYS_ANIM_LH kAudioFake kTrackRealKeys 'PART KEYS_ANIM_LH')
      (KEYS_ANIM_RH kAudioFake kTrackRealKeys 'PART KEYS_ANIM_RH')
   )
)
(watcher
   (trill_interval_ms (0 0 160 160))
   (roll_interval_ms
      (drum
         (single_lane (0 0 165 165))
         (double_lane (0 0 225 225))
      )
      (guitar (0 0 165 165))
      (bass (0 0 165 165))
      (real_guitar (0 0 165 165))
      (real_guitar_22 (0 0 165 165))
      (real_bass (0 0 165 165))
      (real_bass_22 (0 0 165 165))
      (real_keys (0 0 165 165))
   )
)
(controllers
   (beatmatch_controller_mapping
      (guitar guitar)
      (ro_guitar_xbox guitar)
      (hx_guitar_ps3 guitar)
      (ro_guitar_ps3 guitar)
      (wii_guitar guitar)
      (wii_roguitar guitar)
      (real_guitar real_guitar)
      (keys keys)
      (joypad joypad)
      (drums joypad)
      (lefty_drums joypad)
      (hx_topway_xbox joypad)
      (hx_drums_xbox joypad)
      (hx_drums_xbox_rb2 joypad)
      (ro_drums_xbox joypad)
      (drums_ps3 joypad)
      (hx_drums_ps3 joypad)
      (ro_drums_ps3 joypad)
      (wii_remote joypad)
      (wii_classic joypad)
      (gamecube joypad)
      (wii_drums joypad)
      (wii_rodrums joypad)
      #ifdef HX_PC
      (midi_drums joypad)
      #endif
      (joypad_guitar joypad_guitar)
      (joypad_guitar_xbox joypad_guitar)
      (lefty_joypad_guitar joypad_guitar)
   )
)
(mercury_switch_filter
   (any_sign_filter
      (window 0.5)
      (num_frames 12)
      (threshold 0.93)
   )
)
#define TEXT_ECHO_MAPPING ((text {$this add_message $mp.data}))
#define MIDI_ECHO_MAPPING (
   (midi
      {if {&& {>= $mp.val 0} {<= $mp.val 127}}
         {$this add_message $mp.val}
      }
   )
)
(midi_parsers
   (init
      {new MidiParser VENUE (track_name VENUE) TEXT_ECHO_MAPPING}
      {new MidiParser 'PART GUITAR' (track_name 'PART GUITAR') TEXT_ECHO_MAPPING}
      {new MidiParser 'PART BASS' (track_name 'PART BASS') TEXT_ECHO_MAPPING}
      {new MidiParser 'PART DRUMS' (track_name 'PART DRUMS') TEXT_ECHO_MAPPING}
      {new MidiParser 'PART VOCALS' (track_name 'PART VOCALS') TEXT_ECHO_MAPPING}
      {new MidiParser events_parser (track_name EVENTS) TEXT_ECHO_MAPPING}
      {new MidiParser
         'midi PART GUITAR'
         (track_name 'PART GUITAR')
         MIDI_ECHO_MAPPING
      }
      {new MidiParser
         'midi PART BASS'
         (track_name 'PART BASS')
         MIDI_ECHO_MAPPING
      }
      {new MidiParser
         'midi PART DRUMS'
         (track_name 'PART DRUMS')
         MIDI_ECHO_MAPPING
      }
      {new MidiParser
         'midi PART VOCALS'
         (track_name 'PART VOCALS')
         MIDI_ECHO_MAPPING
      }
      {new MidiParser 'midi VENUE' (track_name VENUE) MIDI_ECHO_MAPPING}
      {new MidiParser 'midi EVENTS' (track_name EVENTS) MIDI_ECHO_MAPPING}
      {new MidiParser 'midi BEAT' (track_name BEAT) MIDI_ECHO_MAPPING}
   )
)
(audio
   (mute_volume -16.0)
   (mute_volume_vocals -12.0)
   #include drum_mixes.dta
)