#include macros.dta
(rnd
   (overlays
      (camtest
         (lines 1)
         (showing FALSE)
      )
      (camera
         (lines 3)
         (showing FALSE)
         (color 0 0 0 0.5)
      )
   )
)
(objects
   #include objects.dta
)
(quick_cheats
   #include cheats.dta
)
(systest
   (char_test
      (meshes "char/og/guitars/")
      (chars
         "char/crowd/og/crowd_female01.milo"
         "char/crowd/og/crowd_female02.milo"
         "char/crowd/og/crowd_female03.milo"
         "char/crowd/og/crowd_female04.milo"
         "char/crowd/og/crowd_male01.milo"
         "char/crowd/og/crowd_male02.milo"
         "char/crowd/og/crowd_male03.milo"
         "char/crowd/og/crowd_male04.milo"
         "char/female_singer/og/female_singer.milo"
         "char/metal_singer/og/metal_singer.milo"
         "char/metal_bass/og/metal_bass.milo"
         "char/metal_keyboard/og/metal_keyboard.milo"
         "char/metal_drummer/og/metal_drummer.milo"
         "char/alterna1/og/alterna1.milo"
         "char/glam1/og/glam1.milo"
         "char/goth2/og/goth2.milo"
         "char/grim/og/grim.milo"
         "char/metal1/og/metal1.milo"
         "char/punk1/og/punk1.milo"
      )
      (songfile ironman)
   )
   (venue_test
      (venues
         "world/arena/arena.milo"
         "world/arena/arena_mp.milo"
         "world/arena/arena_coop.milo"
         "world/battle/battle.milo"
         "world/battle/battle_mp.milo"
         "world/battle/battle_coop.milo"
         "world/fest/fest.milo"
         "world/fest/fest_mp.milo"
         "world/fest/fest_coop.milo"
         "world/small1/small1.milo"
         "world/small1/small1_mp.milo"
         "world/small1/small1_coop.milo"
         "world/small2/small2.milo"
         "world/small2/small2_mp.milo"
         "world/small2/small2_coop.milo"
         "world/theatre/theatre.milo"
         "world/theatre/theatre_mp.milo"
         "world/theatre/theatre_coop.milo"
      )
      (gs_overhead 3.0 3.8)
      (cpu_overhead 4.8 6.9)
      (vram_budget_blocks 9000)
      (extra_venue_columns Guitarist0 Guitarist1)
      (extra_shot_columns CameraDistance CameraFacing)
      (tracked_drawables guitarist0 guitarist1 bassist drummer singer keyboard)
      (replacements
         (guitarist0 "char/deathmetal1/og/deathmetal1.milo")
         (guitarist1 "char/goth2/og/goth2.milo")
      )
      (no_overhead
         LOSE
         WIN
         WIN_ENCORE
         WIN_GAME
         WIN_ENCORE_SONG
         INTRO
         INTRO_ENCORE
         INTRO_FAST
      )
      (init
         {func init_venue
            ($dir $is_multiplayer)
            {{$dir find guitarist0} hand_flames TRUE}
            {if {$dir exists guitarist1}
               {{$dir find guitarist1} hand_flames TRUE}
            }
            {if_else {== $is_multiplayer 1}
               {do
                  {print "multiplayer\n"}
                  {handle ($dir start)}
                  {handle ($dir intro_skip)}
               }
               {do
                  {print "singleplayer\n"}
                  {handle ($dir skip_encore_fx)}
                  {handle ($dir peak_on)}
               }
            }
         }
         {func get_walker
            ($dir)
            {$dir find guitarist0}
         }
         {func get_venue_column_value
            ($dir $column)
            {do
               ($output)
               {switch $column
                  (0
                     {if_else {$dir exists guitarist0}
                        {set $output {{$dir find guitarist0} get proxy_file}}
                        {set $output "(none)"}
                     }
                  )
                  (1
                     {if_else {$dir exists guitarist1}
                        {set $output {{$dir find guitarist1} get proxy_file}}
                        {set $output "(none)"}
                     }
                  )
               }
               $output
            }
         }
         {func get_shot_column_value
            ($shot $column)
            {do
               ($output)
               {switch $column
                  (0 {set $output {sprint {$shot get distance}}})
                  (1 {set $output {sprint {$shot get facing}}})
               }
               $output
            }
         }
         {func check_waypoint
            ($shot $waypoint)
            {do
               ($ok TRUE)
               {foreach $spot {$shot get_array bad_waypoints}
                  {if {== $spot $waypoint}
                     {set $ok FALSE}
                  }
               }
               $ok
            }
         }
      )
   )
)
#merge ../../../system/run/config/systest.dta