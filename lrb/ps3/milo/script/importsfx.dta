{func find_or_create
   ($file $dir)
   {do
      ($sampname {sprint {basename $file} ".wav"})
      ($samp)
      {if_else {$dir exists $sampname}
         {set $samp {$dir find $sampname}}
         {do
            {set $samp {new SynthSample}}
            {$samp set_name $sampname $dir}
            {$samp set file $file}
         }
      }
      $samp
   }
}
{milo dialog
   "Sfx import tool"
   (editor
      ('Mono Sfx'
         (indent
            (file
               file
               (wav_dlg TRUE)
               (ext "WAV files" wav)
               (help "mono WAV file to import")
               (post_sync {$this set_default_name_mono})
            )
            (name string (help "name of the Sfx object to create"))
            (import
               script
               (script
                  {if {exists milo}
                     {$this import_mono}
                  }
               )
            )
         )
      )
      ('Stereo Sfx'
         (indent
            (file_L
               file
               (wav_dlg TRUE)
               (ext "WAV files" wav)
               (help "WAV for left channel")
               (post_sync {$this set_default_name_stereo})
            )
            (file_R
               file
               (wav_dlg TRUE)
               (ext "WAV files" wav)
               (help "WAV for right channel")
               (post_sync {$this set_default_name_stereo})
            )
            (name_stereo string (help "name of the stereo Sfx object to create"))
            (import
               script
               (script
                  {if {exists milo}
                     {$this import_stereo}
                  }
               )
            )
         )
      )
      ('Batch Importer'
         (indent
            (files
               (array file (wav_dlg TRUE))
               (ext "WAV files" wav)
               (help "list of WAV files to import")
            )
            (open_files
               script
               (refresh)
               (script
                  {if {exists milo}
                     {do
                        ($files)
                        {if {milo wav_dialog (var $files) (multi_select TRUE)}
                           {set [files] $files}
                        }
                     }
                  }
               )
            )
            (top_sequence_type
               symbol
               (list (None RandomGroupSeq SerialGroupSeq ParallelGroupSeq))
               (help "type of top-level sequence to create (optional)")
            )
            (top_sequence_name
               string
               (help "name of top-level sequence to create (optional)")
            )
            (import
               script
               (script
                  {if {exists milo}
                     {$this import_batch}
                  }
               )
            )
         )
      )
   )
   (file "")
   (name "mono_sfx.cue")
   (set_default_name_mono
      {set [name] {next_name {sprint {basename [file]} ".cue"} {milo cur_dir}}}
   )
   (import_mono
      {do
         ($samp)
         ($dir {milo cur_dir})
         ($sfx {new Sfx})
         {set $samp {find_or_create [file] $dir}}
         {if {! {has_substr [name] "."}}
            {set [name] {sprint [name] ".cue"}}
         }
         {$sfx set_name [name] $dir}
         {$sfx add_map}
         {$sfx set (sfxmaps 0 sample) $samp}
      }
      {milo update_objects}
   )
   (file_L "")
   (file_R "")
   (name_stereo "stereo_sfx.cue")
   (enter
      {if_else {! {milo cur_dir}}
         {do
            {notify "Create a new file before running the import script."}
            -1
         }
         0
      }
   )
   (set_default_name_stereo
      {do
         ($name 0)
         ($left {basename [file_L]})
         ($right {basename [file_R]})
         {if {&& {! $name} {has_substr $left "_l"}}
            {search_replace $left "_l" "" $name}
         }
         {if {&& {! $name} {has_substr $right "_r"}}
            {search_replace $right "_r" "" $name}
         }
         {if {&& {! $name} {!= $left ""}}
            {set $name $left}
         }
         {if {&& {! $name} {!= $right ""}}
            {set $name $right}
         }
         {if $name
            {set [name_stereo] {next_name {sprint $name ".cue"} {milo cur_dir}}}
         }
      }
   )
   (import_stereo
      {do
         ($samp_L)
         ($samp_R)
         ($dir {milo cur_dir})
         ($sfx {new Sfx})
         {set $samp_L {find_or_create [file_L] $dir}}
         {set $samp_R {find_or_create [file_R] $dir}}
         {if {! {has_substr [name_stereo] "."}}
            {set [name_stereo] {sprint [name_stereo] ".cue"}}
         }
         {$sfx set_name [name_stereo] $dir}
         {$sfx add_map}
         {$sfx add_map}
         {$sfx set (sfxmaps 0 sample) $samp_L}
         {$sfx set (sfxmaps 0 pan) -1}
         {$sfx set (sfxmaps 1 sample) $samp_R}
         {$sfx set (sfxmaps 1 pan) 1}
      }
      {milo update_objects}
   )
   (files ())
   (top_sequence_type None)
   (top_sequence_name "top_sequence.cue")
   (import_batch
      {do
         ($samp)
         ($sfx)
         ($sfxname)
         ($dir {milo cur_dir})
         ($topseq 0)
         {if {!= [top_sequence_type] None}
            {set $topseq {new [top_sequence_type]}}
            {$topseq set_name [top_sequence_name] $dir}
         }
         {foreach $file [files]
            {set $samp {find_or_create $file $dir}}
            {search_replace {$samp name} ".wav" ".cue" $sfxname}
            {set $sfx {new Sfx}}
            {$sfx set_name $sfxname $dir}
            {$sfx add_map}
            {$sfx set (sfxmaps 0 sample) $samp}
            {if $topseq
               {$topseq insert (children {$topseq size (children)}) $sfx}
            }
         }
      }
      {milo update_objects}
   )
}