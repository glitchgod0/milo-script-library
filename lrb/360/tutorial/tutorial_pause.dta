{new UIPanel
   tutorials_pause_panel
   (file "tutorial_pause_real.milo")
   (enter {$this set_focus tut_pause_resume.btn})
   (enable_next_button
      ($enable)
      {if_else $enable
         {tut_pause_next.btn set_state kComponentNormal}
         {tut_pause_next.btn set_state kComponentDisabled}
      }
   )
   (enable_prev_button
      ($enable)
      {if_else $enable
         {tut_pause_prev.btn set_state kComponentNormal}
         {tut_pause_prev.btn set_state kComponentDisabled}
      }
   )
   (enable_restart_button
      ($enable)
      {if_else $enable
         {tut_pause_restart_lesson.btn set_state kComponentNormal}
         {tut_pause_restart_lesson.btn set_state kComponentDisabled}
      }
   )
   (set_lesson_text
      {tut_pause_next.btn set_localized
         {localize {gamemode get next_lesson_text}}
      }
      {tut_pause_prev.btn set_localized
         {localize {gamemode get previous_lesson_text}}
      }
      {tut_pause_restart_lesson.btn set_localized
         {localize {gamemode get restart_lesson_text}}
      }
   )
   (BUTTON_DOWN_MSG kDataUnhandled)
}
{new BandScreen
   tutorial_confirm_quit_screen
   (panels pause_bg_panel tutorials_pause_panel dialog_panel)
   (focus dialog_panel)
   (helpbar ((confirm helpbar_confirm)))
   (enter
      {dialog_panel set_yesno {localize {cond (TRUE confirm_quit)}} no.btn}
      {$this set_up_buttons}
   )
   (exit)
   (set_up_buttons {dialog_panel set_focus {dialog_panel find no.btn}})
   (SELECT_MSG
      {switch $component
         (yes.btn {tutorials_pause_screen quit_tutorial})
         (no.btn {ui goto_screen tutorials_pause_screen})
      }
   )
}
{new BandScreen
   tutorials_pause_screen
   #ifdef HX_XBOX
   (panels pause_bg_panel tutorials_pause_panel)
   #else
   (panels pause_bg_panel tutorials_pause_panel)
   #endif
   (helpbar
      (
         (cancel tut_hb_returntolesson)
         (confirm helpbar_select)
      )
   )
   (focus tutorials_pause_panel)
   (allow_back FALSE)
   (animate_transition FALSE)
   (pre_enter
      {set [is_quitting] FALSE}
      {tutorials_state_panel pause}
   )
   (enter
      {set [is_quitting] FALSE}
      {set [is_done] FALSE}
      {tutorials_pause_panel set_lesson_text}
      {tutorials_pause_panel enable_next_button
         {tutorials_state_panel get can_inc_lesson}
      }
      {tutorials_pause_panel enable_prev_button
         {tutorials_state_panel get can_dec_lesson}
      }
      {tutorials_pause_panel enable_restart_button
         {tutorials_state_panel get can_restart_lesson}
      }
   )
   (exit
      {if {! [is_quitting]}
         {tutorials_state_panel unpause}
      }
   )
   (resume_tutorial {ui pop_screen})
   (restart_tutorial
      {set [is_quitting] TRUE}
      {tutorials_state_panel reset_tutorial}
      {synth play button_select}
      {ui reset_screen tutorials_loading_screen}
   )
   (quit_tutorial
      {set [is_done] TRUE}
      {tutorials_state_panel reset_tutorial}
      {gamemode set main_screen main_screen}
      {synth play button_select}
      {if_else {tour band}
         {ui reset_screen meta_loading_stage_screen_from_tutorials}
         {ui reset_screen meta_loading_training_screen_from_tutorials}
      }
   )
   (restart_lesson
      {tutorials_state_panel tutorial_inc 0}
      {synth play button_select}
      {ui pop_screen}
   )
   (next_lesson
      {tutorials_state_panel tutorial_inc 1}
      {synth play button_select}
      {ui pop_screen}
   )
   (prev_lesson
      {tutorials_state_panel tutorial_dec 1}
      {synth play button_select}
      {ui pop_screen}
   )
   (SELECT_MSG
      {if
         {&&
            {== $player_num {{gamemode get main_panel} get_tutorial_player}}
            {! [is_done]}
         }
         {switch $component
            (tut_pause_restart.btn
               {set [is_done] TRUE}
               {$this restart_tutorial}
            )
            (tut_pause_quit.btn
               {set [is_quitting] TRUE}
               {ui goto_screen tutorial_confirm_quit_screen}
            )
         }
      }
   )
   (FOCUS_MSG DO_FOCUSCLICK kDataUnhandled)
   (SELECT_DONE_MSG
      {if
         {&&
            {== $player_num {{gamemode get main_panel} get_tutorial_player}}
            {! [is_done]}
            {! {band_ui has_event}}
            {! {ui in_transition}}
         }
         {switch $component
            (tut_pause_restart_lesson.btn
               {set [is_done] TRUE}
               {$this restart_lesson}
            )
            (tut_pause_resume.btn
               {set [is_done] TRUE}
               {$this resume_tutorial}
            )
            (tut_pause_next.btn
               {set [is_done] TRUE}
               {$this next_lesson}
            )
            (tut_pause_prev.btn
               {set [is_done] TRUE}
               {$this prev_lesson}
            )
         }
      }
   )
   (BUTTON_DOWN_MSG
      {if_else
         {&&
            {== $player_num {{gamemode get main_panel} get_tutorial_player}}
            {! [is_done]}
         }
         {do
            {if {'||' {== $action kAction_Start} {== $action kAction_Cancel}}
               {do
                  {set [is_done] TRUE}
                  {$this resume_tutorial}
               }
            }
            kDataUnhandled
         }
         TRUE
      }
      kDataUnhandled
   )
   (BUTTON_UP_MSG
      {if_else
         {&&
            {== $player_num {{gamemode get main_panel} get_tutorial_player}}
            {! [is_done]}
         }
         {do
            kDataUnhandled
         }
         TRUE
      }
   )
   (is_quitting FALSE)
   (is_done FALSE)
}