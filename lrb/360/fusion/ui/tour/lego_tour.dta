#include hints.dta
#define kKeyboardModeName (0)
#define kKeyboardModeMotto (1)
{new BandProfilePanel
   tour_profile_panel
   (file "tour_profile.milo")
   (keyboard_mode kKeyboardModeName)
   (unselect_lineup_list FALSE)
   (finish_load {enter.grp set_frame 0})
   (setup_help_text
      {do
         ($band {tour band})
         ($text
            {cond
               ({$band is_challenge_complete challenge_asteroid} rpc_complete)
               ({$band is_gig_attained gig_ws_special_03} key_objective_16)
               ({$band is_vehicle_purchased veh_private_jet} key_objective_15)
               ({$band is_challenge_complete challenge_icebreaker} key_objective_14)
               ({$band is_vehicle_purchased veh_submarine} key_objective_13)
               ({$band is_challenge_complete challenge_dinochase} key_objective_12)
               ({$band is_vehicle_purchased veh_hovercraft} key_objective_11)
               ({$band is_challenge_complete challenge_farmrain} key_objective_10)
               ({$band is_vehicle_purchased veh_tourbus} key_objective_09)
               ({$band is_challenge_complete challenge_ovalrace} key_objective_08)
               ({$band is_vehicle_purchased veh_helicopter} key_objective_07)
               ({&&
                     {>=
                        {$band get_stars_at_venue ven_lego_city_rooftop}
                        6}
                     {>
                        {-
                           {$band total_gigs}
                           {$band get_gigs_at_unlock record_producer gNullStr}}
                        0}}
                  key_objective_07a
               )
               ({$band is_challenge_complete challenge_rocktopus} key_objective_06)
               ({$band is_vehicle_purchased veh_boat} key_objective_05)
               ({$band is_challenge_complete challenge_ghostbusters} key_objective_04)
               ({$band is_vehicle_purchased veh_minibus} key_objective_03)
               ({$band is_manager_hired} key_objective_02)
               key_objective_01
            }
         )
         {MessageBox.lbl set text_token $text}
      }
   )
   (enter
      {if
         {'||'
            {== {ui current_screen} garage_vehiclescreen}
            {== {ui current_screen} garage_gigscreen}
            {== {ui current_screen} garage_venuescreen}
         }
         {do
            {$this setup_help_text}
            {Message_In.trig trigger}
         }
      }
      {$this update_data}
      {select_roster.grp set_showing FALSE}
      {select_roster_standins.grp set_showing FALSE}
      {members_states.anim set_frame 0}
      {standin_states.anim set_frame 0}
   )
   (TRANSITION_COMPLETE_MSG
      {$this refresh_tab}
      {$this update_data}
      {$this refresh}
      {if [unselect_lineup_list]
         {set [unselect_lineup_list] FALSE}
         {lineup.lst reset}
         {members_states.anim set_frame 1}
         {lineup.lst set highlight_showing kListNever}
         {lineup.lst set arrow_showing kListNever}
      }
   )
   (refresh_text
      {$this setup_help_text}
      {Message_In.trig trigger}
   )
   (refresh {$this update_data})
   (update_data
      {do
         ($band {$this get_band_data})
         {$this update_header}
         {$this refresh_roster_data}
         {fans.lbl set_localized {sprintf {fmt_score {$band fans}}}}
         {career_score.lbl set_localized {sprintf {fmt_score {$band studs}}}}
         {do
            ($stars {$band stars})
            {if_else {== 0 $stars}
               {rating_stars.lbl set text_token "0"}
               {rating_stars.lbl set text_token {fmt_score $stars}}
            }
         }
      }
   )
   (update_header)
   (refresh_roster_data {$this set_roster_helpbar {$this focus_name}})
   (SIGNIN_CHANGED_MSG {$this refresh_roster_data})
   (exit
      {if
         {'||'
            {== {ui current_screen} garage_vehiclescreen}
            {== {ui current_screen} garage_gigscreen}
            {== {ui current_screen} garage_venuescreen}
         }
         {do
            {Message_Out.trig trigger}
         }
      }
   )
   (is_roster_selectable
      {&&
         {tour_profile_panel displaying_tour_band}
         {{tour_profile_panel get_lineup_provider} num_data}
      }
   )
   (tabs
      (summary
         (helpbar ((cancel helpbar_back)))
         (on_focus {helpbar confirm helpbar_select})
         (allow_select 1)
         (on_select
            {$this set_focus logo.btn}
            {$this on_enter_tab}
         )
      )
      (roster
         (helpbar
            {if_else {tour_profile_panel is_roster_selectable}
               (
                  (cancel helpbar_back)
                  (confirm helpbar_select)
               )
               ((cancel helpbar_back))
            }
         )
         (allow_select {tour_profile_panel is_roster_selectable})
         (on_select
            {$this set_focus lineup.lst}
            {$this on_enter_tab}
         )
      )
      (stats
         (helpbar ((cancel helpbar_back)))
         (allow_select FALSE)
         (on_focus
            {$this set last_battle_id -1}
            {$this set first_showing_battle_offset 0}
         )
      )
   )
   (on_enter_tab {line_fade_top.mnm animate (range 0 1)})
   (on_exit_tab
      {line_fade_top.mnm animate (range 1 0)}
      {synth play button_back}
   )
   (SELECT_MSG
      {switch $component
         (change_name.btn
            {$this set keyboard_mode kKeyboardModeName}
            {virtual_keyboard show_keyboard
               $player_num
               {get_band_name_length}
               {localize create_band_vk_title}
               {localize create_band_vk_desc}
               {{$this get_band_data} band_name}
               $this
            }
         )
         (logo.btn
            {patch_panel set patch_player $player}
            {patch_panel set patch {{$this get_band_data} edit_logo_patch}}
            {patch_panel set exit_screen tour_profile_screen}
            {patch_panel set
               bg_color
               {pack_color 1 1 1}
            }
            {patch_panel set set general}
            {if_else {patch_panel get help_shown}
               {ui goto_screen bandlogo_patch_screen}
               {ui goto_screen bandlogo_help_screen}
            }
         )
         (quote.btn
            {$this set keyboard_mode kKeyboardModeMotto}
            {virtual_keyboard show_keyboard
               $player_num
               {get_motto_length}
               {localize band_profile_vk_motto_title}
               {localize band_profile_vk_motto_desc}
               {{$this get_band_data} get_motto}
               $this
            }
         )
         (battles.lst
            {$this set
               last_battle_id
               {{$this get_battle_history_provider} get_battle_id
                  {battles.lst selected_pos}
               }
            }
            {$this set
               first_showing_battle_offset
               {- {battles.lst first_showing} {battles.lst selected_pos}}
            }
            {botb_details_panel set_battle_data
               {$this get last_battle_id}
               {$this get_band_data}
            }
            {ui goto_screen botb_details_screen}
         )
      }
   )
   (can_show_gamercard
      ($focus_component)
      #ifdef HX_XBOX
      {'||'
         {== {$this current_tab} summary}
         {&&
            {== $focus_component lineup.lst}
            {'||'
               {! {lineup.lst get select_to_scroll}}
               {lineup.lst is_scroll_selected}
            }
            {{$this get_lineup_provider} num_data}
            {! {{$this get_lineup_provider} is_absent {lineup.lst selected_pos}}}
         }
      }
      #else
      FALSE
      #endif
   )
   (allow_non_leader_option_button_down TRUE)
   (BUTTON_DOWN_MSG
      {switch $action
         (kAction_Option
            {if_else {$this can_show_gamercard {$this focus_name}}
               {do
                  ($result
                     {if_else {== {$this current_tab} summary}
                        {$this show_owner_gamercard $player_num}
                        {{$this get_lineup_provider} show_gamercard
                           {lineup.lst selected_pos}
                           $player_num
                        }
                     }
                  )
                  {switch $result
                     (kGamercardSuccessful)
                     (kGamercardPrivilegeError
                        {ui push_screen tour_band_display_gamercard_privilege_screen}
                     )
                     {ui push_screen tour_band_display_gamercard_failed_screen}
                  }
               }
               kDataUnhandled
            }
         )
         (kAction_Confirm
            {switch {$this focus_name}
               (lineup.lst
                  {if_else {lineup.lst is_scroll_selected}
                     {do
                        {synth play button_select}
                        {if_else {{$this get_lineup_provider} is_band_member {lineup.lst selected_pos}}
                           {do
                              {tour_lineup_promote_demote_confirm_screen set
                                 member_pos
                                 {lineup.lst selected_pos}
                              }
                              {$this set_toggle_candidate {lineup.lst selected_pos}}
                              {ui push_screen tour_lineup_promote_demote_confirm_screen}
                           }
                           {if_else {$this can_toggle_member_status {lineup.lst selected_pos}}
                              {do
                                 {tour_lineup_promote_demote_confirm_screen set
                                    member_pos
                                    {lineup.lst selected_pos}
                                 }
                                 {$this set_toggle_candidate {lineup.lst selected_pos}}
                                 {ui push_screen tour_lineup_promote_demote_confirm_screen}
                              }
                              {ui push_screen tour_lineup_band_full_screen}
                           }
                        }
                     }
                     {if_else
                        {&&
                           {! {lineup.lst is_scroll_selected}}
                           {! {{$this get_lineup_provider} num_data}}
                        }
                        {synth play button_error}
                        kDataUnhandled
                     }
                  }
               )
               (standin.lst
                  {if_else {standin.lst is_scroll_selected}
                     {do
                        ($provider {$this get_standin_provider})
                        {synth play button_select}
                        {tour_standin_panel set
                           track
                           {$provider track_type {standin.lst selected_pos}}
                        }
                        {tour_standin_panel set band {$this get_band_data}}
                        {ui push_screen tour_standin_screen}
                     }
                     kDataUnhandled
                  }
               )
               (battles.lst
                  {if_else {$this displaying_tour_band}
                     kDataUnhandled
                     TRUE
                  }
               )
               kDataUnhandled
            }
         )
         kDataUnhandled
      }
   )
   (FOCUS_MSG
      {$this set_roster_helpbar $new_focus}
      {select_roster.grp set_showing
         {&& {== $new_focus lineup.lst} {lineup.lst get select_to_scroll}}
      }
      {members_states.anim set_frame
         {if_else {== $new_focus lineup.lst}
            {if_else {lineup.lst get select_to_scroll}
               1
               2
            }
            0
         }
      }
      {select_roster_standins.grp set_showing {== $new_focus standin.lst}}
      {standin_states.anim set_frame
         {if_else {== $new_focus standin.lst}
            1
            0
         }
      }
      {logo_states.anim set_frame
         {if_else {== $new_focus logo.btn}
            1
            0
         }
      }
      {quote_states.anim set_frame
         {if_else {== $new_focus quote.btn}
            1
            0
         }
      }
      {changename_states.anim set_frame
         {if_else {== $new_focus change_name.btn}
            1
            0
         }
      }
   )
   (SCROLL_SELECT_MSG
      {$this set_roster_helpbar $component}
      {do
         ($showing
            {if_else $selected
               kListAlways
               kListNever
            }
         )
         {switch $component
            (lineup.lst
               {select_roster.grp set_showing {! $selected}}
               {members_states.anim set_frame
                  {if_else $selected
                     2
                     1
                  }
               }
               {lineup.lst set highlight_showing $showing}
               {lineup.lst set arrow_showing $showing}
            )
            (standin.lst
               {select_roster_standins.grp set_showing {! $selected}}
               {standin_states.anim set_frame
                  {if_else $selected
                     2
                     1
                  }
               }
               {standin.lst set highlight_showing $showing}
               {standin.lst set arrow_showing $showing}
            )
         }
      }
   )
   (SCROLL_MSG {$this set_roster_helpbar $component})
   (set_roster_helpbar
      ($component)
      {if {&& {ui current_screen} {== {{ui current_screen} focus_panel} $this}}
         {switch $component
            (lineup.lst
               {helpbar set_config ((cancel helpbar_back))}
               {if_else
                  {'||'
                     {lineup.lst is_scroll_selected}
                     {! {lineup.lst get select_to_scroll}}
                  }
                  {helpbar confirm helpbar_promote_demote}
                  {if {{$this get_lineup_provider} num_data}
                     {helpbar confirm helpbar_edit_roster}
                  }
               }
            )
            (standin.lst
               {helpbar set_config
                  {if_else {standin.lst is_scroll_selected}
                     (
                        (cancel helpbar_back)
                        (confirm helpbar_choose_standin)
                     )
                     (
                        (cancel helpbar_back)
                        (confirm helpbar_edit_standins)
                     )
                  }
               }
            )
         }
         {if_else {$this can_show_gamercard $component}
            {helpbar option helpbar_show_gamercard}
            {helpbar option}
         }
      }
   )
   (VIRTUAL_KEYBOARD_RESULT_MSG
      {if {&& $ok $this {ui focus_panel} {== {ui focus_panel} $this}}
         {switch {$this get keyboard_mode}
            (kKeyboardModeName
               {if {!= $text ""}
                  {if_else {! {{{$this get_band_data} get_owner} is_band_name_unique $text}}
                     {ui push_screen tour_band_create_name_not_unique_screen}
                     {do
                        {if_else {! {ui is_valid_name $text}}
                           {ui push_screen tour_band_create_illegal_name_screen}
                           {do
                              {$this set_band_name $text}
                              {band_name.btn set_localized $text}
                           }
                        }
                     }
                  }
               }
            )
            (kKeyboardModeMotto
               {$this set_motto $text}
               {quote.lbl set_localized $text}
            )
         }
      }
   )
   (ROCK_CENTRAL_OP_COMPLETE_MSG
      {switch {$this get keyboard_mode}
         (kKeyboardModeName
            {switch $arg1
               (RB_RETCODE_BAND_NAME_PROFANE
                  {ui push_screen tour_band_rename_profane_screen}
               )
               (RB_RETCODE_BAND_NAME_DUP {ui push_screen tour_band_rename_dup_screen})
               (RB_RETCODE_BAND_NAME_IP {ui push_screen tour_band_rename_ip_screen})
            }
         )
         (kKeyboardModeMotto
            {switch $arg1
               (RB_RETCODE_BAND_MOTTO_PROFANE
                  {ui push_screen tour_band_motto_profane_screen}
               )
               (RB_RETCODE_BAND_MOTTO_IP {ui push_screen tour_band_motto_ip_screen})
            }
         )
      }
   )
}
#define TOUR_PROFILE_SCREEN_HANDLERS (
   (back
      {cond
         ({== {tour mode} kMetaTour_Nil} tour_band_sel_screen)
         ({== {tour band} {tour_profile_panel get_band_data}} hub_screen)
         (TRUE {{ui current_screen} get botb_screen})
      }
   )
   (enter
      {with tour_profile_panel
         {tour_profile_panel update_tab_focus}
         {if_else {== {tour band} {tour_profile_panel get_band_data}}
            {extend.trg trigger}
            {enter.grp set_frame {enter.grp end_frame}}
         }
      }
   )
   (exit
      {if {== {tour band} {tour_profile_panel get_band_data}}
         {{tour_profile_panel find retract.trg} trigger}
         {helpbar set_config ()}
      }
   )
   (confirm
      {patch_panel cache_patch}
      {{tour_profile_panel get_band_data} set_dirty
         TRUE
         {'|' kTourDirtySave kTourDirtyUpload}
      }
      {{tour_profile_panel get_band_data} set_sync_dirty kTourSyncLogoDirty}
      {if
         {&&
            {tour_profile_panel displaying_tour_band}
            {{tour_profile_panel get_band_data} has_logo_patch}
         }
         {game foreach_local_user $user
            {if {$user can_get_achievements}
               {achievements submit {$user get_user_num} ach_explore_logo}
            }
         }
      }
      {ui goto_screen tour_profile_screen}
   )
   (patch_saved
      ($user)
      {if
         {&&
            {! {tour_profile_panel displaying_tour_band}}
            {{tour_profile_panel get_band_data} has_logo_patch}
            {$user can_get_achievements}
         }
         {achievements submit {$user get_user_num} ach_explore_logo}
      }
   )
)
{new BandScreen
   tour_profile_screen
   (panels meta mixeroffice_panel tour_profile_panel tourworld_lower3rd_panel)
   (focus tour_profile_panel)
   (botb_screen botb_details_screen)
   TOUR_PROFILE_SCREEN_HANDLERS
}
{new BandScreen
   tour_profile_world_screen
   (panels meta mixer_panel tour_profile_panel)
   (focus tour_profile_panel)
   (botb_screen botb_world_details_screen)
   TOUR_PROFILE_SCREEN_HANDLERS
}
{new CharLoadingPanel
   tour_hub_panel
   (file "tour_hub.milo")
   (reset TRUE)
   (enter
      {if [reset]
         {$this set_focus gigguide.btn}
      }
      {set [reset] FALSE}
      {if {== {session_mgr get_leader_num} -1}
         {$this disable gigguide.btn}
         {$this disable bandprofile.btn}
         {$this disable setchallenges.btn}
         {$this set_focus rokkshoppe.btn}
      }
      {$this refresh}
      {gamecfg set_joining_allowed TRUE}
      {gamecfg set coop_intro_category INTRO}
      {band_ui trigger_disband_if_necessary FALSE}
   )
   (exit {band_ui reset_disband})
   (TRANSITION_COMPLETE_MSG
      {input_mgr set_limit kLimitSession}
      {input_mgr set_user ''}
      {if {&& {! {ui in_transition}} {== {ui current_screen} hub_screen}}
         {autosave}
      }
   )
   (poll
      {if {&& {== {ui current_screen} hub_screen} {! {ui in_transition}}}
         {botb_challenge_loader check_load}
      }
   )
   (refresh
      {if_else {== {{tour band} world_fame} 0}
         {gigguide.btn set text_token tour_gigguide_start}
         {gigguide.btn set text_token tour_gigguide_continue}
      }
   )
   (SELECT_MSG
      {switch $component
         (gigguide.btn {$this enter_tour kNetUI_ReadyWorldTour})
         (rokkshoppe.btn
            {shop_panel set reset_on_enter TRUE}
            {fx fade_out}
            {input_mgr set_user {user_mgr get_band_user $player_num}}
            {ui goto_screen shop_screen}
         )
         (bandprofile.btn {ui goto_screen tour_profile_screen})
         (setchallenges.btn {$this enter_tour kNetUI_ReadySetChallenges})
         (botb.btn
            {cond
               ({==
                     {tour mode}
                     kMetaTour_BrowsingRemote}
                  {ui push_screen tour_band_no_leader_screen}
               )
               #ifdef HX_PS3
               ({!
                     {platform_mgr is_connected}}
                  {platform_mgr run_net_start_utility}
               )
               #endif
               ({&&
                     {is_leader_local}
                     {'||'
                        {==
                           {rock_central state}
                           kRCConnecting}
                        {&&
                           {server is_connected}
                           {!
                              {tour has_botb_challenges}}}}}
                  {ui push_screen tour_no_botb_connecting_screen}
               )
               ({'||'
                     {!
                        {is_leader_local}}
                     {&&
                        {tour has_botb_challenges}
                        {server is_connected}}}
                  {$this enter_tour kNetUI_ReadyBotb}
               )
               (TRUE {ui push_screen tour_no_botb_screen})
            }
         )
      }
   )
   (enter_tour
      ($ui_state)
      {if_else {== {tour mode} kMetaTour_BrowsingRemote}
         {ui push_screen tour_band_no_leader_screen}
         {if_else {== $ui_state kNetUI_ReadyBotb}
            {ui goto_screen botb_news_feed_screen}
            {do
               {tour_waiting_screen set tour_mode_ui_state $ui_state}
            }
         }
      }
   )
}
{new BandScreen
   tour_band_name_error_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter {dialog_panel set_ok {localize shell_no_band_name_error}})
   (SELECT_MSG {ui pop_screen})
}
{new BandScreen
   tour_band_create_name_not_unique_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter {dialog_panel set_ok {localize tour_band_name_not_unique}})
   (SELECT_MSG {ui pop_screen})
}
{new BandScreen
   tour_band_create_illegal_name_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter {dialog_panel set_ok {localize illegal_name}})
   (SELECT_MSG {ui pop_screen})
}
{new BandCreatePanel
   tour_band_create_panel
   (file tour_name_band.milo)
   (focus Randomise.btn)
   (reset_focus TRUE)
   (profanity_check_needed TRUE)
   (enter
      {$this update_band}
      {hub_menu set focus_on_enter "BandButton_02Garage.btn"}
   )
   (exit)
   (refresh {$this update_band})
   (update_band
      {cond
         ({==
               {{tour band}
                  band_name}
               ''}
            {name.lbl set text_token ""}
         )
         {name.lbl set_localized {{tour band} band_name}}
      }
   )
   (SELECT_MSG
      {switch $component
         (name.btn
            #ifndef HX_OG
            {virtual_keyboard show_keyboard
               $player_num
               {get_band_name_length}
               {localize create_band_vk_title}
               {localize create_band_vk_desc}
               {if_else {== {{tour band} band_name} ''}
                  {$this random_band_name}
                  {{tour band} band_name}
               }
               $this
            }
            #else
            {ui push_screen band_naming_creator_screen}
            #endif
         )
         (Randomise.btn
            {{tour band} set_band_name {$this random_band_name}}
            {$this update_band}
            {$this set profanity_check_needed FALSE}
         )
         (accept.btn
            {cond
               ({==
                     {{tour band}
                        band_name}
                     ""}
                  {ui push_screen tour_band_name_error_screen}
               )
               ({!
                     {{{tour band}
                           get_owner}
                        is_band_name_unique
                        {{tour band}
                           band_name}}}
                  {ui push_screen tour_band_create_name_not_unique_screen}
               )
               ({&&
                     [profanity_check_needed]
                     {!
                        {ui
                           is_valid_name
                           {{tour band}
                              band_name}}}}
                  {ui push_screen tour_band_create_illegal_name_screen}
               )
               (TRUE
                  {{tour band} init}
                  {tour give_new_band_to_user}
                  {tour_hub_panel set reset TRUE}
                  {cutscene_branch_panel setup auditions loading_hub_screen_nometa 0 FALSE}
                  {autosave_push cutscene_branch_screen}
               )
            }
         )
         (cancel.btn {ui goto_screen {gamemode get matchmaking_screen}})
      }
   )
   (BUTTON_DOWN_MSG
      {switch $action
         (kAction_Cancel {synth play button_back})
         (kAction_Confirm {synth play button_select})
      }
      kDataUnhandled
   )
   (FOCUS_MSG DO_FOCUSCLICK kDataUnhandled)
   #ifndef HX_OG
   (VIRTUAL_KEYBOARD_RESULT_MSG
      {if
         {&&
            $ok
            $this
            {ui focus_panel}
            {== {ui focus_panel} $this}
            {!= $text ""}
            {!= $text {{tour band} band_name}}
         }
         {{tour band} set_band_name $text}
         {$this update_band}
         {$this set profanity_check_needed TRUE}
      }
   )
   #endif
   (ROCK_CENTRAL_OP_COMPLETE_MSG
      {if
         {&&
            {! {ui in_transition}}
            {== {ui current_screen} tour_band_create_screen}
         }
         {switch $arg1
            (RB_RETCODE_BAND_NAME_PROFANE
               {ui push_screen tour_band_name_profane_screen}
            )
            (RB_RETCODE_BAND_NAME_DUP {ui push_screen tour_band_name_dup_screen})
            (RB_RETCODE_BAND_NAME_IP {ui push_screen tour_band_name_ip_screen})
            {tour_hub_panel set reset TRUE}
            {ui goto_screen hub_screen}
         }
      }
   )
}
{new BandScreen
   tour_band_create_screen
   (panels
      meta
      practice_space_panel
      tour_band_create_panel
      tourworld_lower3rd_panel
   )
   (back {gamemode get matchmaking_screen})
   (focus tour_band_create_panel)
   (helpbar
      (
         (cancel helpbar_back)
         (confirm helpbar_select)
      )
   )
   (enter {practice_space_panel select_cam "coop_enter"})
}
{new BandScreen
   tour_band_name_profane_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter
      {dialog_panel set_ok {localize tour_profile_create_band_name_profane}}
   )
   (SELECT_MSG
      {tour_hub_panel set reset TRUE}
      {ui pop_screen hub_screen}
   )
}
{new BandScreen
   tour_band_name_dup_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter {dialog_panel set_ok {localize tour_profile_create_band_name_dup}})
   (SELECT_MSG
      {tour_hub_panel set reset TRUE}
      {ui pop_screen hub_screen}
   )
}
{new BandScreen
   tour_band_name_ip_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter {dialog_panel set_ok {localize tour_profile_create_band_name_ip}})
   (SELECT_MSG
      {tour_hub_panel set reset TRUE}
      {ui pop_screen hub_screen}
   )
}
{new BandScreen
   tour_band_rename_profane_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter
      {dialog_panel set_ok {localize tour_profile_rename_band_name_profane}}
   )
   (SELECT_MSG {ui pop_screen})
}
{new BandScreen
   tour_band_rename_dup_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter {dialog_panel set_ok {localize tour_profile_rename_band_name_dup}})
   (SELECT_MSG {ui pop_screen})
}
{new BandScreen
   tour_band_rename_ip_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter {dialog_panel set_ok {localize tour_profile_rename_band_name_ip}})
   (SELECT_MSG {ui pop_screen})
}
#ifdef HX_OG
{new BandCreatePanel
   band_naming_creator_panel
   (file "../../../ui/naming_dialog_band.milo")
   (focus name.lbl)
   (name_label name.lbl)
   (name_active TRUE)
   (back_button_exits TRUE)
   NAMING_PANEL_HANDLERS
   (enter
      {shit2.tnm set_frame 0}
      {set [for_band] TRUE}
      {$this init_name}
   )
   (accept_name
      {$this stop_naming}
      {if {!= {$this get_name} {{tour band} band_name}}
         {tour_band_create_panel set profanity_check_needed TRUE}
      }
      {{tour band} set_band_name {$this get_name}}
      {tour_band_create_panel update_band}
      {ui pop_screen}
   )
   (cancel_name {ui pop_screen})
   (on_exit)
}
{new BandScreen
   band_naming_creator_screen
   (panels band_naming_creator_panel)
   (focus band_naming_creator_panel)
}
#endif