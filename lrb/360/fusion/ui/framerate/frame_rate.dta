{func base_venue
   ($venue)
   {cond
      ({has_substr $venue arena} arena)
      ({has_substr $venue big_club} big_club)
      ({has_substr $venue theater} theater)
      ({has_substr $venue small_club} small_club)
      ({has_substr $venue video} video)
      unknown
   }
}
{new UIPanel
   frame_rate_panel
   (file "frame_rate.milo")
   (focus venue.lst)
   (load {content_mgr start_refresh})
   (is_loaded {content_mgr refresh_done})
   (enter
      {venue.lst set_data
         (ven_crystal_mine
            ven_lego_city_central
            ven_bill_ditt_construction_co
            ven_blockton_manor
            ven_the_jolly_rocker
            ven_the_parrot_n_pegleg
            ven_lego_city_rooftop
            ven_the_cavern
            ven_stud_farm
            ven_sub_zero_research_facility
            ven_the_abyss
            ven_blockingham_castle
            ven_wembrick_stadium
            ven_the_moon
            ven_lego_city_zoo
            ven_volcanic_rock
            ven_wreck_n_roll_bowl
            ven_space_rock_festival
            ven_ufo
            challenge_wrecknroll
            challenge_castle
            challenge_dinochase
            challenge_icebreaker
            challenge_octopusattack
            challenge_ghostbusters
            challenge_farmrain
            challenge_ufobreakdown
            challenge_asteroid
            challenge_ovalrace
         )
      }
      {song.lst set_data (apunk kungfufighting thefinalcountdown)}
      {char.lst set_data (worst budget)}
      {measure.lst set_data (gs cpu)}
   )
   (get_char_prefix
      {cond
         ({==
               {char.lst selected_sym}
               budget}
            {if_else {== {measure.lst selected_sym} gs}
               "budget_gs_"
               "budget_cpu_"
            }
         )
         ({== {measure.lst selected_sym} gs} "expensive_gs_")
         (default "expensive_cpu_")
      }
   )
   (char_select
      ($modifier)
      {symbol {sprint {$this get_char_prefix} $modifier}}
   )
   (SELECT_MSG
      {gamemode set_mode frame_rate}
      #ifdef HX_XBOX
      {set $shots
         {read_file
            {sprint
               "fusion/ui/framerate/venue_cams/"
               {venue.lst selected_sym}
               "_"
               {measure.lst selected_sym}
               "_xbox.dta"
            }
         }
      }
      #else
         #ifdef HX_PS3
         {set $shots
            {read_file
               {sprint
                  "fusion/ui/framerate/venue_cams/"
                  {venue.lst selected_sym}
                  "_"
                  {measure.lst selected_sym}
                  "_ps3.dta"
               }
            }
         }
         #else
            #ifdef HX_WII
            {set $shots
               {read_file
                  {sprint
                     "fusion/ui/framerate/venue_cams/"
                     {venue.lst selected_sym}
                     "_"
                     {measure.lst selected_sym}
                     "_wii.dta"
                  }
               }
            }
            #else
            {set $shots
               {read_file
                  {sprint
                     "fusion/ui/framerate/venue_cams/"
                     {venue.lst selected_sym}
                     "_"
                     {measure.lst selected_sym}
                     "_xbox.dta"
                  }
               }
            }
            #endif
         #endif
      #endif
      {set $framerate_use_budget {== {char.lst selected_sym} budget}}
      {set $framerate_type {measure.lst selected_sym}}
      {set $venueMilo
         {switch {venue.lst selected_sym}
            (ven_crystal_mine "big_club/powerminer/powerminer.milo")
            (ven_lego_city_central "small_club/train_station/train_station.milo")
            (ven_bill_ditt_construction_co
               "big_club/ConstructionSite/construction_site01.milo"
            )
            (ven_blockton_manor "big_club/haunted/haunted.milo")
            (ven_the_jolly_rocker "big_club/pirateship/pirate_ship.milo")
            (ven_the_parrot_n_pegleg "big_club/piratetavern/piratetavern.milo")
            (ven_lego_city_rooftop "small_club/rooftop/roof_top 01.milo")
            (ven_the_cavern "big_club/BoneCave/BoneCave.milo")
            (ven_stud_farm "big_club/barnyard/barnyard.milo")
            (ven_sub_zero_research_facility "big_club/dome/dome.milo")
            (ven_the_abyss "big_club/abyssclub/abyss_club.milo")
            (ven_blockingham_castle "big_club/castlegardens/castlegardens.milo")
            (ven_wembrick_stadium "big_club/stadium/stadium.milo")
            (ven_the_moon "big_club/moon/moon.milo")
            (ven_lego_city_zoo "big_club/zoo/zoo.milo")
            (ven_volcanic_rock "big_club/volcano/volcano.milo")
            (ven_wreck_n_roll_bowl "big_club/carsmash/carsmash.milo")
            (ven_space_rock_festival "big_club/alienplanet/alienplanet.milo")
            (ven_ufo "big_club/alienship/alienship.milo")
            (challenge_wrecknroll "big_club/Demolition/demolition.milo")
            (challenge_castle "big_club/SkeletonBattle/skeleton_battle.milo")
            (challenge_dinochase "big_club/dinochase/dinochase_parent.milo")
            (challenge_icebreaker "big_club/icebreaker/icebreaker.milo")
            (challenge_rocktopus "big_club/octopusattack/octopusattack.milo")
            (challenge_ghostbusters "big_club/Ghostbusters/ghostbusters.milo")
            (challenge_farmrain "big_club/farmrain/farmrain.milo")
            (challenge_ufobreakdown "big_club/Stadium/ufobreakdown.milo")
            (challenge_asteroid "big_club/asteroid/destroy_asteroid_MASTER.milo")
            (challenge_ovalrace "big_club/carsmash/wreck n roll bowl/wrecknroll.milo")
         }
      }
      {do
         ($gender "male")
         {setup_game
            {song.lst selected_sym}
            $venueMilo
            (
               (guitar 3 {$this char_select $gender})
               (drum 3 {$this char_select $gender})
               (vocals 3 {$this char_select $gender})
               (bass 3 {$this char_select $gender})
            )
         }
         {set $framerate_gender $gender}
      }
      {{game get_player_config 0} set autoplay TRUE}
      {{game get_player_config 1} set autoplay TRUE}
      {{game get_player_config 2} set autoplay TRUE}
      {{game get_player_config 3} set autoplay TRUE}
      {set $fake_controllers TRUE}
      {ui goto_screen post_songs_loading_screen}
   )
}
{new BandScreen
   frame_rate_screen
   (panels frame_rate_panel)
   (enter {fx set_showing FALSE})
}
{new UIPanel
   frame_rate_game_panel
   (enter
      {set $camera.disable_picking 1}
      {set $shot 1}
      {set $bad_shot 0}
      {frame_rate_game_screen update_shot}
      {beatmatch foreach_active_player $p
         {handle ($p set_auto_play_error 34)}
      }
      {{beatmatch active_player 0} set_permanent_overdrive TRUE}
      {{beatmatch active_player 1} set_permanent_overdrive TRUE}
      {{beatmatch active_player 2} set_permanent_overdrive TRUE}
      {{beatmatch active_player 3} set_permanent_overdrive TRUE}
   )
   (exit
      {set $composite_character_demand_load FALSE}
      {set $composite_character_swap_gender FALSE}
   )
}
{new BandScreen
   frame_rate_game_screen
   (panels
      game
      world_panel
      coop_track_panel
      frame_rate_game_panel
      sync_audio_net_panel
   )
   GAME_SCREEN_HANDLERS
   (back splash_screen)
   (my_enter
      {set $camera.disable_picking 1}
      {set $shot 1}
      {$this update_shot}
      {beatmatch foreach_active_player $p
         {handle ($p set_auto_play_error 34)}
      }
   )
   (BUTTON_DOWN_MSG
      {switch $raw_button
         (kPad_X
            {set $bad_shot 1}
            {while {== $bad_shot 1}
               {'++' $shot}
               {if {== $shot {size $shots}}
                  {set $shot 1}
               }
               {$this update_shot}
            }
         )
         (kPad_Tri
            {set $bad_shot 1}
            {while {== $bad_shot 1}
               {-- $shot}
               {if {== $shot 0}
                  {set $shot {- {size $shots} 1}}
               }
               {$this update_shot}
            }
         )
         (kPad_Circle
            {'+=' $shot 10}
            {if {>= $shot {size $shots}}
               {set $shot 1}
            }
            {$this update_shot}
         )
         (kPad_Square
            {-= $shot 10}
            {if {<= $shot 0}
               {set $shot {- {size $shots} 1}}
            }
            {$this update_shot}
         )
         kDataUnhandled
      }
   )
   (update_shot
      {do
         ($i {elem $shots $shot})
         {if_else {$world exists $i}
            {do
               ($world_shot {$world find $i})
               {cond
                  ({!
                        {$world_shot platform_ok}}
                     {cheat_display show {sprint "wrong platform: " $i}}
                     {set $bad_shot 1}
                  )
                  ({!
                        {$world_shot get enabled}}
                     {cheat_display show {sprint "shot disabled: " $i}}
                     {set $bad_shot 1}
                  )
                  ({find_elem
                        (LOSE WIN WIN_PRE WIN_POST WIN_P1 WIN_P2 WIN_TIE WIN_QUICK INTRO INTRO_VENUE INTRO_QUICK INTRO_MULTI OUTRO OUTRO_MULTI)
                        {$world_shot get category}}
                     {cheat_display show
                        {sprint
                           "skipping shot category "
                           {$world_shot get category}
                           " "
                           $world_shot
                        }
                     }
                     {set $bad_shot 1}
                  )
                  {handle ($world start)}
                  {handle ($world intro_start)}
                  {$world force_shot $world_shot}
                  {cheat_display show
                     {sprint $shot ": " $i}
                  }
                  {set $bad_shot 0}
               }
            }
            {cheat_display show {sprint "couldn't find: " $i}}
         }
      }
   )
}