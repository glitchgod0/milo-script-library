#define FREESTYLE_KEYFRAME (DC_PLAYER_FREESTYLE)
#define COMMON_GAME_HANDLERS (
   (score 0)
   (num_stars 0)
   (performance_index 0)
   (score_multiplier 0)
   (load {set_loader_period 14})
   (finish_load {set_loader_period 10})
   (unload {set $hud_panel ""})
   (common_init
      {if $hamdirector
         {$hamdirector set difficulty {meta_performer get_difficulty}}
         {$hamdirector set practice_start ''}
         {$hamdirector set practice_end ''}
         {if {$hamdirector get_world}
            {{$hamdirector get_world} add_sink
               $this
               (
                  (intro_start on_intro_start)
                  (intro_end on_intro_end)
               )
            }
         }
      }
      {meta_performer game_init}
   )
   (common_reset
      {set [num_stars] 0}
      {active_events_parser add_sink $this () 3}
      {if $hud_panel
         {$hud_panel reset}
      }
      {if $hud_panel
         {$hud_panel set_score [score] [score] 0 1}
         {$hud_panel set_score [score] [score] 0 2}
         {resize {$hud_panel get special_move_list} 0}
         {$hud_panel set_num_photos 1}
         {$hud_panel set_slow 0 0}
      }
      {if $hamdirector
         {$this send_world_message start 0}
      }
      {audio clear_loop}
      {count_in_player clear_events}
      {slow_count_in_player clear_events}
      {action_bark_player set_active 0}
      {photo_taker clear_events}
      {$this set_mp_stream 0}
      {ui reset_snapshots}
      {if {exists cursor_panel}
         {cursor_panel set_showing 1}
      }
      {meta_performer game_reset}
   )
   (send_world_message
      ($message $delay)
      {if $gameplay_event_spew
         {print "[ " $message " ]" "\n"}
      }
      {if_else {<= $delay 0}
         {handle ({$hamdirector get_world} $message)}
         {script_task
            0
            (delay $delay)
            (script {handle ({$hamdirector get_world} $message)})
         }
      }
   )
   (pick_intro
      {game_screen set_showing 1}
      {$this reset}
      {if_else $skip_intro
         {do
            {$this send_world_message intro_start 0}
            {$this send_world_message intro_end 0}
         }
         {do
            {$this send_world_message intro_start 0}
         }
      }
   )
   (intro_over {$this send_world_message intro_end 0})
   (excitement
      ($ex)
      {if {gamemode get crowd_reacts}
         {do
            ($levels
               (excitement_boot
                  excitement_bad
                  excitement_okay
                  excitement_great
                  excitement_peak
               )
            )
            {if {< $ex 5}
               {handle ($this {elem $levels $ex})}
            }
         }
      }
      kDataUnhandled
   )
   (game_over kDataUnhandled)
   (game_won_common
      {game set_realtime 1}
      {game set_paused 1}
   )
   (game_won {$this game_won_common} kDataUnhandled)
   (game_outro
      {synth stop_all_sfx}
      {ui push_screen {gamemode get win_screen}}
      kDataUnhandled
   )
   (disable_all_controllers)
   (BUTTON_DOWN_MSG
      {if {&& {== $action 4} {user_mgr is_participating $user}}
         {$this pause_game $user}
      }
   )
   (pause_game
      ($user)
      {if {! {game_panel is_game_over}}
         {input_mgr set_user $user}
         {ui push_screen pause_screen}
      }
   )
   (freestyle_start_beat
      {do
         ($song_anim {$hamdirector song_anim})
         ($retval -1)
         {$song_anim foreach_keyframe $hamdirector
            (shot)
            $frame
            $value
            {if {== $value FREESTYLE_KEYFRAME}
               {set $retval {seconds_to_beat {/ $frame 30}}}
            }
         }
         $retval
      }
   )
   (freestyle_end_beat
      {do
         ($song_anim {$hamdirector song_anim})
         ($found_freestyle 0)
         ($retval -1)
         {$song_anim foreach_keyframe $hamdirector
            (shot)
            $frame
            $value
            {if_else $found_freestyle
               {do
                  {set $retval {seconds_to_beat {/ $frame 30}}}
                  {set $found_freestyle 0}
               }
               {if {== $value FREESTYLE_KEYFRAME}
                  {set $found_freestyle 1}
               }
            }
         }
         $retval
      }
   )
   (set_performance_state_index
      ($state_index $broadcast_direction)
      {do
         ($old_state_index [performance_index])
         ($multiplier 0)
         ($old_performance_state '')
         ($performance_state '')
         {set [performance_index]
            {max {min $state_index {- {size [performance_state_chart]} 1}} 0}
         }
         {set $multiplier
            {elem {elem [performance_state_chart] [performance_index]} 1}
         }
         {if $hud_panel
            {$hud_panel set_score_multiplier $multiplier}
         }
         {if {&& $broadcast_direction {!= $multiplier [score_multiplier]}}
            {$this send_world_message
               {if_else {> $multiplier [score_multiplier]}
                  score_multiplier_up
                  score_multiplier_down
               }
               0
            }
         }
         {set [score_multiplier] $multiplier}
         {set $old_performance_state
            {if_else {>= $old_state_index 0}
               {elem {elem [performance_state_chart] $old_state_index} 0}
               ''
            }
         }
         {set $performance_state
            {elem {elem [performance_state_chart] [performance_index]} 0}
         }
         {if {!= $old_performance_state $performance_state}
            {$this send_world_message $performance_state 2.0e-2}
            {if $broadcast_direction
               {$this send_world_message
                  {symbol
                     {sprint
                        $performance_state
                        {if_else {> $old_state_index [performance_index]}
                           _downto
                           _upto
                        }
                     }
                  }
                  2.0e-2
               }
            }
         }
      }
   )
   (next_performance_state_index
      ($rating_idx $cur_index)
      {if_else {< $cur_index 0}
         [initial_performance_state_index]
         {do
            ($delta
               {elem {elem [performance_state_chart] $cur_index} {'+' $rating_idx 2}}
            )
            {'+' $delta $cur_index}
         }
      }
   )
   (calculate_best_possible_score
      ($score_chart)
      {do
         ($best_score 0)
         ($score_index [initial_performance_state_index])
         ($move_score_base {elem $score_chart 0})
         ($song_anim {$hamdirector song_anim})
         ($move "")
         ($score_add 0)
         {$song_anim foreach_keyframe $hamdirector
            (move)
            $frame
            $value
            {set $move {$hud_panel get_move $value}}
            {if {! {$move is_rest}}
               {set $score_add
                  {'*'
                     $move_score_base
                     {elem {elem [performance_state_chart] $score_index} 1}
                  }
               }
               {'+=' $best_score $score_add}
               {set $score_index
                  {$this next_performance_state_index 0 $score_index}
               }
            }
         }
         $best_score
      }
   )
   (calculate_stars
      ($score)
      {do
         ($stars 0)
         ($threshold 0)
         ($last_threshold 0)
         ($done 0)
         {foreach_int $i 0 {size [star_thresholds]}
            {set $threshold {elem [star_thresholds] $i}}
            {if {! $done}
               {if_else {> $score $threshold}
                  {'+=' $stars 1}
                  {do
                     {'+=' $stars {/ {- $score $last_threshold} {- $threshold $last_threshold}}}
                     {set $done 1}
                  }
               }
               {set $last_threshold $threshold}
            }
         }
         $stars
      }
   )
   (set_mp_stream
      ($state)
      {audio set_track_volume
         drum
         {if_else $state
            -96
            0
         }
      }
      {audio set_track_volume
         vocals
         {if_else $state
            -96
            0
         }
      }
      {audio set_track_volume
         multi
         {if_else $state
            0
            -96
         }
      }
   )
)
(GamePanel
   (description "Main game mode panel for Hammer")
   (allowed_dirs)
   (types
      (linear
         COMMON_GAME_HANDLERS
         #include performance.dta
         (force_scale 0)
         (freestyle_start -1)
         (freestyle_end -1)
         (freestyle_score 0)
         (num_photo_ops 0)
         (last_scored_move_index -1)
         (star_thresholds ())
         (star_display "")
         (score_chart ())
         (last_pose_photo_beat -1)
         (poll
            {if
               {&&
                  {> [freestyle_start] 0}
                  {> [freestyle_end] 0}
                  {< $beat [freestyle_end]}
               }
               {if {freestyle_filter detected}
                  {'+=' [freestyle_score]
                     {'*'
                        {/ {taskmgr delta_beat} {- [freestyle_end] [freestyle_start]}}
                        [freestyle_max_points]
                     }
                  }
               }
               {if {> [freestyle_score] [freestyle_max_points]}
                  {set [freestyle_score] [freestyle_max_points]}
               }
            }
         )
         (music_start
            {if $hamdirector
               {$this send_world_message beat_animation_start 0}
            }
            kDataUnhandled
         )
         (music_end
            {do
               ($event {symbol {sprint "game_over_stars_" {int [num_stars]}}})
               {$this send_world_message $event 0}
               {$this send_world_message beat_animation_stop 0}
            }
            kDataUnhandled
         )
         (end {{game main_performer} win 0})
         (move_passed
            ($move $detect_frac)
            {do
               ($done 0)
               ($base_points 0)
               ($old_score [score])
               ($move_index {$hud_panel get cur_move_index})
               ($rating {detect_frac_to_rating $detect_frac})
               ($rating_idx {detect_frac_to_rating_idx $detect_frac})
               {if
                  {&&
                     {! {$move is_rest}}
                     $hud_panel
                     {< [last_scored_move_index] $move_index}
                  }
                  {$this send_world_message $rating 1.0e-3}
                  {meta_performer move_passed $move $detect_frac {$this get_type}}
                  {set $base_points {elem [score_chart] $rating_idx}}
                  {set $done 0}
                  {set [last_scored_move_index] $move_index}
                  {do
                     ($points {'*' [score_multiplier] $base_points})
                     ($last_stars [num_stars])
                     {if {> $points 0}
                        {set [score] {'+' [score] $points}}
                        {$hud_panel set_score [score] $old_score 0 1}
                        {set [num_stars] {$this calculate_stars [score]}}
                        {do
                           ($full {int [num_stars]})
                           ($partial {- [num_stars] $full})
                           {if [star_display]
                              {[star_display] set_star_progress $full $partial}
                              {if {> $full {int $last_stars}}
                                 {[star_display] set_star_complete {int $last_stars}}
                                 {$this send_world_message star_earned 0}
                              }
                           }
                        }
                        {handle ($world points_awarded)}
                     }
                  }
                  {if {! [force_scale]}
                     {do
                        ($next_state_index
                           {$this next_performance_state_index $rating_idx [performance_index]}
                        )
                        {$this set_performance_state_index $next_state_index 1}
                     }
                  }
               }
            }
         )
         (init
            {$this common_init}
            {{{$hud_panel find sound_bank} find music_level.fade} set level 0}
            {master add_sink $this (beat)}
            {final_pose_parser add_sink $this (final_pose)}
            {set [score_multiplier] 0}
            {if {$hamdirector get_world}
               {{$hamdirector get_world} add_sink
                  $this
                  (
                     (player_freestyle_start on_freestyle_start)
                     (player_freestyle_stop on_freestyle_stop)
                     (move_perfect on_move_perfect)
                     (move_awesome on_move_awesome)
                     (move_ok on_move_ok)
                     (move_bad on_move_bad)
                  )
               }
            }
            {if $hamdirector
               {$this send_world_message performance_mode 0}
               {set [star_display]
                  {{$hamdirector get cur_world} find score_star_display 0}
               }
               {$this send_world_message
                  {if_else {meta_performer is_no_flashcards_active}
                     flash_cards_hidden
                     flash_cards_visible
                  }
                  0
               }
            }
            {$this reset}
            {depth_buffer set_gameplay_state 10}
         )
         (reset
            {$this common_reset}
            {set [performance_index] -1}
            {$this set_performance_state_index [initial_performance_state_index] 0}
            {set [score] 0}
            {set [force_scale] 0}
            {set [freestyle_start] -1}
            {set [freestyle_end] -1}
            {set [freestyle_score] 0}
            {set [num_photo_ops] 4}
            {set [last_scored_move_index] -1}
            {set [score_chart]
               {switch {meta_performer get_difficulty}
                  (0 [performance_score_chart_easy])
                  (1 [performance_score_chart_medium])
                  (2 [performance_score_chart_expert])
               }
            }
            {if {$hamdirector song_anim}
               {do
                  ($best {$this calculate_best_possible_score [score_chart]})
                  {resize [star_thresholds] 0}
                  {foreach $elem [star_threshold_percentages]
                     {push_back [star_thresholds] {int {/ {'*' $elem $best} 100}}}
                  }
               }
               {$this send_world_message beat_animation_stop 0}
            }
            {if $hud_panel
               {do
                  ($special_moves {$this construct_random_tagged_move_list})
                  {$hud_panel set special_move_list $special_moves}
               }
            }
            {$hamdirector reset_detection}
         )
         (beat kDataUnhandled)
         (final_pose
            {do
               ($move_dir {find_obj {$hamdirector get_world} moves})
               ($instant_rating 0)
               {if $move_dir
                  {set $instant_rating {$move_dir instantanious_score}}
                  {$this send_world_message
                     {switch {detect_frac_to_rating $instant_rating}
                        (move_perfect final_pose_perfect)
                        (move_awesome final_pose_awesome)
                        (move_ok final_pose_ok)
                        (move_bad final_pose_bad)
                     }
                     0
                  }
                  {gesture_mgr start_snapshot_batch}
                  {$hud_panel final_pose_snapshot}
               }
            }
         )
         (on_move_perfect {handle ($this on_move_awesome)} kDataUnhandled)
         (on_move_awesome
            {if
               {&&
                  {$hud_panel is_special_move {$hud_panel get cur_move_index}}
                  {< [num_photo_ops] [max_num_photos]}
               }
               {'++' [num_photo_ops]}
               {$hud_panel set_num_photos [num_photo_ops]}
               {$this send_world_message photo_award 0}
            }
            kDataUnhandled
         )
         (on_move_ok kDataUnhandled)
         (on_move_bad kDataUnhandled)
         (on_freestyle_start
            {set [freestyle_start] {round {$this freestyle_start_beat}}}
            {set [freestyle_end] {round {$this freestyle_end_beat}}}
            {photo_taker init
               {'+' [freestyle_start] 8}
               {'*' [num_photo_ops] 4}
               {- [freestyle_end] 1}
               {'+' [freestyle_end] 5}
            }
            {gesture_mgr start_snapshot_batch}
            {set [freestyle_score] 0}
            {freestyle_filter activate}
            {freestyle_filter set velocity_threshold [freestyle_movement_threshold]}
            {if {exists cursor_panel}
               {cursor_panel set_showing 0}
            }
         )
         (on_freestyle_stop
            {set [freestyle_start] -1}
            {set [freestyle_end] -1}
            {do
               ($index 0)
               ($rating_index 0)
               ($rating_element {find_obj $hud_panel freestyle_rating.anim})
               {foreach $elem [freestyle_award_thresholds]
                  {if {>= [freestyle_score] $elem}
                     {set $rating_index $index}
                  }
                  {'++' $index}
               }
               {if $rating_element
                  {$rating_element set_frame {'+' $rating_index 1}}
               }
            }
            {if {exists freestyle_filter}
               {freestyle_filter deactivate}
            }
            {if {exists cursor_panel}
               {cursor_panel set_showing 1}
            }
         )
         (construct_random_tagged_move_list
            {if_else $hamdirector
               {do
                  ($song_anim {$hamdirector song_anim})
                  ($last_move_index -1)
                  ($legal_move_list {array 0})
                  ($tagged_move_list {array 0})
                  ($tagged_move_count 0)
                  ($first_move 1)
                  {$song_anim foreach_keyframe $hamdirector
                     (shot)
                     $frame
                     $value
                     {if {&& {< $last_move_index 0} {== $value FREESTYLE_KEYFRAME}}
                        {set $last_move_index
                           {$song_anim index_from_frame $hamdirector (move) $frame}
                        }
                     }
                  }
                  {foreach_int $i 0 {- $last_move_index 2}
                     {do
                        ($move_name '')
                        ($move "")
                        {if {$song_anim value_from_index $hamdirector (move) $i $move_name}
                           {set $move {$hud_panel get_move $move_name}}
                           {if_else {== $move ""}
                              {notify_once "Skipping move " $move_name}
                              {do
                                 {if {&& {! {$move is_rest}} {! $first_move}}
                                    {push_back $legal_move_list $i}
                                 }
                                 {if {! {$move is_rest}}
                                    {set $first_move 0}
                                 }
                              }
                           }
                        }
                     }
                  }
                  {set $tagged_move_count
                     {int {'*' {size $legal_move_list} [tagged_moves_frac]}}
                  }
                  {set $tagged_move_count {max $tagged_move_count [tagged_moves_min_count]}}
                  {set $tagged_move_count {min $tagged_move_count {size $legal_move_list}}}
                  {while {< {size $tagged_move_list} $tagged_move_count}
                     {do
                        ($val {elem $legal_move_list {random_int 0 {size $legal_move_list}}})
                        {remove_elem $legal_move_list $val}
                        {push_back $tagged_move_list $val}
                     }
                  }
                  {sort $tagged_move_list}
                  $tagged_move_list
               }
               ()
            }
         )
         (force_performance_next
            {set [force_scale] 1}
            {$this set_performance_state_index {'+' [performance_index] 1} 1}
         )
         (force_performance_previous
            {set [force_scale] 1}
            {$this set_performance_state_index {- [performance_index] 1} 1}
         )
      )
      (skillz
         COMMON_GAME_HANDLERS
         #include skills.dta
         (step_index -1)
         (section "")
         (num_steps 0)
         (loop_count 0)
         (state start)
         (learn_state fast_track)
         (start_beat -1)
         (end_beat -1)
         (step_complete 0)
         (move_beats ())
         (learn_move_index 0)
         (learn_mode_locked 0)
         (learn_credit_category 0)
         (section_credits 0)
         (section_credits_max 0)
         (learn_section_result_category 0)
         (num_ticks 0)
         (miss_streak 0)
         (linked_move_streak 1)
         (performance_state '')
         (slow_motion 0)
         (slow_down_state_count 0)
         (in_review_section 0)
         (review_move_number 0)
         (review_move_count 0)
         (review_move_hit_count 0)
         (review_total_move_count 0)
         (review_total_move_hit_count 0)
         (play_barks 0)
         (played_first_express 0)
         (played_first_3rep 0)
         (vo_spew 0)
         (init
            {$this common_init}
            {master add_sink $this (beat stream_jump)}
            {$this reset}
            {$this check_tags}
            {resize [cached_loop_cams] 0}
            {if $hamdirector
               {$this send_world_message flash_cards_visible 0}
            }
            {audio jump 0}
         )
         (on_intro_end
            {do
               ($s)
               ($e)
               {if
                  {!
                     {audio get_loop_beats $s $e}
                  }
                  {$this stream_jump}
               }
            }
            {if $hamdirector
               {$hamdirector set dancer_face_clip Base}
               {$hamdirector set dancer_face_weight 1.0}
            }
            kDataUnhandled
         )
         (exit
            {set [cached_loop_cams] {array 0}}
            {delete [section]}
         )
         (setup_section
            {do
               ($done 0)
               ($index 0)
               ($moves {{$hamdirector get_world} find moves})
               ($old_section "")
               {$moves iterate
                  PracticeSection
                  $ps
                  {if {== {$ps get difficulty} {meta_performer get_difficulty}}
                     {set $old_section $ps}
                  }
               }
               {if [section]
                  {delete [section]}
               }
               {set [section] {new PracticeSection}}
               {[section] copy $old_section 0}
               {[section] clear (steps)}
               {while {! $done}
                  {do
                     ($new_index {[section] size (steps)})
                     ($step_type {$old_section get (steps $index type)})
                     {[section] append (steps) 0}
                     {[section] set
                        (steps $new_index type)
                        {$old_section get (steps $index type)}
                     }
                     {[section] set
                        (steps $new_index boundry)
                        {$old_section get (steps $index boundry)}
                     }
                     {[section] set
                        (steps $new_index start)
                        {$old_section get (steps $index start)}
                     }
                     {[section] set
                        (steps $new_index end)
                        {$old_section get (steps $index end)}
                     }
                     {if {== $step_type review}
                        {'++' $new_index}
                        {[section] append (steps) 0}
                        {[section] set (steps $new_index type) freestyle}
                        {[section] set (steps $new_index boundry) 1}
                        {[section] set (steps $new_index start) ""}
                        {[section] set (steps $new_index end) ""}
                     }
                     {'++' $index}
                     {if {>= $index {$old_section size (steps)}}
                        {set $done 1}
                     }
                  }
               }
            }
         )
         (determine_seq_start_beat
            ($sfx $done_by_beat $time_accounted)
            {do
               ($sfx_start_beat 0)
               ($sfx_length 0)
               ($done_by_seconds {beat_to_seconds $done_by_beat})
               ($time_we_have {- $done_by_seconds $time_accounted})
               {set $sfx {$hud_panel get_seq $sfx}}
               {set $sfx_length {- {$hud_panel get_seq_length $sfx} $time_accounted}}
               {if {> $sfx_length $time_we_have}
                  {if {== {$sfx class_name} RandomGroupSeq}
                     {$hud_panel pick_shorter_seq $sfx {'+' $time_we_have $time_accounted}}
                     {set $sfx_length {- {$hud_panel get_seq_length $sfx} $time_accounted}}
                  }
                  {if {> $sfx_length $time_we_have}
                     {notify "Found case of overlapping SFX " $sfx}
                  }
               }
               {if_else {<= $sfx_length 0}
                  $done_by_beat
                  {do
                     {set $sfx_start_beat
                        {max {seconds_to_beat {- $done_by_seconds $sfx_length}} 0}
                     }
                     {'*' 4 {int {/ $sfx_start_beat 4}}}
                  }
               }
            }
         )
         (check_tags
            {foreach_int $i 0 [num_steps]
               {if {!= {[section] get (steps $i type)} freestyle}
                  {if {< {$this beat_from_tag {[section] get (steps $i start)}} 0}
                     {notify
                        "Assign as bug to Daniel Chase - Step "
                        $i
                        " start tag refers to "
                        {[section] get (steps $i start)}
                        " which does not exist in song."
                     }
                  }
                  {if {< {$this beat_from_tag {[section] get (steps $i end)}} 0}
                     {notify
                        "Assign as bug to Daniel Chase - Step "
                        $i
                        " end tag refers to "
                        {[section] get (steps $i end)}
                        " which does not exist in song."
                     }
                  }
               }
            }
         )
         (beat_from_tag
            ($tag)
            {do
               ($retVal -1)
               {if $hamdirector
                  {do
                     ($song_anim {$hamdirector song_anim})
                     ($frame)
                     ($value)
                     {$song_anim foreach_keyframe $hamdirector
                        (practice)
                        $frame
                        $value
                        {if {== $tag $value}
                           {set $retVal {round {seconds_to_beat {/ $frame 30}}}}
                        }
                     }
                  }
               }
               $retVal
            }
         )
         (move_on
            {if {== [state] learn}
               {do
                  ($credits {elem [step_category_credits] [learn_credit_category]})
                  ($max_credits {elem [step_category_credits] 3})
                  ($cue {elem [step_result_category_cues] [learn_credit_category]})
                  ($category [learn_credit_category])
                  {'+=' [section_credits] $credits}
                  {'+=' [section_credits_max] $max_credits}
                  {if $hud_panel
                     {$hud_panel play $cue}
                     {if [vo_spew]
                        {printf
                           "VO: Step end. Cat. %d adds %d credits for %d / %d. Playing %s.cue.\n"
                           $category
                           $credits
                           [section_credits]
                           [section_credits_max]
                           $cue
                        }
                     }
                  }
               }
            }
            {set [step_complete] 1}
            {count_in_player clear_events}
            {slow_count_in_player clear_events}
            {do
               ($next_step_index {'+' [step_index] 1})
               {if_else {< $next_step_index [num_steps]}
                  {do
                     ($next_step_start {[section] get (steps $next_step_index start)})
                     ($next_step_type {[section] get (steps $next_step_index type)})
                     ($start)
                     ($end)
                     {audio get_loop_beats $start $end}
                     {set $start {int $start}}
                     {set $end {int $end}}
                     {switch $next_step_type
                        (learn
                           {set [start_beat]
                              {$this determine_seq_start_beat
                                 nar_express_short
                                 {- {$this beat_from_tag $next_step_start} 4}
                                 0
                              }
                           }
                        )
                        (review
                           {set [start_beat] {- {$this beat_from_tag $next_step_start} 12}}
                           {do
                              ($percentage {/ [section_credits] [section_credits_max]})
                              ($category
                                 {$this calc_result_category $percentage [learn_result_category_thresholds]}
                              )
                              ($cue {$hud_panel get_seq {elem [learn_result_category_cues] $category}})
                              ($cue_length {$hud_panel get_seq_length $cue})
                              ($cue_finish_beat
                                 {seconds_to_beat {'+' {beat_to_seconds {'+' $end 0.5}} $cue_length}}
                              )
                              {set $cue_finish_beat {'*' 4 {int {'+' 1 {/ $cue_finish_beat 4}}}}}
                              {set $end $cue_finish_beat}
                              {if {<= 8 {- $end [end_beat]}}
                                 {set $end {'+' [end_beat] 8}}
                              }
                              {while {&& {> $end {master event_beat end}} {> $end [end_beat]}}
                                 {-= $end 4}
                                 {-= [start_beat] 4}
                              }
                              {set [learn_section_result_category] $category}
                              {gameplay_event_scheduler reset}
                              {foreach $event
                                 (
                                    ({'+' [end_beat] 0.5} $cue)
                                    ({'+' [end_beat] 0.5} deactivate_timeline)
                                    ({'+' [end_beat] 4} highlight_awards)
                                    ({'+' [end_beat] 8} skills_learn_done)
                                    ({'+' $cue_finish_beat 1} skills_review)
                                    ({'+' $cue_finish_beat 1}
                                       {if_else {== $next_step_index {- [num_steps] 1}}
                                          recap_final
                                          recap
                                       }
                                    )
                                    ({'+' $cue_finish_beat 1} done)
                                 )
                                 {do
                                    ($time {eval {elem $event 0}})
                                    {if {> $time $end}
                                       {set $time {'+' [start_beat] {- $time $end}}}
                                    }
                                    {gameplay_event_scheduler add_world_message $time {eval {elem $event 1}}}
                                 }
                                 {gameplay_event_scheduler reset_to_beat {taskmgr beat}}
                              }
                           }
                        )
                        (freestyle
                           {set [start_beat] $end}
                           {$hamdirector set player_freestyle 1}
                           {if {exists cursor_panel}
                              {cursor_panel set_showing 0}
                           }
                        )
                     }
                     {$this set_loop [start_beat] $end}
                     {if $hud_panel
                        {$hud_panel set loop_wrapping 0}
                     }
                  }
                  {do
                     {audio clear_loop}
                     {{game main_performer} win 0}
                     {do
                        ($percentage {/ [review_total_move_hit_count] [review_total_move_count]})
                        ($category
                           {$this calc_result_category
                              $percentage
                              [session_result_category_thresholds]
                           }
                        )
                        ($cue {elem [session_result_category_cues] $category})
                        {if $hud_panel
                           {$hud_panel play $cue}
                           {if [vo_spew]
                              {printf
                                 "VO: Session end. %d / %d moves hit for %d%%. Cat. %d. Playing %s.cue.\n"
                                 [review_total_move_hit_count]
                                 [review_total_move_count]
                                 {int {'*' 100 $percentage}}
                                 $category
                                 $cue
                              }
                           }
                        }
                        {set [score] {int {'*' 100 $percentage}}}
                     }
                  }
               }
            }
         )
         (stream_jump
            {if [step_complete]
               {'++' [step_index]}
               {if {&& [section] {>= [step_index] 0}}
                  {if {> [num_steps] [step_index]}
                     {do
                        ($start)
                        ($end)
                        ($step_start {[section] get (steps [step_index] start)})
                        ($step_end {[section] get (steps [step_index] end)})
                        ($this_is_freestyle
                           {== {[section] get (steps [step_index] type)} freestyle}
                        )
                        {set [state] {[section] get (steps [step_index] type)}}
                        {if {$this is_section_boundry [step_index]}
                           {$hamdirector set practice_start ''}
                           {$hamdirector set practice_end ''}
                           {if $hud_panel
                              {$this setup_timeline}
                           }
                        }
                        {if $this_is_freestyle
                           {set $step_start {[section] get (steps 0 start)}}
                           {set $step_end {[section] get (steps 0 end)}}
                        }
                        {$hamdirector set practice_start $step_start}
                        {$hamdirector set practice_end $step_end}
                        {$this update_margins}
                        {if_else $this_is_freestyle
                           {do
                              ($cur_start)
                              ($cur_end)
                              ($last_song_beat {seconds_to_beat {/ {master song_duration_ms} 1000}})
                              {audio get_loop_beats $cur_start $cur_end}
                              {set [start_beat] $cur_start}
                              {set [end_beat] {min {'+' [start_beat] 12} $last_song_beat}}
                           }
                           {do
                              {if
                                 {!
                                    {$hamdirector practice_beats $start $end}
                                 }
                                 {print
                                    "Please assign to Daniel Chase... (Section "
                                    [section]
                                    ", step "
                                    [step_index]
                                    " has illegal tagging. "
                                    $step_start
                                    " to "
                                    $step_end
                                    ")\n"
                                 }
                              }
                              {set [start_beat] {round {- $start 4}}}
                              {set [end_beat] {round {'+' $end 4}}}
                           }
                        }
                        {if $hud_panel
                           {$hud_panel set loop_wrapping 1}
                        }
                        {$this initialize_step}
                        {set [play_barks] 0}
                        {action_bark_player set_active 0}
                     }
                  }
               }
            }
            {set [step_complete] 0}
            {count_in_player reset_to_beat {taskmgr beat}}
            {slow_count_in_player reset_to_beat {taskmgr beat}}
            {gameplay_event_scheduler reset_to_beat {taskmgr beat}}
            {$hamdirector reset_detection}
         )
         (initialize_step
            {switch [state]
               (learn
                  {set [loop_count] 0}
                  {set [slow_down_state_count] 0}
                  {do
                     ($intro_vo "")
                     ($vo_start_beat 0)
                     {if_else [played_first_express]
                        {set $intro_vo nar_express_short}
                        {do
                           {set $intro_vo nar_express_long}
                           {set [played_first_express] 1}
                        }
                     }
                     {if {$this is_section_boundry [step_index]}
                        {set [loop_cam_index] 0}
                        {$this change_camera_angle}
                     }
                     {$this set_loop [start_beat] [end_beat]}
                     {if {== [step_index] 0}
                        {set $vo_start_beat
                           {$this determine_seq_start_beat $intro_vo [start_beat] 0}
                        }
                        {$this set_loop $vo_start_beat [end_beat]}
                     }
                     {$hud_panel play $intro_vo}
                     {$hamdirector set player_freestyle 0}
                  }
                  {set [learn_credit_category] 3}
                  {set [miss_streak] 0}
                  {$this set_learn_state fast_track}
                  {if $hud_panel
                     {$hud_panel set_miss_streak_pct 0}
                  }
                  {count_in_player set_section [start_beat] [end_beat]}
                  {slow_count_in_player set_section [start_beat] [end_beat]}
                  {midi_player set_play_range [start_beat] [end_beat]}
                  {$this send_world_message skills_learn 0}
                  {depth_buffer set_gameplay_state 11}
                  {$this send_world_message beat_animation_stop 0}
                  {if {&& $hud_panel {== [loop_count] 0}}
                     {resize [move_beats] 0}
                     {set [num_ticks] 0}
                     {do
                        ($timeline {$hud_panel find dynamic_hud})
                        ($b {'+' [start_beat] 4})
                        ($num_moves {round {/ {- {- [end_beat] [start_beat]} 8} 4}})
                        ($count 0)
                        {$timeline deactivate}
                        {while {< $b {- [end_beat] 4}}
                           {$timeline set_active $b 1}
                           {$timeline introduce $b $count $num_moves}
                           {push_back [move_beats] $b}
                           {'++' $count}
                           {'+=' $b 4}
                        }
                     }
                  }
               )
               (review
                  {$this set_loop [start_beat] [end_beat]}
                  {set [loop_count] 0}
                  {count_in_player clear_events}
                  {slow_count_in_player clear_events}
                  {do
                     ($s)
                     ($e)
                     {if {$hamdirector practice_beats $s $e}
                        {count_in_player set_section {- $s 4} -1}
                     }
                  }
                  {set [section_credits] 0}
                  {set [section_credits_max] 0}
                  {set [in_review_section] 0}
                  {if $hud_panel
                     {$hud_panel set_review_percentage 0}
                  }
                  {$this send_world_message beat_animation_start 0}
                  {depth_buffer set_gameplay_state 12}
                  {set [performance_index] -1}
                  {$this set_performance_state_index [initial_performance_state_index] 0}
                  {if $hamdirector
                     {$hamdirector set dancer_face_weight 0.0}
                  }
               )
               (freestyle
                  {$this set_loop [start_beat] [end_beat]}
                  {set [loop_count] 0}
                  {if_else {== [review_move_hit_count] [review_move_count]}
                     {$this send_world_message skills_review_done_100_percent 0}
                     {$this send_world_message skills_review_done 0}
                  }
                  {$this send_world_message skills_freestyle_enter 0}
                  {if {>= [step_index] {- {[section] size (steps)} 1}}
                     {do
                        ($fade_out {find_obj $hud_panel sound_bank e3_fadeout.anim})
                        {if $fade_out
                           {$fade_out animate}
                        }
                     }
                  }
               )
            }
         )
         (calc_result_category
            ($percentage $thresholds)
            {do
               ($result 0)
               {foreach $i $thresholds
                  {if {>= $percentage $i}
                     {'++' $result}
                  }
               }
               $result
            }
         )
         (start_step
            {switch [state]
               (learn
                  {set [linked_move_streak] 1}
                  {set [learn_move_index] 0}
                  {action_bark_player set_active 0}
                  {if [play_barks]
                     {action_bark_player set bank_name barks_slow}
                     {foreach $elem [move_beats]
                        {action_bark_player add_barks
                           {$hud_panel move_from_beat {'+' $elem 1}}
                           (verb)
                           $elem
                        }
                        {if [slow_motion]
                           {action_bark_player add_barks
                              {$hud_panel move_from_beat {'+' $elem 1}}
                              (verb_slow)
                              $elem
                           }
                        }
                     }
                     {action_bark_player set_active 1}
                  }
                  {if $hamdirector
                     {set $face_name
                        {if_else {== [learn_state] slow_down}
                           {elem [slow_learn_base_viseme] 0}
                           {elem [learn_base_viseme] 0}
                        }
                     }
                     {set $face_weight
                        {if_else {== [learn_state] slow_down}
                           {elem [slow_learn_base_viseme] 1}
                           {elem [learn_base_viseme] 1}
                        }
                     }
                     {$hamdirector set dancer_face_clip $face_name}
                     {$hamdirector set dancer_face_weight $face_weight}
                  }
                  {$this set_loop [start_beat] [end_beat]}
               )
               (review
                  {'++' [loop_count]}
                  {if {== [loop_count] [full_review_count]}
                     {if {== [step_index] {- [num_steps] 1}}
                        {audio clear_loop}
                        {'+=' [end_beat] 8}
                     }
                     {$hud_panel set loop_wrapping 0}
                  }
               )
            }
         )
         (end_step
            {switch [state]
               (review
                  {if {>= [loop_count] [full_review_count]}
                     {$this move_on}
                  }
               )
               (freestyle
                  {$this move_on}
                  {$this send_world_message skills_freestyle_exit 0}
               )
            }
         )
         (learn_move_completed
            ($detect_frac)
            {do
               ($timeline {$hud_panel find dynamic_hud})
               ($move_beat {'+' [start_beat] 4 {'*' 4 [learn_move_index]}})
               ($is_last_move {== {- [end_beat] 8} $move_beat})
               ($satisfied_move {>= $detect_frac {rating_to_detect_frac move_awesome}})
               ($slow_mo_gimmes {elem [learn_slow_mo_gimmes] [num_ticks]})
               {if {! $satisfied_move}
                  {set [linked_move_streak] 0}
                  {if {== [learn_state] counting}
                     {set [play_barks] 1}
                  }
               }
               {if $is_last_move
                  {do
                     ($face_name
                        {if_else {== [learn_state] slow_down}
                           {elem {elem [slow_learn_result_faces] $rating_idx} 0}
                           {elem {elem [learn_result_faces] $rating_idx} 0}
                        }
                     )
                     ($face_weight
                        {if_else {== [learn_state] slow_down}
                           {elem {elem [slow_learn_result_faces] $rating_idx} 1}
                           {elem {elem [learn_result_faces] $rating_idx} 1}
                        }
                     )
                     {if $hamdirector
                        {$hamdirector set dancer_face_clip $face_name}
                        {$hamdirector set dancer_face_weight $face_weight}
                     }
                  }
               }
               {if {&& $satisfied_move {== [learn_state] counting}}
                  {if {&& $is_last_move [linked_move_streak]}
                     {set [miss_streak] 0}
                     {'++' [num_ticks]}
                     {$timeline award [num_ticks]}
                  }
               }
               {if {&& $is_last_move {! [linked_move_streak]}}
                  {switch [learn_state]
                     (counting {'++' [miss_streak]})
                     (slow_down
                        {if {>= [loop_count] $slow_mo_gimmes}
                           {'++' [miss_streak]}
                        }
                     )
                  }
               }
               {if {&& {! [learn_mode_locked]} $is_last_move}
                  {'++' [loop_count]}
                  {if {&& {== [learn_state] slow_down} {== [loop_count] $slow_mo_gimmes}}
                     {$this skills_bonus skills_bonus_start_scored_slowdown}
                     {if $hud_panel
                        {$hud_panel play nar_slow_recover}
                     }
                  }
                  {cond
                     ({&&
                           {==
                              [learn_state]
                              fast_track}
                           [linked_move_streak]}
                        {$this move_on}
                        {$this award_current_moves 3}
                        {$this skills_bonus
                           {switch [loop_count]
                              (1 skills_bonus_fasttrack_first)
                              (2 skills_bonus_fasttrack_second)
                           }
                        }
                        {$this set_learn_performance_state skills_learn_awesome}
                     )
                     ({>=
                           [num_ticks]
                           [learn_pass_max]}
                        {$this move_on}
                        {switch [learn_state]
                           (counting {$this skills_bonus skills_bonus_learn_complete})
                           (slow_down {$this skills_bonus skills_bonus_learn_complete})
                        }
                        {$this award_current_moves 2}
                        {$timeline show_tick_meter 0}
                     )
                     ({&&
                           {==
                              [learn_state]
                              fast_track}
                           {==
                              [loop_count]
                              [learn_fast_track_max]}}
                        {$this set_learn_state counting}
                        {$timeline show_tick_meter 1}
                        {do
                           ($vo nar_3rep_long)
                           ($time_til_loop {- {beat_to_seconds [end_beat]} {master stream_time}})
                           ($new_loop_start 0)
                           {if [played_first_3rep]
                              {set $vo nar_3rep_short}
                           }
                           {set [played_first_3rep] 1}
                           {set $new_loop_start
                              {$this determine_seq_start_beat $vo [start_beat] $time_til_loop}
                           }
                           {if {< $new_loop_start [start_beat]}
                              {$this set_loop $new_loop_start [end_beat]}
                              {count_in_player set ignore_next 1}
                           }
                           {$hud_panel play $vo}
                        }
                        {set [learn_credit_category] 2}
                     )
                     ({&&
                           {==
                              [learn_state]
                              slow_down}
                           [linked_move_streak]
                           {>
                              [loop_count]
                              $slow_mo_gimmes}}
                        {'++' [slow_down_state_count]}
                        {$this set_learn_state counting}
                        {set [loop_count] 0}
                        {set [miss_streak] 0}
                        {$this set_slow 0 1}
                     )
                     ({>=
                           [miss_streak]
                           [learn_miss_streak_max]}
                        {switch [learn_state]
                           (counting
                              {if_else {< [slow_down_state_count] [learn_slow_mo_chances]}
                                 {do
                                    {$this set_learn_state slow_down}
                                    {set [loop_count] 0}
                                    {set [miss_streak] 0}
                                    {$hud_panel play nar_slow_intro}
                                    {$this skills_bonus skills_bonus_enter_slowdown}
                                    {$this set_slow 1 1}
                                    {set [learn_credit_category] 1}
                                 }
                                 {do
                                    {$this award_current_moves 1}
                                    {$timeline show_tick_meter 0}
                                    {$this set_slow 0 1}
                                    {set [learn_credit_category] 0}
                                    {$this move_on}
                                 }
                              }
                           )
                           (slow_down
                              {$this award_current_moves 1}
                              {$timeline show_tick_meter 0}
                              {$this set_slow 0 1}
                              {set [learn_credit_category] 0}
                              {$this move_on}
                           )
                        }
                     )
                     ({==
                           [miss_streak]
                           {-
                              [learn_miss_streak_max]
                              1}}
                        {switch [learn_state]
                           (counting {$hud_panel play nar_3rep_last})
                           (slow_down {$hud_panel play nar_slow_fail})
                        }
                     )
                  }
                  {$this change_camera_angle}
               }
               {if $hud_panel
                  {$hud_panel set_miss_streak_pct {/ [miss_streak] [learn_miss_streak_max]}}
               }
               {'++' [learn_move_index]}
            }
         )
         (set_slow
            ($slow $fade)
            {set [slow_motion] $slow}
            {if $hud_panel
               {$hud_panel set_slow $slow $fade}
            }
            {count_in_player set active {! [slow_motion]}}
            {slow_count_in_player set active [slow_motion]}
         )
         (setup_timeline
            {do
               ($timeline {$hud_panel find dynamic_hud})
               ($profile {profile_mgr get_profile {user_mgr get_active_user}})
               {switch [state]
                  (learn
                     {$timeline clear_moves}
                     {do
                        ($done 0)
                        {foreach_int $i [step_index] [num_steps]
                           {if {! $done}
                              {if_else {'||' {! {$this is_section_boundry $i}} {== $i [step_index]}}
                                 {do
                                    ($start_beat {$this beat_from_tag {[section] get (steps $i start)}})
                                    ($end_beat {$this beat_from_tag {[section] get (steps $i end)}})
                                    ($num_moves {int {/ {- $end_beat $start_beat} 4}})
                                    ($b 0)
                                    ($move "")
                                    {foreach_int $j 0 $num_moves
                                       {set $b {round {'+' $start_beat {'*' 4 $j}}}}
                                       {set $move {$hud_panel move_from_beat $b}}
                                       {$timeline add_move $move $b}
                                       {if $profile
                                          {$timeline set_move_award
                                             $b
                                             {if_else {== $j 0}
                                                {$profile get_award {$move name}}
                                                0
                                             }
                                             0
                                             1
                                          }
                                          {$timeline set_move_award_fade $b 1}
                                       }
                                       {do
                                          ($flash_card {$timeline find_flashcard $b})
                                          {if {! $flash_card}
                                             {print
                                                "Please assign to Daniel Chase... Number of flashcards in a group: "
                                                $j
                                                ". Can't be more than 4. step = "
                                                $i
                                                "\n"
                                             }
                                          }
                                          {{$timeline find_flashcard $b} set_num_links
                                             {if_else {== $j 0}
                                                $num_moves
                                                0
                                             }
                                          }
                                       }
                                    }
                                 }
                                 {set $done 1}
                              }
                           }
                        }
                     }
                  )
                  (review
                     {do
                        ($done 0)
                        ($start_beat
                           {$this beat_from_tag {[section] get (steps [step_index] start)}}
                        )
                        ($end_beat {$this beat_from_tag {[section] get (steps [step_index] end)}})
                        ($move_count {int {/ {- $end_beat $start_beat} 4}})
                        {set [review_move_number] 0}
                        {set [review_move_count] $move_count}
                        {set [review_move_hit_count] 0}
                        {set [in_review_section] 0}
                     }
                  )
               }
            }
         )
         (move_passed
            ($move $detect_frac)
            {do
               ($is_rest {$move is_rest})
               ($done 0)
               ($rating {detect_frac_to_rating $detect_frac})
               ($rating_idx {detect_frac_to_rating_idx $detect_frac})
               {unless $is_rest
                  {meta_performer move_passed $move $detect_frac {$this get_type}}
                  {switch [state]
                     (learn
                        {$this send_world_message $rating 1.0e-3}
                        {if {&& {size [move_beats]} {>= [learn_move_index] 0}}
                           {$this learn_move_completed $detect_frac}
                        }
                     )
                     (review
                        {$this send_world_message $rating 1.0e-3}
                        {if {&& {! [in_review_section]} {>= $beat [start_beat]}}
                           {set [in_review_section] 1}
                        }
                        {if {&& [in_review_section] {>= $beat [end_beat]}}
                           {set [in_review_section] 0}
                        }
                        {if [in_review_section]
                           {if {>= $detect_frac {rating_to_detect_frac move_awesome}}
                              {'++' [review_move_hit_count]}
                              {if $hud_panel
                                 {$hud_panel set_review_percentage
                                    {/ {'*' 100 [review_move_hit_count]} [review_move_count]}
                                 }
                              }
                           }
                           {'++' [review_move_number]}
                           {do
                              ($next_state_index
                                 {$this next_performance_state_index $rating_idx [performance_index]}
                              )
                              {$this set_performance_state_index $next_state_index 1}
                           }
                           {if {== [review_move_number] [review_move_count]}
                              {do
                                 ($percentage {/ [review_move_hit_count] [review_move_count]})
                                 ($category
                                    {$this calc_result_category
                                       $percentage
                                       [review_result_category_thresholds]
                                    }
                                 )
                                 ($delta {- $category [learn_section_result_category]})
                                 ($delta_cue {elem [review_result_category_delta_cues] {'+' $delta 3}})
                                 ($result_cue {elem [review_result_category_cues] $category})
                                 ($cue
                                    {if_else {== $delta_cue ""}
                                       $result_cue
                                       $delta_cue
                                    }
                                 )
                                 {$this excitement {'+' $category 1}}
                                 {if $hud_panel
                                    {$hud_panel play $cue}
                                    {if [vo_spew]
                                       {printf
                                          "VO: Review end. %d / %d moves hit for %d%%. Cat. %d. Delta %d. Playing %s.cue.\n"
                                          [review_move_hit_count]
                                          [review_move_count]
                                          {int {'*' 100 $percentage}}
                                          $category
                                          $delta
                                          $cue
                                       }
                                    }
                                 }
                                 {'+=' [review_total_move_count] [review_move_count]}
                                 {'+=' [review_total_move_hit_count] [review_move_hit_count]}
                              }
                              {set [section_credits] 0}
                              {set [section_credits_max] 0}
                           }
                        }
                     )
                  }
               }
            }
         )
         (set_loop
            ($start $end)
            {audio set_loop $start $end}
            {$this update_margins}
         )
         (update_margins
            {if $hamdirector
               {do
                  ($practice_start)
                  ($practice_end)
                  ($loop_start)
                  ($loop_end)
                  {audio get_loop_beats $loop_start $loop_end}
                  {$hamdirector practice_beats $practice_start $practice_end}
                  {$hamdirector set
                     start_loop_margin
                     {round {/ {- $practice_start $loop_start} 4}}
                  }
                  {$hamdirector set
                     end_loop_margin
                     {round {/ {- $loop_end $practice_end} 4}}
                  }
               }
            }
         )
         (cached_loop_cams ())
         (loop_cam_index 0)
         (change_camera_angle
            {if $hamdirector
               {do
                  ($dir {$hamdirector get cur_world})
                  ($picked "")
                  ($cam_list ())
                  {if_else {<= [loop_cam_index] 0}
                     {do
                        {$dir iterate
                           HamCamShot
                           $shot
                           {if {== {$shot get category} PRACTICE}
                              {set $picked $shot}
                           }
                        }
                     }
                     {do
                        ($index [loop_cam_index])
                        {if {! {size [cached_loop_cams]}}
                           {$dir iterate
                              HamCamShot
                              $shot
                              {if {== {$shot get category} PRACTICE_LOOP}
                                 {push_back [cached_loop_cams] $shot}
                              }
                           }
                           {sort [cached_loop_cams]}
                        }
                        {-- $index}
                        {if {size [cached_loop_cams]}
                           {set $index {mod $index {size [cached_loop_cams]}}}
                           {set $picked {elem [cached_loop_cams] $index}}
                        }
                     }
                  }
                  {if $picked
                     {$hamdirector force_shot {$picked name}}
                  }
                  {'++' [loop_cam_index]}
               }
            }
         )
         (skills_bonus
            ($bonus_name)
            {$this send_world_message $bonus_name 0}
         )
         (set_learn_state
            ($learn_state)
            {set [learn_state] $learn_state}
            {switch [learn_state]
               (fast_track
                  {if {!= [performance_state] skills_learn_awesome}
                     {$this set_learn_performance_state skills_learn_high}
                  }
               )
               (counting {$this set_learn_performance_state skills_learn_high})
               (slow_down {$this set_learn_performance_state skills_learn_low})
            }
         )
         (set_learn_performance_state
            ($performance_state)
            {if {!= [performance_state] $performance_state}
               {if {== $performance_state skills_learn_high}
                  {switch [performance_state]
                     (skills_learn_low {$this send_world_message skills_learn_high_upto 2.0e-2})
                     (skills_learn_awesome
                        {$this send_world_message skills_learn_high_downto 2.0e-2}
                     )
                  }
               }
               {set [performance_state] $performance_state}
               {$this send_world_message [performance_state] 2.0e-2}
            }
         )
         (award_current_moves
            ($award)
            {do
               ($timeline {$hud_panel find dynamic_hud})
               ($profile {profile_mgr get_profile {user_mgr get_active_user}})
               ($old_award 0)
               ($move_name '')
               ($first 1)
               ($move_beat {elem [move_beats] 0})
               {foreach $b [move_beats]
                  {set $move_name {$hamdirector beat_to_movename $b}}
                  {if $profile
                     {set $old_award {$profile get_award $move_name}}
                     {$profile set_award $move_name $award}
                     {if {&& $first $timeline}
                        {script_task
                           0
                           (delay 2.8)
                           (script {$timeline set_move_award $move_beat $award 1 1})
                        }
                        {$timeline set_move_award $move_beat $award 1 0}
                        {$timeline set_move_award_fade $move_beat 0}
                     }
                  }
                  {set $first 0}
               }
            }
         )
         (is_section_boundry
            ($step_index)
            {cond
               ({== $step_index 0} 1)
               ({[section] get (steps $step_index boundry)} 1)
               ({!= {[section] get (steps {- $step_index 1} type)} learn} 1)
               (1 0)
            }
         )
         (reset
            {$this common_reset}
            {if $hamdirector
               {$hamdirector set difficulty {meta_performer get_difficulty}}
            }
            {set [learn_mode_locked] 0}
            {set [learn_move_index] -1}
            {resize [move_beats] 0}
            {$this setup_section}
            {set [num_steps] {[section] size (steps)}}
            {if {&& $hamdirector {> [num_steps] 0}}
               {$hamdirector set practice_start {[section] get (steps 0 start)}}
               {$hamdirector set practice_end {[section] get (steps 0 end)}}
            }
            {set [step_index] -1}
            {set [state] start}
            {set [step_complete] 1}
            {set [played_first_express] 0}
            {set [played_first_3rep] 0}
            {if $hamdirector
               {$this send_world_message skills_mode 0}
            }
            {set [performance_index] -1}
            {$this set_performance_state_index [initial_performance_state_index] 0}
            {set [performance_state] ''}
            {$this set_learn_performance_state skills_learn_high}
            {$this setup_fade_anim}
            {$this set_slow 0 0}
            {if $hud_panel
               {{{$hud_panel find sound_bank}
                     find
                     music_level.fade} set
                  level
                  [base_music_volume]
               }
               {do
                  ($start_beat {- {$this beat_from_tag {[section] get (steps 0 start)}} 4})
                  {set $start_beat
                     {$this determine_seq_start_beat nar_express_long $start_beat 0}
                  }
                  {if {> $start_beat 0}
                     {audio set_loop $start_beat 1.0e-2}
                  }
               }
            }
            {set [loop_cam_index] 0}
            {set [section_credits] 0}
            {set [section_credits_max] 0}
            {set [in_review_section] 0}
            {set [review_total_move_count] 0}
            {set [review_total_move_hit_count] 0}
            {gameplay_event_scheduler reset}
            {$hamdirector reset_detection}
         )
         (beat
            {do
               {cond
                  ({==
                        $beat
                        [start_beat]}
                     {$this start_step}
                  )
                  ({<=
                        {abs
                           {-
                              $beat
                              {-
                                 [end_beat]
                                 4}}}
                        1.0e-3}
                     {$this end_step}
                  )
               }
               {if {== 3 {mod $beat 4}}
                  {do
                     ($timeline {$hud_panel find dynamic_hud})
                     ($next_move_beat {'+' $beat 1})
                     ($flashcard {$timeline find_flashcard $next_move_beat})
                     {if {&& {find_elem [move_beats] $next_move_beat} $flashcard}
                        {{$flashcard find beat.anim} animate (range -480 1920)}
                     }
                  }
               }
            }
            kDataUnhandled
         )
         (setup_fade_anim
            {if $hud_panel
               {do
                  ($prop_anim {$hud_panel find fade_to_midi.anim 0})
                  ($sound_bank {$hud_panel find sound_bank})
                  ($prop_anim {$sound_bank find skills_cross_fade.anim})
                  {if $prop_anim
                     {$prop_anim add_keys midi_player (active) 3}
                     {$prop_anim set_key_val midi_player (active) 0 0}
                     {$prop_anim set_key_val midi_player (active) 60 1}
                  }
               }
            }
         )
         (cheat_skip_section
            {set [step_complete] 1}
            {$this stream_jump}
            {game jump {max {beat_to_ms {- [start_beat] 8}} 0}}
            {$this set_slow 0 0}
         )
      )
      (multiplayer
         #include multiplayer.dta
         COMMON_GAME_HANDLERS
         (last_scored_move_index -1)
         (player_index 0)
         (phases ())
         (phase_index 0)
         (state start)
         (loop_start -1)
         (loop_end -1)
         (section none)
         (star_thresholds ())
         (star_display "")
         (best_possible_score -1)
         (player_1_record ())
         (inactive_score 0)
         (inactive_state_index 0)
         (init
            {$this common_init}
            {$this setup_phases}
            {master add_sink $this (beat stream_jump)}
            {if {$hamdirector get_world}
               {{$hamdirector get_world} add_sink
                  $this
                  (
                     (player_freestyle_start on_freestyle_start)
                     (player_freestyle_stop on_freestyle_stop)
                  )
               }
            }
            {if $hamdirector
               {$this send_world_message multiplayer_mode 0}
               {set [star_display]
                  {{$hamdirector get cur_world} find score_star_display 0}
               }
               {$this send_world_message flash_cards_visible 0}
            }
            {set [best_possible_score]
               {$this calculate_best_possible_score [multiplayer_score_chart]}
            }
            {do
               ($best {'*' 2 [best_possible_score]})
               {resize [star_thresholds] 0}
               {foreach $elem [star_threshold_percentages]
                  {push_back [star_thresholds] {int {/ {'*' $elem $best} 100}}}
               }
            }
            {$this reset}
            {depth_buffer set_gameplay_state 10}
         )
         (end
            {if {>= [phase_index] {- {size [phases]} 1}}
               {{game main_performer} win 0}
               {audio clear_loop}
            }
         )
         (reset
            {$this common_reset}
            {set [last_scored_move_index] -1}
            {set [performance_index] -1}
            {$this set_performance_state_index [initial_performance_state_index] 0}
            {set [score] 0}
            {set [inactive_score] [score]}
            {set [inactive_state_index] [performance_index]}
            {$hamdirector set difficulty {meta_performer get_difficulty}}
            {game jump 0}
            {$this set_phase 0}
            {$hamdirector set player_freestyle 0}
            {$hamdirector set cam_switch_freestyle 1}
            {$hamdirector reset_detection}
         )
         (move_passed
            ($move $detect_frac)
            {do
               ($done 0)
               ($base_points 0)
               ($old_score [score])
               ($move_index {$hud_panel get cur_move_index})
               ($rating {detect_frac_to_rating $detect_frac})
               ($rating_idx {detect_frac_to_rating_idx $detect_frac})
               {if
                  {&&
                     {! {$move is_rest}}
                     $hud_panel
                     {!= [last_scored_move_index] $move_index}
                     {< {$hud_panel beat_from_move_index $move_index} [loop_end]}
                  }
                  {$this send_world_message $rating 1.0e-3}
                  {meta_performer move_passed $move $detect_frac {$this get_type}}
                  {set $base_points {elem [multiplayer_score_chart] $rating_idx}}
                  {set [last_scored_move_index] $move_index}
                  {do
                     ($points {'*' [score_multiplier] $base_points})
                     ($last_stars [num_stars])
                     ($player_index
                        {if_else {== [state] player_1}
                           1
                           2
                        }
                     )
                     {if {> $points 0}
                        {set [score] {'+' [score] $points}}
                        {$hud_panel set_score
                           [score]
                           $old_score
                           [best_possible_score]
                           $player_index
                        }
                        {if
                           {&&
                              {> [inactive_score] 0}
                              {<= $old_score [inactive_score]}
                              {> [score] [inactive_score]}
                           }
                           {$this send_world_message {symbol {sprint [state] "_surpass"}} 0}
                        }
                        {set [num_stars] {$this calculate_stars {'+' [score] [inactive_score]}}}
                        {do
                           ($full {int [num_stars]})
                           ($partial {- [num_stars] $full})
                           {if [star_display]
                              {[star_display] set_star_progress $full $partial}
                              {if {> $full {int $last_stars}}
                                 {[star_display] set_star_complete {int $last_stars}}
                                 {$this send_world_message star_earned 0}
                              }
                           }
                        }
                        {handle ($world points_awarded)}
                     }
                     {if_else {== [state] player_1}
                        {insert_elem [player_1_record] 0 [score]}
                        {if {size [player_1_record]}
                           {do
                              ($ghost_score {last_elem [player_1_record]})
                              {resize [player_1_record] {- {size [player_1_record]} 1} 0}
                              {$hud_panel set_ghost_score $ghost_score [best_possible_score]}
                           }
                        }
                     }
                     {do
                        ($next_state_index
                           {$this next_performance_state_index $rating_idx [performance_index]}
                        )
                        {$this set_performance_state_index $next_state_index 1}
                     }
                  }
               }
            }
         )
         (set_phase
            ($index)
            {if {< $index {size [phases]}}
               {set [phase_index] $index}
               {do
                  ($data {elem [phases] [phase_index]})
                  ($event)
                  {set [state] {elem $data 0}}
                  {set [loop_start] {elem $data 1}}
                  {set [loop_end] {elem $data 2}}
                  {set [section] {elem $data 3}}
                  {switch [state]
                     (player_1
                        {set $event player_1_turn}
                        {if {&& {== [section] first} $hud_panel}
                           {$hud_panel feedback_instruction player_1_turn}
                           {$hamdirector set difficulty {meta_performer get_difficulty}}
                           {resize [player_1_record] 0}
                        }
                     )
                     (player_2
                        {set $event player_2_turn}
                        {if {== [section] second}
                           {$hamdirector set cam_switch_freestyle 1}
                        }
                     )
                  }
                  {if $hamdirector
                     {$this send_world_message $event 0}
                     {if {== [section] first}
                        {$hamdirector set player_freestyle 0}
                        {$hamdirector set cam_switch_freestyle 1}
                     }
                  }
                  {if {'||' {== [state] player_1} {== [state] player_2}}
                     {do
                        ($temp_score [score])
                        ($temp_index [performance_index])
                        {set [score] [inactive_score]}
                        {$this set_performance_state_index [inactive_state_index] 0}
                        {set [inactive_score] $temp_score}
                        {set [inactive_state_index] $temp_index}
                     }
                  }
                  {set [last_scored_move_index] -1}
                  {if_else {>= $index {- {size [phases]} 1}}
                     {audio clear_loop}
                     {do
                        ($nextdata {elem [phases] {'+' $index 1}})
                        {audio set_loop {elem $nextdata 1} [loop_end]}
                     }
                  }
               }
            }
         )
         (stream_jump
            {$this set_phase {'+' [phase_index] 1}}
            {$hamdirector reset_detection}
         )
         (on_freestyle_start
            {do
               ($next_phase_state
                  {if_else {== [phase_index] {- {size [phases]} 1}}
                     end
                     {elem {elem [phases] {'+' [phase_index] 1}} 0}
                  }
               )
               {skeleton_identifier look_for_player {== $next_phase_state player_2}}
            }
            {$hud_panel feedback_instruction dance_together}
            {if $hamdirector
               {$this send_world_message dance_together 0}
               {if {&& {== [state] player_1} {== [section] first}}
                  {$hamdirector set cam_switch_freestyle 0}
               }
            }
            {photo_taker init
               {'+' {$this freestyle_start_beat} 8}
               16
               {- {master event_beat freestyle_end} 10}
               {- {master event_beat freestyle_end} 4}
            }
            {gesture_mgr start_snapshot_batch}
            kDataUnhandled
         )
         (on_freestyle_stop
            {skeleton_identifier stop_looking_for_player}
            kDataUnhandled
         )
         (mp_stream_on
            {if {&& {== [state] player_1}}
               {$this set_mp_stream 1}
            }
            kDataUnhandled
         )
         (mp_stream_off {$this set_mp_stream 0} kDataUnhandled)
         (music_start
            {$this send_world_message beat_animation_start 0}
            kDataUnhandled
         )
         (music_end
            {if {>= [phase_index] {- {size [phases]} 1}}
               {do
                  ($event {symbol {sprint "game_over_stars_" {int [num_stars]}}})
                  {$this send_world_message $event 0}
                  {$this send_world_message beat_animation_stop 0}
               }
            }
            kDataUnhandled
         )
         (beat
            {if
               {&&
                  {== $beat {- [loop_end] 2}}
                  {== [state] player_1}
                  {== [section] second}
               }
               {$hamdirector set cam_switch_freestyle 0}
               {$hamdirector set player_freestyle 1}
            }
            {if {== $beat 1}
               {skeleton_identifier look_for_player 0}
            }
            {if {== $beat 10}
               {skeleton_identifier stop_looking_for_player}
            }
            {do
               ($next_player)
               ($next_section)
               ($marker_trigger "")
               {if {== $beat {int {- {master event_beat freestyle_end} 16}}}
                  {if_else {< {'+' [phase_index] 1} {size [phases]}}
                     {do
                        ($next_phase_data {elem [phases] {'+' [phase_index] 1}})
                        {set $next_player {elem $next_phase_data 0}}
                        {set $next_section {elem $next_phase_data 3}}
                     }
                     {do
                        {set $next_player player_2}
                        {set $next_section second}
                     }
                  }
                  {switch $next_player
                     (player_1
                        {$hud_panel feedback_instruction player_1_turn}
                        {$hamdirector set difficulty {meta_performer get_difficulty}}
                        {if {== $next_section second}
                           {set $marker_trigger
                              {find_obj $hud_panel multiplayer_meter player_1_place_marker.trig}
                           }
                        }
                     )
                     (player_2
                        {$hud_panel feedback_instruction player_2_turn}
                        {$hamdirector set difficulty {meta_performer get_secondary_difficulty}}
                        {if {== $next_section second}
                           {set $marker_trigger
                              {find_obj $hud_panel multiplayer_meter player_2_place_marker.trig}
                           }
                        }
                     )
                  }
                  {if $marker_trigger
                     {$marker_trigger trigger}
                  }
               }
            }
         )
         (setup_phases
            {resize [phases] 0}
            {do
               ($freestyle_start {master event_beat freestyle_start})
               ($freestyle_end {master event_beat freestyle_end})
               ($last_song_beat {seconds_to_beat {/ {master song_duration_ms} 1000}})
               ($mp_start {master event_beat mp_start})
               ($mp_end {master event_beat mp_end})
               ($move)
               ($b 0)
               {if
                  {'||'
                     {< $freestyle_start 0}
                     {< $freestyle_end 0}
                     {< $mp_start 0}
                     {< $mp_end 0}
                  }
                  {notify "This song doesn't appear to be authored for multiplayer."}
               }
               {if {&& $hud_panel {>= $freestyle_start 0}}
                  {set [phases]
                     {array
                        (
                           (player_1 0 $freestyle_end first)
                           (player_2 $mp_start $freestyle_end first)
                           (player_1 $freestyle_end $mp_end second)
                           (player_2 $freestyle_start $mp_end second)
                        )
                     }
                  }
               }
            }
         )
         (cheat_skip_phase {game jump {beat_to_ms {- [loop_end] 16}}})
      )
   )
)