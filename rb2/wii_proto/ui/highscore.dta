#define HIGHSCORE_PANEL_HANDLERS
((file
      "high_scores_og.milo")
   (init_hs
      {$this update_titles})
   (update_titles
      {event.lbl
         set_localized
         ""}
      {song.lbl
         set_localized
         ""}
      {type.lbl
         set_localized
         ""}
      {song.lbl
         set_localized
         {song_mgr
            song_name
            {highscores get_song_sym}}}
      {event.lbl
         set
         text_token
         {highscores get_diff_sym}}
      {type.lbl
         set_localized
         {highscores get_track_type_char}})
   (update_list
      {do
         ($num_scores
            {highscores get_num_scores})
         ($pos 1)
         {if
            {> $num_scores 0}
            {do
               {foreach_int
                  $i
                  1
                  {'+' $num_scores 1}
                  {if
                     {==
                        $i
                        [high_score]}
                     {'++' $pos}}
                  {if
                     {<= $pos 10}
                     {{sprintf
                           "player%d.lbl"
                           $pos}
                        set
                        text_token
                        {highscores get_name $i}}
                     {{sprintf
                           "score%d.lbl"
                           $pos}
                        set_localized
                        {fmt_score
                           {highscores get_score $i}}}}
                  {'++' $pos}}}
            {if
               {==
                  [high_score]
                  0}
               {do
                  {set
                     [just_continue]
                     TRUE}
                  {helpbar
                     set_config
                     ((start helpbar_continue))}}}}
         {if
            {!
               {> $pos 10}}
            {foreach_int
               $i
               $pos
               11
               {if
                  {!
                     {==
                        $i
                        [high_score]}}
                  {do
                     {{sprintf
                           "player%d.lbl"
                           $i}
                        set_showing
                        FALSE}
                     {{sprintf
                           "score%d.lbl"
                           $i}
                        set_showing
                        FALSE}
                     {{sprintf
                           "rank%d.lbl"
                           $i}
                        set_showing
                        FALSE}}}}}}))
{new
   UIPanel
   highscores_lower3rd_panel
   (file
      "high_scores_og_lower3rd.milo")}
{new
   UIPanel
   highscores_qp_panel
   (player_num
      {session_mgr get_leader_num})
   (back_button_exits FALSE)
   (high_score 0)
   (name_label player1.lbl)
   (score_label score1.lbl)
   (name_active FALSE)
   (last_used_name
      (""))
   (randomize_button '')
   (back_button '')
   (player_name '')
   (screen_name
      "highscores")
   HIGHSCORE_PANEL_HANDLERS
   NAMING_PANEL_HANDLERS
   (enter
      {if_else
         {gamemode is_solo}
         {do
            ($pcfg
               {game
                  get_player_config
                  [player_num]})
            {set
               [high_score]
               {highscores
                  is_solo_high_score
                  {meta_performer completed_song}
                  {$pcfg get_track_sym}
                  {$pcfg get_difficulty_sym}
                  {{beatmatch main_performer}
                     score}}}}
         {set
            [high_score]
            {highscores
               is_mp_high_score
               {meta_performer completed_song}
               {{beatmatch main_performer}
                  score}}}}
      {$this update_titles}
      {if
         {!
            {==
               [high_score]
               0}}
         {do
            {set
               [player_name]
               {{game
                     get_player
                     [player_num]}
                  player_name}}
            {set
               [name_label]
               {sprintf
                  "player%d.lbl"
                  [high_score]}}
            {set
               [score_label]
               {sprintf
                  "score%d.lbl"
                  [high_score]}}
            {[score_label]
               set_localized
               {fmt_score
                  {{beatmatch main_performer}
                     score}}}
            {set
               [name_active]
               TRUE}
            {$this init_name}
            {$this update_name}}}
      {$this update_list})
   (SELECT_START_MSG
      {ui goto_screen complete_screen})
   (accept_name
      {if_else
         {gamemode is_solo}
         {do
            ($pcfg
               {game
                  get_player_config
                  [player_num]})
            {highscores
               save_solo_high_score
               {meta_performer completed_song}
               {$pcfg get_track_sym}
               {$pcfg get_difficulty_sym}
               {{beatmatch main_performer}
                  score}
               {$this get_name}}}
         {do
            {highscores
               save_mp_high_score
               {meta_performer completed_song}
               {{beatmatch main_performer}
                  score}
               {$this get_name}}}}
      {$this stop_naming}
      {resize
         [last_used_name]
         0}
      {insert_elems
         [last_used_name]
         0
         [current_name]}
      {script_task
         kTaskUISeconds
         (name
            {sprint
               "Score_Delay_Task"})
         (delay 3)
         (script
            {ui goto_screen complete_screen})})
   (extra_function)
   (JOYPAD_CONNECT_MSG
      {if
         {==
            $player_num
            {session_mgr get_leader_num}}
         {if_else
            {== $connected FALSE}
            {do
               ($task_name
                  {sprint
                     "Score_Delay_Task"})
               {if
                  {exists $task_name}
                  {delete $task_name}
                  {helpbar
                     set_config
                     ('' helpbar_continue)}}}
            {do
               {if
                  {==
                     [kill]
                     TRUE}
                  {script_task
                     kTaskUISeconds
                     (name
                        {sprint
                           "Score_Delay_Task"})
                     (delay 0.5)
                     (script
                        {helpbar
                           set_config
                           ('' helpbar_continue)})}}}}})
   (cancel_name)
   (button_press)}
{new
   BandScreen
   highscores_screen
   (panels endgame_background_panel highscores_qp_panel highscores_lower3rd_panel)
   (focus highscores_qp_panel)
   (helpbar
      ((confirm helpbar_select)
         (start helpbar_continue)))
   (back complete_screen)
   (enter)}
{new
   UIPanel
   highscores_list_panel
   (high_score 0)
   HIGHSCORE_PANEL_HANDLERS
   (enter
      {$this init_hs}
      {$this update_list})
   (BUTTON_DOWN_MSG
      {switch $button}
      kDataUnhandled)}
{new
   BandScreen
   highscores_list_screen
   (panels meta endgame_background_panel highscores_list_panel highscores_lower3rd_panel)
   (focus highscores_list_panel)
   (helpbar
      ((cancel helpbar_back)))
   (back
      {do
         {song_offer_provider set is_leaderboards TRUE}
         song_select_screen})}
{new
   UIPanel
   highscore_seltrack_panel
   (file
      "highscore_seltrack.milo")
   (focus guitar.btn)
   (enter)
   (SELECT_MSG
      {highscores
         set_track_type
         {switch
            $component
            (guitar.btn kTrackGuitar)
            (bass.btn kTrackBass)
            (drums.btn kTrackDrum)
            (vocals.btn kTrackVocals)
            (band.btn kTrackBand)}}
      {if_else
         {== $component band.btn}
         {do
            {highscores set_diff_sym easy}
            {song_offer_provider set is_leaderboards TRUE}
            {ui goto_screen song_select_screen}}
         {do
            {ui goto_screen highscore_seldiff_screen}}})}
{new
   BandScreen
   highscore_seltrack_screen
   (panels meta highscore_seltrack_panel)
   (focus highscore_seltrack_panel)
   (helpbar
      ((cancel helpbar_back)
         (confirm helpbar_select)))
   (back main_community_screen)}
{new
   UIPanel
   highscore_seldiff_panel
   (file
      "highscore_seldiff.milo")
   (focus easy.btn)
   (SELECT_MSG
      {highscores
         set_diff_sym
         {switch
            $component
            (easy.btn easy)
            (medium.btn medium)
            (hard.btn hard)
            (expert.btn expert)}}
      {song_offer_provider set is_leaderboards TRUE}
      {ui goto_screen song_select_screen})}
{new
   BandScreen
   highscore_seldiff_screen
   (panels meta highscore_seldiff_panel)
   (focus highscore_seldiff_panel)
   (helpbar
      ((cancel helpbar_back)
         (confirm helpbar_select)))
   (back highscore_seltrack_screen)}