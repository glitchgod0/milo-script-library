#define MAIN_SCREEN_DATA_UNHANDLED (
   {if_else {main_panel is_focused_component $component}
      kDataUnhandled
      TRUE
   }
)
#define MAIN_SCREEN_H2H_HANDLERS (
   (BUTTON_DOWN_MSG
      {if_else {== $button kPad_Tri}
         {do
            {main_panel pop_focus}
            kDataUnhandled
         }
         {if_else {main_panel is_playing_anim}
            {if_else {< {main_panel anim_frames_left} 15.0}
               kDataUnhandled
               TRUE
            }
            kDataUnhandled
         }
      }
   )
   (helpbar
      (
         (cancel helpbar_back)
         (confirm helpbar_confirm)
      )
   )
)
#define MAIN_SCREEN_HANDLERS (MAIN_SCREEN_H2H_HANDLERS (SELECT_MSG MAIN_SCREEN_DATA_UNHANDLED))
#define MAIN_SUBSCREEN_PANEL_HANDLER (
   (finish_load {$this set_loaded_dir_shared {main_panel loaded_dir}})
   (unload {$this unset_loaded_dir})
   (is_loaded {main_panel is_loaded})
   (reset_focus TRUE)
   (TRANSITION_COMPLETE_MSG
      {helpbar set_limit_to_player_num -1}
      {helpbar set_limit_to_session FALSE}
      {helpbar set_config
         (
            (cancel helpbar_back)
            (confirm helpbar_confirm)
         )
      }
      {if
         {&&
            {! {ui in_transition}}
            {'||'
               {== {ui current_screen} main_community_screen}
               {== {ui current_screen} options_screen}
            }
         }
         {autosave}
      }
      kDataUnhandled
   )
)
{new UIPanel
   fx
   (file "../splash/fx_standard_og.milo")
   (fix_for_ratio
      {switch {rnd aspect}
         (kRegularAspect
            {movie_09.mesh set_showing TRUE}
            {movie_15.mesh set_showing TRUE}
            {movie_17.mesh set_showing TRUE}
            {movie_09_wide.mesh set_showing FALSE}
            {movie_15_wide.mesh set_showing FALSE}
            {movie_17_wide.mesh set_showing FALSE}
         )
         (kWidescreenAspect
            {movie_09.mesh set_showing FALSE}
            {movie_15.mesh set_showing FALSE}
            {movie_17.mesh set_showing FALSE}
            {movie_09_wide.mesh set_showing TRUE}
            {movie_15_wide.mesh set_showing TRUE}
            {movie_17_wide.mesh set_showing TRUE}
         )
      }
   )
   (fade_in
      {$this fix_for_ratio}
      {movie_09.mnm animate}
      {movie_15.mnm animate}
   )
   (fade_out
      {$this fix_for_ratio}
      {movie_17.mnm animate}
      {movie_09.mnm animate}
   )
}
{new MainPanel
   main_panel
   (file "main.milo")
   (reset_focus TRUE)
   (ignore_input FALSE)
   (update_leaderboard_buttons
      #ifdef HX_PS3
      {$this disable lb_tow.btn}
      {$this disable lb_scoreduel.btn}
      {lb_tow.btn set_showing FALSE}
      {lb_scoreduel.btn set_showing FALSE}
      #else
      {if_else {leaderboards get_offline}
         {do
            {$this disable lb_tow.btn}
            {$this disable lb_scoreduel.btn}
         }
         {do
            {$this enable lb_tow.btn}
            {$this enable lb_scoreduel.btn}
         }
      }
      #endif
   )
   (update_button_status
      {$this disable webcode_ps3.btn}
      {webcode_ps3.btn set_showing FALSE}
      {$this disable checkinvites.btn}
      {checkinvites.btn set_showing FALSE}
      {$this disable managefriends.btn}
      {managefriends.btn set_showing FALSE}
   )
   (set_gameplay_button
      #ifdef HX_PS3
      {$this disable gameplay.btn}
      {gameplay.btn set_showing FALSE}
      {options.anim set_frame 1}
      #endif
      #ifdef HX_XBOX
      {options.anim set_frame 0}
      #endif
   )
   (load {content_mgr start_refresh})
   (enter
      {meta_performer reset_songs}
      {community_panel update_button_status}
      {if {!= {ui current_screen} main_leaderboard_screen}
         {session clear}
      }
      {song_provider set_highlighted_ix -1}
      {song_provider set_setlist_mode FALSE}
      {tour clear_performer}
      {gamemode set_mode init}
      {if
         {'||'
            {== {meta_loading_main_screen get was_called} TRUE}
            {== {meta_loading_screen get was_called} TRUE}
         }
         {meta_loading_main_screen set was_called FALSE}
         {meta_loading_screen set was_called FALSE}
         {meta music_stop}
      }
      {meta music_start}
      {BandHighlight.hlit register_focus}
      {if {== {ui previous_screen} meta_loading}
         {{meta meta_music} start}
      }
      {session add_sink $this signin_changed}
      {profile_mgr add_sink $this profile_activated_msg}
      {memcardmgr add_sink $this save_load_all_complete_msg}
      {session clear}
      {tour clear_performer}
      {gamemode set_mode init}
      {set [msg_last_frame] 0}
      {game reset_config}
      {band_ui_sink set post_matchmaking FALSE}
      {synth release_mics}
      {ui hide_error_dialog}
      {game set leader_num -1}
   )
   (exit
      {fx fade_out}
      {platform_mgr remove_sink $this connection_status_changed}
      {BandHighlight.hlit unregister_focus}
   )
   (TRANSITION_COMPLETE_MSG {set [ignore_input] FALSE})
   (BUTTON_DOWN_MSG
      {if_else {== [ignore_input] FALSE}
         {do
            {switch $button
               (kPad_Tri
                  {if {== $button kPad_Tri}
                     {main_panel pop_focus}
                  }
               )
               (kPad_X {set [ignore_input] TRUE})
            }
            kDataUnhandled
         }
         TRUE
      }
   )
   (SELECT_MSG
      {switch $component
         (quickplay.btn
            {main_panel push_focus}
            {ui goto_screen main_quickplay_screen}
         )
         (tour.btn
            {main_panel push_focus}
            {ui goto_screen main_tour_screen}
         )
         (tutorial.btn
            {synth reset_mics_changed}
            {main_panel push_focus}
            {if_else {gamecfg is_instrument_connected drum}
               {drum_freestyle.btn set_state kComponentNormal}
               {drum_freestyle.btn set_state kComponentDisabled}
            }
            {ui goto_screen training_menu_screen}
         )
         (options.btn
            {$this set_gameplay_button}
            {main_panel push_focus}
            {ui goto_screen options_screen}
         )
         (community.btn
            {main_panel push_focus}
            {goto_after_network_connect main_community_screen FALSE}
         )
      }
   )
}
{new UIPanel menu_background_movie_panel (file "../movie_ps2.milo")}
{new BandScreen
   main_screen
   (panels meta menu_background_movie_panel main_panel fx)
   (focus main_panel)
   (back splash_screen)
   (access_all
      {$this enable {main_panel find solo.btn}}
      {$this enable {main_panel find multi.btn}}
      {$this enable {main_panel find tutorial.btn}}
   )
   MAIN_SCREEN_HANDLERS
   (enter {gamemode set_mode init})
   (TRANSITION_COMPLETE_MSG
      {helpbar set_limit_to_player_num -1}
      {helpbar set_limit_to_session FALSE}
      {helpbar set_config
         (
            (cancel helpbar_back)
            (confirm helpbar_confirm)
         )
      }
      {if {&& {! {ui in_transition}} {== {ui current_screen} $this}}
         {autosave}
      }
      kDataUnhandled
   )
}
{new SessionPanel
   main_quickplay_panel
   MAIN_SUBSCREEN_PANEL_HANDLER
   (focus solo.btn)
   (exit {synth reset_mics_changed})
   (SELECT_START_MSG
      {if_else {gamecfg is_missing_mic $player_num FALSE}
         {do
            {vocalist_must_have_mic_screen set message solo_vocalist_needs_mic}
            {ui push_screen vocalist_must_have_mic_screen}
         }
         {do
            {switch $component
               (solo.btn
                  {band_ui_sink set post_matchmaking TRUE}
                  {gamemode set_mode qp_solo $player_num}
                  {$this wait_for_session_ready}
                  {game set leader_num $player_num}
                  {session_mgr add_local_player
                     $player_num
                     {gamecfg get_controller_type_from_controller $player_num}
                  }
               )
               (band_coop.btn
                  {gamemode set_mode qp_coop_local $player_num}
                  {ui goto_screen {gamemode get matchmaking_screen}}
               )
               (score_duel.btn
                  {gamemode set_mode h2h_score_duel_local}
                  {set $dest_screen {gamemode get matchmaking_screen}}
                  {ui goto_screen $dest_screen}
               )
               (tug_of_war.btn
                  {gamemode set_mode h2h_tug_of_war_local}
                  {set $dest_screen {gamemode get matchmaking_screen}}
                  {ui goto_screen $dest_screen}
               )
            }
         }
      }
   )
   (session_ready
      {gamecfg auto_assign_missing_slots}
      {do
         ($player_num {gamemode get player_num})
         {helpbar set_limit_to_player_num $player_num}
         {if_else {gamemode get auto_choose_char}
            {do
               {set_char_from_controller $player_num}
               {ui goto_screen qp_selsong_screen FALSE}
            }
            {ui goto_screen {gamemode get matchmaking_screen} FALSE}
         }
      }
   )
}
{new BandScreen
   main_quickplay_screen
   (panels
      meta
      menu_background_movie_panel
      main_panel
      main_quickplay_panel
      fx
   )
   (focus main_quickplay_panel)
   (back main_screen)
   MAIN_SCREEN_HANDLERS
   (TRANSITION_COMPLETE_MSG {set $last {ui previous_screen}} kDataUnhandled)
}
#define MAIN_H2H_PANEL_HANDLERS (
   MAIN_SUBSCREEN_PANEL_HANDLER
   (SELECT_MSG
      {do
         ($dest_screen
            {if_else {gamemode get ranked}
               {gamemode get main_mode_screen}
               {gamemode get matchmaking_screen}
            }
         )
         #ifdef HX_EE
         {do
            {main_panel push_focus}
            {if_else {! {gamemode get local_network}}
               {goto_after_network_connect $dest_screen TRUE}
               {ui goto_screen $dest_screen}
            }
         }
         #else
         {if_else {! {gamemode get local_network}}
            {goto_and_push_focus_after_network_connect $dest_screen TRUE}
            {do
               {main_panel push_focus}
               {ui goto_screen $dest_screen}
            }
         }
         #endif
      }
   )
)
{new UIPanel
   main_score_duel_panel
   MAIN_H2H_PANEL_HANDLERS
   #ifdef HX_WII
   (allow_home_menu TRUE)
   #endif
   (enter
      #ifdef HX_XBOX
      {if {profile_mgr get_all_unlocked}
         {player_match_scoreduel.btn set_state kComponentDisabled}
         {ranked_match_scoreduel.btn set_state kComponentDisabled}
         {ranked_match_scoreduel.btn set_showing FALSE}
      }
      #else
      {ranked_match_scoreduel.btn set_state kComponentDisabled}
      {ranked_match_scoreduel.btn set_showing FALSE}
      #endif
   )
}
#ifndef HX_EE
{new BandScreen
   main_score_duel_screen
   (panels meta main_panel main_score_duel_panel)
   (focus main_score_duel_panel)
   (back main_quickplay_screen)
   MAIN_SCREEN_H2H_HANDLERS
   (SELECT_MSG
      {gamemode set_mode
         {switch $component
            (local_multi_scoreduel.btn h2h_score_duel_local)
            (player_match_scoreduel.btn h2h_score_duel_unranked)
            (ranked_match_scoreduel.btn h2h_score_duel_ranked)
         }
         $player_num
      }
      MAIN_SCREEN_DATA_UNHANDLED
   )
}
#endif
{new UIPanel
   main_tug_of_war_panel
   MAIN_H2H_PANEL_HANDLERS
   #ifdef HX_WII
   (allow_home_menu TRUE)
   #endif
   (enter
      #ifdef HX_XBOX
      {if {profile_mgr get_all_unlocked}
         {player_match_tow.btn set_state kComponentDisabled}
         {ranked_match_tow.btn set_state kComponentDisabled}
         {ranked_match_tow.btn set_showing FALSE}
      }
      #else
      {ranked_match_tow.btn set_state kComponentDisabled}
      {ranked_match_tow.btn set_showing FALSE}
      #endif
   )
}
#ifndef HX_EE
{new BandScreen
   main_tug_of_war_screen
   (panels meta main_panel main_tug_of_war_panel)
   (focus main_tug_of_war_panel)
   (back main_quickplay_screen)
   MAIN_SCREEN_H2H_HANDLERS
   (SELECT_MSG
      {gamemode set_mode
         {switch $component
            (local_multi_tow.btn h2h_tug_of_war_local)
            (player_match_tow.btn h2h_tug_of_war_unranked)
            (ranked_match_tow.btn h2h_tug_of_war_ranked)
         }
         $player_num
      }
      MAIN_SCREEN_DATA_UNHANDLED
   )
}
#endif
{new UIPanel
   main_h2h_seldiff_panel
   MAIN_SUBSCREEN_PANEL_HANDLER
   (difficulty
      {elem
         (DIFF_SYMBOLS)
         {elem
            {find $syscfg tour default_difficulty}
            1
         }
      }
   )
   (enter {$this set_focus {sprint [difficulty] ".btn"}})
   (SELECT_MSG
      {set [difficulty] {basename {$component name}}}
      {ui goto_screen {gamemode get matchmaking_screen}}
   )
}
#ifndef HX_EE
   #ifndef NOWIINETWORKING
   {new BandScreen
      main_h2h_tug_of_war_ranked_seldiff_screen
      (panels meta main_panel main_h2h_seldiff_panel)
      (focus main_h2h_seldiff_panel)
      (back main_tug_of_war_screen)
      MAIN_SCREEN_H2H_HANDLERS
      (SELECT_MSG
         {gamemode set_mode h2h_tug_of_war_ranked $player_num}
         MAIN_SCREEN_DATA_UNHANDLED
      )
   }
   {new BandScreen
      main_h2h_score_duel_ranked_seldiff_screen
      (panels meta main_panel main_h2h_seldiff_panel)
      (focus main_h2h_seldiff_panel)
      (back main_score_duel_screen)
      MAIN_SCREEN_H2H_HANDLERS
      (SELECT_MSG
         {gamemode set_mode h2h_score_duel_ranked $player_num}
         MAIN_SCREEN_DATA_UNHANDLED
      )
   }
   {new UIPanel
      main_bandcoop_panel
      #ifdef HX_WII
      (allow_home_menu TRUE)
      #endif
      MAIN_SUBSCREEN_PANEL_HANDLER
      (enter
         {if {profile_mgr get_all_unlocked}
            {online.btn set_state kComponentDisabled}
         }
      )
      (SELECT_MSG
         {gamemode set_mode
            {switch $component
               (local_bandcoop.btn qp_coop_local)
               (online_bandcoop.btn qp_coop_online)
            }
            $player_num
         }
         {if_else {! {gamemode get local_network}}
            {goto_after_network_connect {gamemode get matchmaking_screen} TRUE}
            {ui goto_screen {gamemode get matchmaking_screen}}
         }
      )
   }
   {new BandScreen
      main_bandcoop_screen
      (panels meta main_panel main_bandcoop_panel)
      (focus main_bandcoop_panel)
      (back main_quickplay_screen)
      MAIN_SCREEN_HANDLERS
      (enter {char_cache cache_update})
   }
   #endif
#endif
{new SessionPanel
   main_worldtour_panel
   MAIN_SUBSCREEN_PANEL_HANDLER
   #ifdef HX_WII
   (allow_home_menu TRUE)
   #endif
   (SELECT_MSG
      {band_ui_sink set post_matchmaking TRUE}
      {switch $component
         (local.btn
            {do
               {gamemode set_mode tour_band $player_num}
               {game set leader_num $player_num}
               {gamemode set_mode tour_band $player_num}
               {ui goto_screen tour_band_char_screen FALSE}
            }
         )
         (challenges.btn
            {do
               {gamemode set_mode tour_challenges $player_num}
               {game set leader_num $player_num}
               {gamemode set_mode tour_challenges $player_num}
               {ui goto_screen tour_band_char_screen FALSE}
            }
         )
      }
   )
}
{new BandScreen
   main_tour_screen
   (panels
      meta
      menu_background_movie_panel
      main_panel
      main_worldtour_panel
      fx
   )
   (focus main_worldtour_panel)
   (back main_screen)
   MAIN_SCREEN_HANDLERS
}
{new UIPanel
   attract_movie_panel
   (file "../world/transition_video.milo")
   (moviefinished FALSE)
   (prev_idx -1)
   (enter
      #ifdef HX_EE
      {set $moviefinished FALSE}
      {set $rand_idx {random_int 0 2}}
      {while {== $rand_idx $prev_idx}
         {set $rand_idx {random_int 0 2}}
      }
      {switch $rand_idx
         (0
            {video_file.mov set
               movie_file
               {sprintf "videos/letthereberock_attract.pss"}
            }
         )
         (1 {video_file.mov set movie_file {sprintf "videos/intro.pss"}})
      }
      {set $prev_idx $rand_idx}
      {video_file.mov animate}
      #endif
   )
   (poll
      {if {&& {! $moviefinished} {video_file.mov is_movie_done}}
         {do
            {set $moviefinished TRUE}
            {ui goto_screen splash_screen}
         }
      }
   )
   (BUTTON_DOWN_MSG
      {if {&& {'||' {== $button kPad_Start} {== $button kPad_X}} {! $moviefinished}}
         {do
            {set $moviefinished TRUE}
            {video_file.mov set_movie_done 1}
            {ui goto_screen splash_screen}
         }
      }
   )
}
{new UIPanel
   attract_overlay_panel
   (file "attract_overlay.milo")
   #ifdef USE_OLD_ASPECT_OBJECTS
   (enter
      {if_else {== {rnd aspect} kWidescreenAspect}
         {do
            {widescreen_left.tnm set_frame 1}
            {widescreen_right.tnm set_frame 1}
         }
         {do
            {widescreen_left.tnm set_frame 0}
            {widescreen_right.tnm set_frame 0}
         }
      }
   )
   #endif
}
{new BandScreen
   attract_screen
   (panels meta attract_movie_panel attract_overlay_panel)
   (focus attract_movie_panel)
   (helpbar ((min_height 0)))
   (enter {{meta meta_music} stop})
}
{new BandScreen
   main_leaderboard_signin_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (helpbar ((confirm helpbar_confirm)))
   (must_not_be_a_guest TRUE)
   (must_be_online TRUE)
   (must_be_multiplayer_capable FALSE)
   (handle_sign_outs FALSE)
   (limit_user_signin TRUE)
   (on_signed_into_guest)
   (on_not_online {ui pop_screen})
   (on_signed_in
      {leaderboards set_offline FALSE}
      {ui pop_screen}
   )
   (enter
      {dialog_panel set_custom
         {localize main_leaderboard_need_to_signin}
         {localize main_leaderboard_signin_button}
         {localize main_leaderboard_cancel_button}
         opt1.btn
      }
   )
   (exit {input_mgr clear_user})
   (SELECT_MSG
      {switch $component
         (opt1.btn {platform_mgr signin 1})
         (opt2.btn
            {community_panel set ok_with_leaderboards_offline TRUE}
            {ui pop_screen}
         )
      }
   )
}
{new BandScreen
   main_leaderboard_offline_screen
   (panels dialog_panel)
   (helpbar ((confirm helpbar_confirm)))
   (enter
      {dialog_panel set_ok
         {cond
            ({platform_mgr is_connected}
               {localize leaderboards_not_available_rock_central}
            )
            (TRUE {localize leaderboards_not_available_connection})
         }
      }
   )
   (SELECT_MSG
      {community_panel set ok_with_leaderboards_offline TRUE}
      {ui pop_screen}
   )
}
{new UIPanel main_lower3rd_panel}
{new UIPanel movie_panel}
{new UIPanel pi_splash_panel (file "../startup_pi.milo")}
{new BandScreen
   pi_splash_screen
   (panels pi_splash_panel)
   (TRANSITION_COMPLETE_MSG
      {script_task kTaskUISeconds
         (delay 2)
         (script {ui goto_screen ea_splash_screen})
      }
   )
}
{new UIPanel ea_splash_panel (file "../startup_ea.milo")}
{new BandScreen
   ea_splash_screen
   (panels meta fx ea_splash_panel)
   (enter {meta music_stop})
   (TRANSITION_COMPLETE_MSG
      {script_task kTaskUISeconds
         (delay 4)
         (script {ui goto_screen $first_screen})
      }
   )
}
#ifdef HX_EE
{new UIPanel
   intro_overlay_panel
   (file "attract_overlay.milo")
   (enter
      {if_else {== {rnd aspect} kWidescreenAspect}
         {do
            {widescreen_left.tnm set_frame 1}
            {widescreen_right.tnm set_frame 1}
         }
         {do
            {widescreen_left.tnm set_frame 0}
            {widescreen_right.tnm set_frame 0}
         }
      }
   )
}
{new BandScreen
   intro_to_attract_screen
   (panels meta_loading fx)
   (helpbar ((min_height 0)))
   (TRANSITION_COMPLETE_MSG
      {if {splash_panel is_loaded}
         {splash_panel unload}
      }
      {if {splash_screen is_loaded}
         {splash_screen unload}
      }
      {ui goto_screen intro_screen}
   )
}
#endif
#include ../splash/splash.dta