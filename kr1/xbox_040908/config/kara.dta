#macros.dta

(mem
   (disable_mgr FALSE)
)

(system
   (language english)  ; language setting when running on the tool
)

(ui
   (shared_rnd_files
		"ui/common.rnd"
      "ui/dialog.rnd"
   )

   ; frames for the enter/exit transition animations.  Note that
   ; it is legal to have a decreasing frame interval, and to
   ; re-use part of it.  For example, enter could go 0->100 and
   ; exit 100->0.

   (panel_enter_start_frame 0.0)
   (panel_enter_stop_frame 240.0)
   (panel_exit_start_frame 0.0)
   (panel_exit_stop_frame 240.0)
)

(karaui
   #karaui.dta
)

( meta
   #meta.dta
)

(locale
   (english ui/english_screens.dta ui/english_messages.dta)
   (french ui/french_screens.dta ui/french_messages.dta)
   (italian ui/italian_screens.dta ui/italian_messages.dta)
   (german ui/german_screens.dta ui/german_messages.dta)
   (spanish ui/spanish_screens.dta ui/spanish_messages.dta)
)

(db
   #db.dta
)

(game
   #game.dta
   (autoload_ltf FALSE)  ;; set to TRUE when editing LTF files.
)

(arena
   #arena.dta
)

(charsys
   #charsys.dta
)

(kara
   (skip_meta FALSE) ; if true, game boots up in game
)

(spew
   ;;(level (channels 2) (outputs mem))

   ;;(leveldata (outputs console) )
   ;;(game (outputs console) )
   ;;(level (channels 1) (outputs console) )
   ;;(db)
   ;;(synth_ee (outputs console) (channels 0))  
   ;;(gameui (outputs console))
   ;;(meta (outputs console))
   ;;(karapanels (outputs console))
   ;;(keyboard (outputs console))
   ;;(ui (outputs console))
   ;;(panel (outputs console))
   ;;(screen (outputs console) (channels 0))
   ;;(songpreview (outputs console) (channels 0))
  ;;(charanims)

)

(rnd
   (show_timers FALSE)
   (panes_showing FALSE)
   (panes
      (game (lines 1) (showing TRUE))
      (arena (lines 4) (showing TRUE))
   )
)

(long-cheats

   ((  kPad_Square  kPad_Circle  kPad_Square  kPad_Circle
       kPad_DUp     kPad_DDown   kPad_DLeft   kPad_DRight   
       kPad_L2      kPad_L2 ) 
      {the_meta cheat unlock_all_songs} )

   ((  kPad_Square  kPad_Circle  kPad_Square  kPad_Square
       kPad_DUp     kPad_DDown   kPad_DLeft   kPad_DDown
       kPad_R2      kPad_R2 ) 
      {the_meta cheat unlock_all_venues} )

   ((  kPad_Circle  kPad_Square  kPad_Square  kPad_Circle
       kPad_DUp     kPad_DDown   kPad_DLeft   kPad_DRight
       kPad_R2      kPad_L2 )
      {the_meta cheat unlock_all_outfits} )

   ((  kPad_Circle  kPad_Circle  kPad_Square  kPad_Square
       kPad_DUp     kPad_DLeft   kPad_DRight  kPad_DUp
       kPad_L2      kPad_R2 )
      {the_meta cheat unlock_all_videos} )

   ((  kPad_L2      kPad_L2      kPad_R2      kPad_L2
       kPad_DUp     kPad_DLeft   kPad_DUp     kPad_DRight
       kPad_Circle  kPad_Circle )
      {the_meta cheat unlock_all_characters} )

   ((  kPad_L2      kPad_R2      kPad_L2      kPad_R2
       kPad_DDown   kPad_DDown   kPad_DUp     kPad_DUp
       kPad_DDown   kPad_Circle )
      {toggle_gender_bend} )

   ;----- singer head cheats

   ((  kPad_DDown   kPad_DDown   kPad_DUp     kPad_DUp
       kPad_DLeft   kPad_DRight  kPad_DDown   kPad_DUp
       kPad_Square  kPad_Circle )
      {the_arena set_head_mod small_head} )

   ((  kPad_DUp     kPad_DDown   kPad_DUp     kPad_DDown
       kPad_DRight  kPad_DRight  kPad_DLeft   kPad_DLeft 
       kPad_Square kPad_Circle )
      {the_arena set_head_mod big_head} )

   ((  kPad_DUp     kPad_DUp     kPad_DDown   kPad_DDown
       kPad_DLeft   kPad_DRight  kPad_DLeft   kPad_DRight
       kPad_Square  kPad_Circle )
      {the_arena set_head_mod big_eyes} )

   ;----- singer mat cheats

   ((  kPad_DRight  kPad_DLeft   kPad_DRight  kPad_DLeft
       kPad_DUp     kPad_DUp     kPad_DDown   kPad_DDown
       kPad_Square  kPad_Circle )
      {the_arena set_singer_mat char_glass.mat} )

   ((  kPad_DLeft   kPad_DRight  kPad_DLeft   kPad_DRight
       kPad_DDown   kPad_DDown   kPad_DUp     kPad_DUp
       kPad_Square  kPad_Circle )
      {the_arena set_singer_mat char_oilslick.mat} )

   ((  kPad_L2      kPad_R2      kPad_DRight  kPad_L2
       kPad_DUp     kPad_DUp     kPad_DLeft   kPad_DUp
       kPad_Circle kPad_Square )
      {the_arena set_singer_mat char_t2.mat} )

   ((  kPad_R2      kPad_L2      kPad_L2      kPad_R2
       kPad_Circle  kPad_Square  kPad_DRight  kPad_DRight   
       kPad_L2      kPad_L2 )
      {the_arena set_singer_mat char_wraith.mat} )

   ;----- mic cheats

   ((  kPad_R2      kPad_R2      kPad_L2      kPad_L2
       kPad_DDown   kPad_DDown   kPad_DRight  kPad_DLeft
       kPad_Square  kPad_DUp )
      {the_arena set_singer_mic mic_banana.mesh} )

   ((  kPad_R2      kPad_R2      kPad_L2      kPad_L2
       kPad_DDown   kPad_DDown   kPad_Square  kPad_Circle
       kPad_Square  kPad_Circle )
      {the_arena set_singer_mic mic_toothbrush.mesh mic_toothbrush.part} )

   ;----- audio cheats

;   ((  kPad_R2      kPad_R2      kPad_R2      kPad_R2
;       kPad_DUp     kPad_DLeft   kPad_DRight  kPad_DDown
;       kPad_Square  kPad_Square )
;      {the_game tough_crowd_cheat} )
)

(quick-cheats
   ; left shift mode: L1, L2, L3
   (left 
      ;; cheats definited in default.dta:
      (kPad_DLeft  {heap_report}) ; generate a summary report
      (kPad_DRight {heap_dump})   ; generate a full heap dump
      (kPad_DDown  {the_rnd toggle_heap})        ; toggle heap display
      (kPad_Select {the_rnd screen_dump screendump})
      (kPad_R3     {the_rnd save_objects debug.rnd})
      (kPad_Tri    {the_rnd toggle_text_panes})
;      (kPad_Square {the_rnd debug_dma "-w -S -nogifverbose -novifcodes -novifregs -novifverbose -novifstats -nodisunpack -nodisdirect -nodmastats" debug_dma.txt})
      (kPad_Square {the_rnd toggle_stats})
      (kPad_X      {the_rnd toggle_timers})
   )

   ; right shift mode: R1, R2, R3
   (right
      (kPad_DUp    {the_game toggle_param "pitch_detection"} )
      (kPad_DLeft  {the_game change_excitement -0.1} )
      (kPad_DRight {the_game change_excitement  0.1} )
      (kPad_Select {the_hud mode_hack})
      (kPad_Square {toggle_burn_in_cheat})
      (kPad_Start  {the_meta cheat unlock_all})
      (kPad_L3     {level mute_cheat})
      (kPad_Tri    {the_game no_mic_cheat})
   )

   ; keyboard cheats
   (keyboard
      ("w" {camtest_begin})
      ("e" {camtest_end})
      ("d" {camtest_stage})
      ("s" {camtest_crowd})
      ("q" {camtest_l_char})
      ("r" {camtest_r_char})
      ("a" {camtest_l_corner})
      ("f" {camtest_r_corner})
      ("z" {camtest_crowdtest})

      (KB_UP {the_game mod_param    1})
      (KB_DOWN {the_game mod_param  -1})
      ("y" {the_game reg_param "meter_factor" 0.05})
      ("u" {the_game reg_skill_param "slop" 5})
      ("i" {the_game reg_skill_param "pitch_margin" .1})
      ("o" {the_game reg_skill_param "hit_multiplier" .1})
      ("p" {the_game reg_skill_param "note_length_factor" .1})

      ("0" {the_synth set_mic_earpiece {! {the_synth get_mic_earpiece}}})
      ("1" {the_crowd_audio test_transient 0 0})
      ("2" {the_crowd_audio test_transient 1 0})
      ("3" {the_crowd_audio test_transient 2 0})
      ("4" {the_crowd_audio test_transient 3 0})
      ("5" {the_crowd_audio test_transient 4 0})
      ("!" {the_crowd_audio test_transient 0 1})
      ("@" {the_crowd_audio test_transient 1 1})
      ("#" {the_crowd_audio test_transient 2 1})
      ("$" {the_crowd_audio test_transient 3 1})
      ("%" {the_crowd_audio test_transient 4 1})

      (KB_F1 {the_game win_cheat     0} )
      (KB_F2 {the_game win_cheat  3000} )
      (KB_F3 {the_game win_cheat 15000} )
      (KB_F4 {the_game win_cheat 35000} )
      (KB_F5 {the_game finale_cheat} )

      ;; memory card testing (temporary)
      (KB_F6 {mctest 1} )
      (KB_F7 {mctest 2} )
      (KB_F8 {mctest 3} )
      (KB_F9 {mctest 4} )
   )
)

(timer
; rndps2 timers 
   ; setup
   ; flush

; rndobj timers 
   ; anim
   ; updateworldxfm
   ; draw
   cycle ; needed for budget
   sync  ; needed for budget

; Budget items
   game
   venue
   "(venue fx)"
   chars
   hud
   unmeasured

; Game timers
   ; game_sys

; HUD timers
   ; hud_note_poll
   ; hud_poll
   ; hud_draw

; Arena timers
   ; arena_poll
   ; arena_draw
   ; venue_poll
   ; venue_draw

; CharSys timers
   ; charsys_cull
   ; charsys_poll
   ; char_blend
   ; charsys_draw

; Misc.
   ; array_exec
)

(os
   (date_format usa)
)

##default.dta

