#include seldiff_pane.dta
#include startgame_pane.dta
#include character_select_pane.dta
#include venue_select_pane.dta
#include crew_select_pane.dta
#include weight_input_pane.dta
#include readywait_pane.dta
#include locked_pane.dta
{new MultiUserGesturePanel
   multiuser_panel
   (file "multiuser.milo")
   (focus right_hand_p1.hnl)
   (s0_pane seldiff_pane)
   (s1_pane seldiff_pane)
   (s0_pending_pane '')
   (s1_pending_pane '')
   (s0_ready FALSE)
   (s1_ready FALSE)
   (s0_char '')
   (s0_crew '')
   (s0_outfit 1)
   (s0_diff easy)
   (s1_char '')
   (s1_crew '')
   (s1_outfit 1)
   (s1_diff easy)
   (s0_present FALSE)
   (s1_present FALSE)
   (enter
      {player_provider_1 add_sink $this (on_player_present_change) 0 FALSE}
      {player_provider_2 add_sink $this (on_player_present_change) 0 FALSE}
      {hamprovider set ui_nav_mode shell_multi}
      {$this clear_ready}
      {meta_performer set_default_crews}
      {song.lbl set_song_name {meta_performer get_song}}
      {$this update_players}
   )
   (exit
      {player_provider_1 remove_sink $this on_player_present_change}
      {player_provider_2 remove_sink $this on_player_present_change}
   )
   (set_selection
      ($side $index)
      {switch $side
         (0 {right_hand_p1.hnl scroll_to_index $index $index})
         (1 {right_hand_p2.hnl scroll_to_index $index $index})
      }
   )
   (get_selection_index
      ($side)
      {switch $side
         (0 {right_hand_p1.hnl get_selected})
         (1 {right_hand_p2.hnl get_selected})
      }
   )
   (on_player_present_change {$this refresh_lists})
   (poll
      {do
         ($is_side0_present {$this is_skeleton_present 0})
         ($is_side1_present {$this is_skeleton_present 1})
         ($changed FALSE)
         {if {!= $is_side0_present [s0_present]}
            {set [s0_present] $is_side0_present}
            {set $changed TRUE}
         }
         {if {!= $is_side1_present [s1_present]}
            {set [s1_present] $is_side1_present}
            {set $changed TRUE}
         }
         {if {== $changed TRUE}
            {$this refresh_lists}
         }
      }
   )
   (swap_players
      {do
         ($old_s0_pane [s0_pane])
         ($old_s1_pane [s1_pane])
         ($old_s0_ready [s0_ready])
         ($old_s1_ready [s1_ready])
         ($old_s0_char [s0_char])
         ($old_s0_crew [s0_crew])
         ($old_s0_outfit [s0_outfit])
         ($old_s0_diff [s0_diff])
         ($old_s0_present [s0_present])
         ($old_s1_char [s1_char])
         ($old_s1_crew [s1_crew])
         ($old_s1_outfit [s1_outfit])
         ($old_s1_diff [s1_diff])
         ($old_s1_present [s1_present])
         {$this set_pane 0 $old_s1_pane}
         {$this set_pane 1 $old_s0_pane}
         {$this set s0_ready $old_s1_ready}
         {$this set s1_ready $old_s0_ready}
         {$this set s0_char $old_s1_char}
         {$this set s0_crew $old_s1_crew}
         {$this set s0_outfit $old_s1_outfit}
         {$this set s0_diff $old_s1_diff}
         {$this set s0_present $old_s1_present}
         {$this set s1_char $old_s0_char}
         {$this set s1_crew $old_s0_crew}
         {$this set s1_outfit $old_s0_outfit}
         {$this set s1_diff $old_s0_diff}
         {$this set s1_present $old_s0_present}
         {$this refresh_ui}
      }
   )
   (get_side_from_component
      ($component)
      {switch $component
         (right_hand_p1.hnl 0)
         (left_hand_p1.hnl 0)
         (right_hand_p2.hnl 1)
         (left_hand_p2.hnl 1)
         -1
      }
   )
   (NAV_SELECT_MSG
      {do
         ($side {$this get_side_from_component $component})
         {switch $side
            (0 {[s0_pane] select $side $name $index})
            (1 {[s1_pane] select $side $name $index})
         }
      }
   )
   (NAV_SELECT_DONE_MSG
      {do
         ($side {$this get_side_from_component $component})
         {switch $side
            (0
               {if {!= [s0_pending_pane] ''}
                  {$this set_pane 0 [s0_pending_pane]}
               }
            )
            (1
               {if {!= [s1_pending_pane] ''}
                  {$this set_pane 1 [s1_pending_pane]}
               }
            )
         }
      }
   )
   (NAV_HIGHLIGHT_MSG
      {if {'||' {== $component right_hand_p1.hnl} {== $component right_hand_p2.hnl}}
         {do
            ($side {$this get_side_from_component $component})
            {switch $side
               (0 {[s0_pane] highlight $side $name $index})
               (1 {[s1_pane] highlight $side $name $index})
            }
         }
      }
   )
   (BUTTON_DOWN_MSG
      {switch $action
         (kAction_Cancel
            {run_flow left_select.flow}
            {do
               ($side
                  {$this get_side_from_component {{$this loaded_dir} get focus_component}}
               )
               {switch $side
                  (0
                     {[s0_pane] select $side back 0}
                     {if {!= [s0_pending_pane] ''}
                        {$this set_pane 0 [s0_pending_pane]}
                     }
                  )
                  (1
                     {[s1_pane] select $side back 0}
                     {if {!= [s1_pending_pane] ''}
                        {$this set_pane 1 [s1_pending_pane]}
                     }
                  )
               }
            }
         )
         kDataUnhandled
      }
   )
   (clear_ready
      {set [s0_ready] FALSE}
      {set [s1_ready] FALSE}
   )
   (is_ready
      ($side)
      {switch $side
         (0 {&& [s0_ready] {$this is_skeleton_present $side}})
         (1 {&& [s1_ready] {$this is_skeleton_present $side}})
      }
   )
   (can_enter_game
      {'||'
         {&& {$this is_ready 0} {$this is_ready 1}}
         {&&
            {$this is_ready 0}
            {! {$this is_skeleton_present 1}}
            {! {gamemode get requires_2_players}}
            {! {shell_input in_controller_mode}}
         }
         {&&
            {$this is_ready 1}
            {! {$this is_skeleton_present 0}}
            {! {gamemode get requires_2_players}}
            {! {shell_input in_controller_mode}}
         }
      }
   )
   (update_player
      ($side)
      {do
         ($player_idx {$this get_player_index $side})
         {$this set_player_character
            $side
            {gamedata getp $player_idx character}
            {gamedata getp $player_idx outfit}
         }
         {$this set_player_difficulty
            $side
            {difficulty_to_sym
               {gamedata getp $player_idx difficulty}
            }
         }
      }
   )
   (update_players
      {$this update_player 0}
      {$this update_player 1}
      {venue.lbl set_token_fmt song_venue {gamedata get venue}}
   )
   (update_difficulties
      {$this refresh_player_difficulty 0}
      {$this refresh_player_difficulty 1}
   )
   (set_player_character
      ($side $character $outfit)
      {switch $side
         (0
            {set [s0_char] $character}
            {set [s0_outfit] $outfit}
         )
         (1
            {set [s1_char] $character}
            {set [s1_outfit] $outfit}
         )
      }
      {$this refresh_player_character $side}
   )
   (set_player_crew
      ($side $crew)
      {switch $side
         (0 {set [s0_crew] $crew})
         (1 {set [s1_crew] $crew})
      }
      {$this refresh_player_crew $side}
   )
   (set_player_difficulty
      ($side $difficulty)
      {switch $side
         (0 {set [s0_diff] $difficulty})
         (1 {set [s1_diff] $difficulty})
      }
      {$this refresh_player_difficulty $side}
   )
   (refresh_player_character
      ($side)
      {do
         ($character [s0_char])
         ($outfit [s0_outfit])
         {if {== $side 1}
            {set $character [s1_char]}
            {set $outfit [s1_outfit]}
         }
         {if_else {== $character ''}
            {$this set_character_shown $side FALSE}
            {do
               ($player_idx {$this get_player_index $side})
               {$this set_character_shown $side TRUE}
               {$this update_character_mesh $side $player_idx $character $outfit}
               {$this set_character_name $side $character}
            }
         }
      }
   )
   (refresh_player_crew
      ($side)
      {do
         ($crew [s0_crew])
         {if {== $side 1}
            {set $crew [s1_crew]}
         }
         {do
            ($player_idx {$this get_player_index $side})
            {$this update_crew_mesh_for_side $side $player_idx $crew}
         }
      }
   )
   (refresh_player_difficulty
      ($side)
      {switch $side
         (0
            {diff_p1.lbl set text_token [s0_diff]}
            {if_else {== [s0_pane] seldiff_pane}
               {diff_p1.lbl set showing FALSE}
               {diff_p1.lbl set showing TRUE}
            }
         )
         (1
            {diff_p2.lbl set text_token [s1_diff]}
            {if_else {== [s1_pane] seldiff_pane}
               {diff_p2.lbl set showing FALSE}
               {diff_p2.lbl set showing TRUE}
            }
         )
      }
   )
   (set_character_shown
      ($side $shown)
      {switch $side
         (0 {char_p1.grp set showing $shown})
         (1 {char_p2.grp set showing $shown})
      }
   )
   (update_character_mesh
      ($side $player_index $character $outfit)
      {switch $side
         (0
            {$this update_char_mesh
               char_p1.mesh
               $side
               $player_index
               $character
               $outfit
            }
         )
         (1
            {$this update_char_mesh
               char_p2.mesh
               $side
               $player_index
               $character
               $outfit
            }
         )
      }
   )
   (update_crew_mesh_for_side
      ($side $player_index $crew)
      {switch $side
         (0 {$this update_crew_mesh crew_p1.mesh $side $player_index $crew})
         (1 {$this update_crew_mesh crew_p2.mesh $side $player_index $crew})
      }
   )
   (set_character_name
      ($side $character)
      {switch $side
         (0 {char_p1.lbl set text_token $character})
         (1 {char_p2.lbl set text_token $character})
      }
   )
   (set_character_taken
      ($side $taken)
      {switch $side
         (0 {taken_p1.lbl set showing $taken})
         (1 {taken_p2.lbl set showing $taken})
      }
   )
   (set_ready
      ($side $ready)
      {switch $side
         (0 {set [s0_ready] $ready})
         (1 {set [s1_ready] $ready})
      }
   )
   (disable_list
      ($side)
      {{$this get_navlist $side} disable_navigation}
   )
   (enable_list
      ($side)
      {{$this get_navlist $side} enable_navigation}
   )
   (set_provider
      ($side $provider)
      {{$this get_navlist $side} set_provider $provider}
   )
   (set_list_dir
      ($side $resource)
      {{$this get_navlist $side} set list_dir_resource $resource}
   )
   (get_navlist
      ($side)
      {switch $side
         (0 right_hand_p1.hnl)
         (1 right_hand_p2.hnl)
      }
   )
   (show_warning
      ($show)
      {warning.lbl set showing $show}
   )
   (set_pending_pane
      ($side $pane)
      {switch $side
         (0 {set [s0_pending_pane] $pane})
         (1 {set [s1_pending_pane] $pane})
      }
   )
   (set_pane
      ($side $pane)
      {switch $side
         (0
            {set [s0_pending_pane] ''}
            {[s0_pane] exit $side}
            {set [s0_pane] $pane}
            {multiuser.ep set s0_pane $pane}
         )
         (1
            {set [s1_pending_pane] ''}
            {[s1_pane] exit $side}
            {set [s1_pane] $pane}
            {multiuser.ep set s1_pane $pane}
         )
      }
      {$this update_difficulties}
      {$pane enter $side}
      {{$this get_navlist $side} play_enter_anim}
   )
   (refresh_lists
      {right_hand_p1.hnl refresh}
      {right_hand_p2.hnl refresh}
      {$this refresh_player_character 0}
      {$this refresh_player_character 1}
      {$this refresh_player_difficulty 0}
      {$this refresh_player_difficulty 1}
   )
   (refresh_ui
      {$this update_provider_player_indices}
      {$this refresh_lists}
      {$this update_players}
      {[s0_pane] refresh 0}
      {[s1_pane] refresh 1}
   )
   (start_game
      {enter_game.flow activate}
      {if {gamemode in_mode campaign}
         {hamprovider set crew_character {meta_performer get_character_for_song}}
         {hamprovider set crew_complete {meta_performer is_current_crew_complete}}
      }
      {enter_gameplay}
   )
   (back_out
      {hamprovider set ui_nav_mode shell}
      {ui go_back_screen {gamemode get seldiff_back_screen}}
   )
   (handle_invalid_select {invalid_select.flow activate})
}
{new HamScreen
   multiuser_screen
   (panels meta background_panel multiuser_panel)
   (focus multiuser_panel)
   (enter
      {multiuser_panel show_warning FALSE}
      {multiuser_panel set_pane 0 seldiff_pane}
      {multiuser_panel set_pane 1 seldiff_pane}
   )
}
{new HamScreen
   campaign_multiuser_screen
   (panels meta background_panel multiuser_panel)
   (focus multiuser_panel)
   (enter
      {multiuser_panel show_warning FALSE}
      {multiuser_panel set_pane 0 startgame_pane}
      {multiuser_panel set_pane 1 startgame_pane}
   )
}