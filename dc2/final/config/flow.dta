(PropertyEventProvider
   (types
      (HamProvider
         (editor
            (gameplay_mode
               symbol
               (list (practice perform dance_battle))
               (help "The current gameplay mode")
               (refresh skills_mode learn_slowdown)
            )
            (skills_mode
               symbol
               (list (start learn review recap_results))
               (help "Which skills mode am I in")
               (hide {!= [gameplay_mode] practice})
            )
            (learn_slowdown
               bool
               (help "are we in slowdown mode?")
               (hide {'||' {!= [gameplay_mode] practice} {!= [skills_mode] learn}})
            )
            (performance
               symbol
               (list (low high awesome))
               (help "how well your doing")
            )
            (game_stage
               symbol
               (list (intro playing omg freestyle outro))
               (help "current stage of the game")
            )
            (cam_player_config
               int
               (list PLAYER_FLAGS)
               (help "Player config for cameras")
            )
            (dance_battle_config
               int
               (list ("kHamPlayer0" "kHamPlayer1" "kHamPlayerBoth"))
               (help "Player configuration for dance battle")
            )
            (freestyle bool (help "Is the game in freestyle"))
            (flash_cards_visible bool (help "Are the flash cards visible?"))
            (photo_flip_visible bool (help "Is the photo flip visible?"))
            (stars_earned int (help "how many stars have you earned?"))
            (score_multiplier int (help "what is the score multiplier?"))
            (player_leader int (help "which player is leading?"))
            (beat_animation bool (help "should we play beat animations?"))
            (beat int (help "current beat number in the measure"))
            (use_char_projection
               bool
               (help "Use the render to texture for player 1 instead of rendering it.")
            )
            (shellmusic_on bool (help "Is the shell music on?"))
            (language
               symbol
               (list TURBO_SUPPORTED_LANGUAGES)
               (help "What language are we using?")
            )
            (voice_available bool (help "Is voice available?"))
            (voice_commander_tip_temporary
               bool
               (help "Is the voice commander tip not persistent on this screen?")
            )
            (voice_commander_tip_lower
               bool
               (help "Shift the voice tip lower to account for having no back button?")
            )
            (use_gamertag_bg bool (help "Should we be using the gamertag background?"))
            (ui_nav_player int (help "Which player is in control of the ui?"))
            (ui_nav_mode
               symbol
               (list
                  (init
                     calibration
                     title
                     shell
                     shell_multi
                     movie
                     game
                     loading
                     results
                     pause
                     practice_shell
                     store
                  )
               )
               (help "The current mode for the ui")
            )
            (metamode
               symbol
               (list
                  (init
                     perform
                     practice
                     playlist_perform
                     fitness_playlist
                     dance_battle
                     campaign_perform
                     campaign_practice
                  )
               )
               (help "The current metamode (gamemode in cpp code...)")
            )
            (video_replay bool (help "are we currently doing a video replay?"))
            (tool_mode
               bool
               (help "true if we're in a tool mode (milo or milo tool)")
               (read_only TRUE)
            )
            (is_last_song
               bool
               (help "Is this the last song (always yes if not a playlist)")
            )
            (finale bool (help "Is the game in the campaign's finale?"))
            (robot_a_damage
               int
               (range 0 5)
               (help "how damaged should the robota appear?")
            )
            (robot_b_damage
               int
               (range 0 5)
               (help "how damaged should the robotb appear?")
            )
            (crew_character
               symbol
               (help "Which character's song are we playing in campaign?")
            )
            (crew_complete bool (help "Is this crew complete in campaign?"))
            (golden_boomy bool (help "Is golden boomy unlocked?"))
            (in_controller_mode bool (help "Is controller mode on?"))
            (byo_bid bool (help "Custom Break it Down session?"))
            (suppress_recap_results_text
               bool
               (help "Hide Break it Down recap results text?")
            )
            (has_skeleton bool (help "Are we tracking any skeletons?"))
            (skipped_song bool (help "Did we just skip a song?"))
         )
         (skills_mode start)
         (learn_slowdown FALSE)
         (performance high)
         (flash_cards_visible TRUE)
         (photo_flip_visible FALSE)
         (stars_earned 0)
         (score_multiplier 1)
         (player_leader 0)
         (beat_animation TRUE)
         (beat 1)
         (freestyle FALSE)
         (game_stage playing)
         (cam_player_config kHamPlayerBoth)
         (use_char_projection FALSE)
         (shellmusic_on FALSE)
         (language eng)
         (voice_available TRUE)
         (voice_commander_tip_temporary FALSE)
         (voice_commander_tip_lower FALSE)
         (use_gamertag_bg FALSE)
         (ui_nav_player 0)
         (ui_nav_mode init)
         (dance_battle_config kHamPlayerBoth)
         (metamode init)
         (gameplay_mode perform)
         (video_replay FALSE)
         (tool_mode FALSE)
         (finale FALSE)
         (is_last_song FALSE)
         (robot_a_damage 0)
         (robot_b_damage 0)
         (crew_character '')
         (crew_complete FALSE)
         (golden_boomy FALSE)
         (in_controller_mode FALSE)
         (byo_bid FALSE)
         (suppress_recap_results_text FALSE)
         (has_skeleton FALSE)
         (skipped_song FALSE)
         (supported_events
            (start
               intro_start
               intro_end
               music_start
               music_end
               halfbeat
               quarterbeat
               downbeat
               dance_together
               prepare_photo_take
               final_pose
               final_pose_photo
               (photo_take
                  (editor
                     (photo_take_index int (help "Current photo number being taken"))
                     (photo_take_max int (help "Maximum number of photos being taken"))
                  )
                  (photo_take_index 0)
                  (photo_take_max 0)
               )
               (learn_mode_result
                  (editor
                     (learn_mode_result
                        symbol
                        (list (fastlane check fail))
                        (help "result for learn mode")
                     )
                  )
                  (learn_mode_result check)
               )
               (points_awarded
                  (editor (points_awarded int (help "How many points we were awarded")))
                  (points_awarded 0)
               )
               (move_finished
                  (editor
                     (move_player_index int (help "which player index finished the move"))
                     (move_result
                        symbol
                        (list (FEEDBACK_STATES))
                        (help "how well the player did on this move")
                     )
                  )
                  (move_player_index 0)
                  (move_result move_perfect)
               )
               (best_move_rating
                  (editor
                     (best_move_rating
                        symbol
                        (list (FEEDBACK_STATES))
                        (help "best rating event for both players")
                     )
                  )
                  (best_move_rating move_perfect)
               )
               (player_join
                  (editor (player_join_index int (help "Index of player joining")))
                  (player_join_index 0)
               )
               (player_quit
                  (editor (player_quit_index int (help "Index of player quitting")))
                  (player_quit_index 0)
               )
               (setup_alert
                  (editor
                     (alert_type
                        symbol
                        (list (general fitness unlock server free4all none))
                        (help "The type for the current alert (none = hide)")
                     )
                     (alert_text string (help "Text to show for the current alert"))
                  )
                  (alert_type general)
                  (alert_text "")
               )
               (setup_0_alert
                  (editor
                     (alert_0_type
                        symbol
                        (list (general fitness unlock server free4all none))
                        (help "The type for the current alert (none = hide)")
                     )
                     (alert_0_text string (help "Text to show for the current alert"))
                  )
                  (alert_0_type general)
                  (alert_0_text "")
               )
               (setup_1_alert
                  (editor
                     (alert_1_type
                        symbol
                        (list (general fitness unlock server free4all none))
                        (help "The type for the current alert (none = hide)")
                     )
                     (alert_1_text string (help "Text to show for the current alert"))
                  )
                  (alert_1_type general)
                  (alert_1_text "")
               )
               skills_learn_earn_check
               skills_bonus_fasttrack_first
               skills_bonus_fasttrack_second
               skills_bonus_learn_complete
               skills_learn_fail_move
               skills_review
               skills_review_done
               skills_review_done_100_percent
               skills_learn
               skills_learn_done
               learn_result_fasttrack
               learn_result_passed
               learn_result_failed
               show_recap
               show_recap_final
               highlight_awards
               show_practice_options
               hide_practice_options
               invoke_practice_options
               deinvoke_practice_options
               show_loop_icon
               hide_loop_icon
               show_slow_icon
               hide_slow_icon
               show_microphone_icon
               hide_microphone_icon
               microphone_activity
               voice_commander_help
               voice_commander_help_hide
               voice_commander_help_bump
               show_voice_prompt
               voice_cancelled
               video_record_start
               video_record_end
               video_playback_start
               video_playback_pause
               video_playback_unpause
               video_playback_end
               camshot_changed
               post_move_finished
               (nav_highlight
                  (editor
                     (item_name symbol)
                     (item_index int)
                     (target_list object (class HamNavList))
                     (can_select bool)
                  )
                  (item_name '')
                  (item_index 0)
                  (target_list "")
                  (can_select TRUE)
               )
               (nav_highlight_settled
                  (editor
                     (item_name symbol)
                     (item_index int)
                     (target_list object (class HamNavList))
                     (can_select bool)
                  )
                  (item_name '')
                  (item_index 0)
                  (target_list "")
                  (can_select TRUE)
               )
               (nav_select
                  (editor
                     (item_name symbol)
                     (item_index int)
                     (target_list object (class HamNavList))
                     (can_select bool)
                  )
                  (item_name '')
                  (item_index 0)
                  (target_list "")
                  (can_select TRUE)
               )
               (nav_select_done
                  (editor
                     (item_name symbol)
                     (item_index int)
                     (target_list object (class HamNavList))
                     (can_select bool)
                  )
                  (item_name '')
                  (item_index 0)
                  (target_list "")
                  (can_select TRUE)
               )
               post_sides_switched
               show_char_projection
               hide_char_projection
               char_projection_move_active
               char_projection_move_inactive
               (db_overtake
                  (editor (player int (range 0 1)))
                  (player 0)
               )
               omg_hit
               omg_hit_gold
               (nar_play_crew_vo
                  (editor
                     (category symbol (list (omg_win encourage win lead)))
                     (crew
                        symbol
                        (list (crew01 crew02 crew03 crew04 crew05 crew06 crew07 crew08 crew09))
                     )
                  )
                  (category omg_win)
                  (crew crew01)
               )
               (finale_feedback
                  (editor
                     (player
                        int
                        (range 0 1)
                        (help "Show feedback for player 0 or player 1.")
                     )
                     (finale_feedback_state
                        int
                        (range -1 1)
                        (help
                           "player may be doing well (1) or poorly (-1).  A zero value means show the idle animation."
                        )
                     )
                  )
                  (player 0)
                  (finale_feedback_state 0)
               )
               practice_move_start
               practice_move_end
               eq_shift_even
               eq_shift_odd
            )
         )
      )
      (player_provider
         (editor
            (join_state
               int
               (list JOIN_STATE_LIST)
               (help "join state for the player")
            )
            (score
               int
               (range 0 1000000)
               (help "Score for the player")
            )
            (performance_state
               symbol
               (list (low high awesome))
               (help "Personal performance state")
            )
            (side
               int
               (list ("kSkeletonLeft" "kSkeletonRight"))
               (help "Which side the player is on")
            )
            (rating
               symbol
               (list (FEEDBACK_STATES))
               (help "Last move rating for this player")
            )
            (final_pose_rating
               symbol
               (list (FEEDBACK_STATES))
               (help "Final pose rating for this player")
            )
            (score_multiplier
               float
               (range 0 4)
               (help "Score multiplier for the player")
            )
            (num_perfect
               int
               (range 0 1000000)
               (help "Number of perfects for the player")
            )
            (num_awesome
               int
               (range 0 1000000)
               (help "Number of awesomes for the player")
            )
            (num_gold
               int
               (range 0 1000000)
               (help "Number of gold cards hit for the player")
            )
            (rating_frac
               float
               (range 0 1.0)
               (help "Current rating value which drives player spotlight")
            )
            (crew symbol (help "Which crew is being used by this player?"))
            (using_fitness bool (help "Is this player in fitness mode?"))
            (fitness_current_met
               float
               (help "How much is the player currently moving, in METs?")
            )
            (difficulty symbol (help "Which difficulty is being used by this player?"))
            (player_present bool (help "Is this player present?"))
            (player_tooclose bool (help "Is this player too close on top and bottom?"))
            (player_close_top bool (help "Is this player too close on top?"))
            (player_close_bottom bool (help "Is this player too close on bottom?"))
            (player_close_right bool (help "Is this player too close on right?"))
            (player_close_left bool (help "Is this player too close on left?"))
            (player_name string (help "Player name displayed under the depth buffer"))
            (identifying
               int
               (list IDENTITY_STATUS_LIST)
               (help "Is this player being identified?")
            )
            (in_freestyle bool (help "Is this player in freestyle?"))
         )
         (join_state kJoinPlaying)
         (side kSkeletonLeft)
         (score 0)
         (score_multiplier 1.0)
         (performance_state high)
         (performance_index 0)
         (start_score_move_index 0)
         (rating move_awesome)
         (final_pose_rating move_ok)
         (last_move_index -1)
         (tagged_moves ())
         (num_perfect 0)
         (num_awesome 0)
         (num_gold 0)
         (rating_frac 0.0)
         (crew crew01)
         (using_fitness FALSE)
         (fitness_current_met 0.0)
         (difficulty easy)
         (player_present FALSE)
         (player_tooclose FALSE)
         (player_close_top FALSE)
         (player_close_bottom FALSE)
         (player_close_right FALSE)
         (player_close_left FALSE)
         (player_name "")
         (identifying kIdentityStatus_None)
         (in_freestyle FALSE)
         (supported_events
            (
               (move_finished
                  (editor
                     (move_player_index int (help "which player index finished the move"))
                     (move_result
                        symbol
                        (list (FEEDBACK_STATES))
                        (help "how well the player did on this move")
                     )
                  )
                  (move_player_index 0)
                  (move_result move_perfect)
               )
               (player_join
                  (editor (player_join_index int (help "Index of player joining")))
                  (player_join_index 0)
               )
               (player_quit
                  (editor (player_quit_index int (help "Index of player quitting")))
                  (player_quit_index 0)
               )
               peak_start
               peak_stop
               (show_hud
                  (editor (animate bool (help "show with animating")))
                  (animate TRUE)
               )
               (hide_hud
                  (editor (animate bool (help "show with animating")))
                  (animate TRUE)
               )
               show_join_correction
               hide_join_correction
               count_in
               side_moved
            )
         )
      )
      (audio_channels
         (editor
            (channel0 float)
            (channel1 float)
            (channel2 float)
            (channel3 float)
            (channel4 float)
            (channel5 float)
            (channel6 float)
            (channel7 float)
         )
         (channel0 0.0)
         (channel1 0.0)
         (channel2 0.0)
         (channel3 0.0)
         (channel4 0.0)
         (channel5 0.0)
         (channel6 0.0)
         (channel7 0.0)
      )
   )
)