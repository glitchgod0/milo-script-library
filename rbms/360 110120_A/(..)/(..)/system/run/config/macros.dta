#ifdef TRUE
#else
#define FALSE
(0)
#define TRUE
(1)
#define kPlatformNone
(0)
#define kPlatformXbox
(2)
#define kPlatformPC
(3)
#define kPlatformPS3
(4)
#define kPlatformWii
(5)
#define kOldGfx
(0)
#define kNewGfx
(1)
#define kDataInt
(0)
#define kDataFloat
(1)
#define kDataVar
(2)
#define kDataFunc
(3)
#define kDataObject
(4)
#define kDataSymbol
(5)
#define kDataArray
(16)
#define kDataCommand
(17)
#define kDataString
(18)
#define kDataProperty
(19)
#define kMergeMerge
(0)
#define kMergeReplace
(1)
#define kMergeKeep
(2)
#define kLoadFront
(0)
#define kLoadBack
(1)
#define kLoadFrontStayBack
(2)
#define kLoadStayBack
(3)
#define kCopyDeep
(0)
#define kCopyShallow
(1)
#define kCopyFromMax
(2)
#define kTaskSeconds
(0)
#define kTaskBeats
(1)
#define kTaskUISeconds
(2)
#define kTaskTutorialSeconds
(3)
#define TASK_UNITS
(("kTaskSeconds"
      "kTaskBeats"
      "kTaskUISeconds"
      "kTaskTutorialSeconds"))
#define kSquareAspect
(0)
#define kRegularAspect
(1)
#define kWidescreenAspect
(2)
#define kLetterboxAspect
(3)
#define ASPECT_ENUM
(("kSquareAspect"
      "kRegularAspect"
      "kWidescreenAspect"
      "kLetterboxAspect"))
#define kProcessNone
(0)
#define kProcessWorld
(1)
#define kProcessPost
(2)
#define kProcessChar
(4)
#define kProcessPostChar
(6)
#define kProcessAll
(7)
#define kAnimRange
(0)
#define kAnimLoop
(1)
#define kAnimShuttle
(2)
#define ANIM_ENUM
(("kAnimRange"
      "kAnimLoop"
      "kAnimShuttle"))
#define kHighlightWireframe
(0)
#define kHighlightSphere
(1)
#define kHighlightNone
(2)
#define kHighlightWireframeWithNormals
(3)
#define HIGHLIGHT_ENUM
(("kHighlightWireframe"
      "kHighlightWireframeWithNormals"
      "kHighlightSphere"
      "kHighlightNone"))
#define k30_fps
(0)
#define k480_fpb
(1)
#define k30_fps_ui
(2)
#define k1_fpb
(3)
#define k30_fps_tutorial
(4)
#define RATE_ENUM
(("k30_fps"
      "k480_fpb"
      "k30_fps_ui"
      "k1_fpb"
      "k30_fps_tutorial"))
#define PI
(3.1415927)
#define kHugeFloat
(1.0e30)
#define kFirstFit
(0)
#define kBestFit
(1)
#define kLRUFit
(2)
#define kLastFit
(3)
#define kPad_L2
(0)
#define kPad_R2
(1)
#define kPad_L1
(2)
#define kPad_R1
(3)
#define kPad_Tri
(4)
#define kPad_Circle
(5)
#define kPad_X
(6)
#define kPad_Square
(7)
#define kPad_Select
(8)
#define kPad_L3
(9)
#define kPad_R3
(10)
#define kPad_Start
(11)
#define kPad_DUp
(12)
#define kPad_DRight
(13)
#define kPad_DDown
(14)
#define kPad_DLeft
(15)
#define kPad_LStickUp
(16)
#define kPad_LStickRight
(17)
#define kPad_LStickDown
(18)
#define kPad_LStickLeft
(19)
#define kPad_RStickUp
(20)
#define kPad_RStickRight
(21)
#define kPad_RStickDown
(22)
#define kPad_RStickLeft
(23)
#ifdef HX_PC
#define kPad_ConsoleButton
(24)
#define kPad_NumButtons
(25)
#else
#define kPad_NumButtons
(24)
#endif
#define kPad_Xbox_LT
(0)
#define kPad_Xbox_RT
(1)
#define kPad_Xbox_LB
(2)
#define kPad_Xbox_RB
(3)
#define kPad_Xbox_Y
(4)
#define kPad_Xbox_B
(5)
#define kPad_Xbox_A
(6)
#define kPad_Xbox_X
(7)
#define kPad_Xbox_LS
(9)
#define kPad_Xbox_RS
(10)
#define kAction_None
(0)
#define kAction_Confirm
(1)
#define kAction_Cancel
(2)
#define kAction_Option
(3)
#define kAction_Start
(4)
#define kAction_ViewModify
(5)
#define kAction_Up
(6)
#define kAction_Right
(7)
#define kAction_Down
(8)
#define kAction_Left
(9)
#define kAction_PageUp
(10)
#define kAction_PageDown
(11)
#define kAction_ExtendedOption1
(12)
#define kAction_ExtendedOption2
(13)
#define kAction_ShellOption
(14)
#define kAction_WiiHomeMenu
(15)
#ifdef HX_WII
#define kAction_Option1
(16)
#endif
#define kLeftAnalog
(0)
#define kRightAnalog
(1)
#define kJoypadNone
(0)
#define kJoypadDigital
(1)
#define kJoypadAnalog
(2)
#define kJoypadDualShock
(3)
#define kJoypadMidi
(4)
#define kJoypadXboxHxGuitar
(5)
#define kJoypadXboxHxGuitarRb2
(6)
#define kJoypadXboxRoGuitar
(7)
#define kJoypadXboxDrums
(8)
#define kJoypadXboxDrumsRb2
(9)
#define kJoypadXboxRoDrums
(10)
#define kJoypadXboxStageKit
(11)
#define kJoypadPs3HxGuitar
(12)
#define kJoypadPs3HxGuitarRb2
(13)
#define kJoypadPs3HxDrums
(14)
#define kJoypadPs3HxDrumsRb2
(15)
#define kJoypadPs3RoGuitar
(16)
#define kJoypadPs3RoDrums
(17)
#define kJoypadPs3KonamiDrums
(18)
#define kJoypadWiiCore
(19)
#define kJoypadWiiFS
(20)
#define kJoypadWiiClassic
(21)
#define kJoypadWiiGamecube
(22)
#define kJoypadWiiGuitar
(23)
#define kJoypadWiiDrums
(24)
#define kJoypadWiiHxGuitar
(25)
#define kJoypadWiiHxGuitarRb2
(26)
#define kJoypadWiiHxDrums
(27)
#define kJoypadWiiHxDrumsRb2
(28)
#define kJoypadXboxCoreGuitar
(29)
#define kJoypadXboxButtonGuitar
(30)
#define kJoypadXboxRealGuitar22Fret
(31)
#define kJoypadXboxMidiBoxKeyboard
(32)
#define kJoypadXboxMidiBoxDrums
(33)
#define kJoypadXboxKeytar
(34)
#define kJoypadPs3CoreGuitar
(35)
#define kJoypadPs3ButtonGuitar
(36)
#define kJoypadPs3RealGuitar22Fret
(37)
#define kJoypadPs3MidiBoxKeyboard
(38)
#define kJoypadPs3MidiBoxDrums
(39)
#define kJoypadPs3Keytar
(40)
#define kJoypadWiiCoreGuitar
(41)
#define kJoypadWiiButtonGuitar
(42)
#define kJoypadWiiRealGuitar22Fret
(43)
#define kJoypadWiiMidiBoxKeyboard
(44)
#define kJoypadWiiMidiBoxDrums
(45)
#define kJoypadWiiKeytar
(46)
#define kJoypadNumTypes
(47)
#define kGame
(0)
#define kVCal
(1)
#define kACal
(2)
#define kPractice90
(3)
#define kPractice80
(4)
#define kPractice70
(5)
#define kNumLagContexts
(6)
#define kJoypadAccelQuery
(0)
#define kJoypadAccelDisableAll
(1)
#define kJoypadAccelSetXOnly
(3)
#define kJoypadAccelSetYOnly
(5)
#define kJoypadAccelSetXYOnly
(7)
#define kJoypadAccelSetZOnly
(9)
#define kJoypadAccelSetXZOnly
(11)
#define kJoypadAccelSetYZOnly
(13)
#define kJoypadAccelSetEnableAll
(15)
#define kJoypadCalbertOff
(0)
#define kJoypadCalbertPhoto
(1)
#define kJoypadCalbertAudio
(2)
#define kJoypadCalbertBothOn
(254)
#define KB_ENTER
(10)
#define KB_BACKSPACE
(8)
#define KB_TAB
(9)
#define KB_SPACE
(32)
#define KB_a
(97)
#define KB_b
(98)
#define KB_c
(99)
#define KB_d
(100)
#define KB_e
(101)
#define KB_f
(102)
#define KB_g
(103)
#define KB_h
(104)
#define KB_i
(105)
#define KB_j
(106)
#define KB_k
(107)
#define KB_l
(108)
#define KB_m
(109)
#define KB_n
(110)
#define KB_o
(111)
#define KB_p
(112)
#define KB_q
(113)
#define KB_r
(114)
#define KB_s
(115)
#define KB_t
(116)
#define KB_u
(117)
#define KB_v
(118)
#define KB_w
(119)
#define KB_x
(120)
#define KB_y
(121)
#define KB_z
(122)
#define KB_CAP_LOCK
(290)
#define KB_NUM_LOCK
(291)
#define KB_SCROLL_LOCK
(292)
#define KB_PRINT
(300)
#define KB_PAUSE
(301)
#define KB_ESCAPE
(302)
#define KB_INSERT
(310)
#define KB_DELETE
(311)
#define KB_HOME
(312)
#define KB_END
(313)
#define KB_PAGE_UP
(314)
#define KB_PAGE_DOWN
(315)
#define KB_LEFT
(320)
#define KB_RIGHT
(321)
#define KB_UP
(322)
#define KB_DOWN
(323)
#define KB_F1
(401)
#define KB_F2
(402)
#define KB_F3
(403)
#define KB_F4
(404)
#define KB_F5
(405)
#define KB_F6
(406)
#define KB_F7
(407)
#define KB_F8
(408)
#define KB_F9
(409)
#define KB_F10
(410)
#define KB_F11
(411)
#define KB_F12
(412)
#define kMCNoError
(0)
#define kMCNoCard
(1)
#define kMCNotFormatted
(2)
#define kMCDifferentCard
(3)
#define kMCReadWriteFailed
(4)
#define kMCCorrupt
(5)
#define kMCNotEnoughSpace
(6)
#define kMCFileExists
(7)
#define kMCFileNotFound
(8)
#define kMCMultipleFilesFound
(9)
#define kMCObsoleteVersion
(10)
#define kMCNewerVersion
(11)
#define kMCGeneralError
(12)
#define kMCUnsupported
(13)
#define kMCAlreadyFormatted
(14)
#define kMCInsufficientInodes
(15)
#define kMCSystemCorrupt
(16)
#define kMCAccessError
(17)
#define kMCMaxedSysMem
(18)
#define kMCSystemMemCorrupt
(19)
#define kMCUnknownError
(20)
#define kMCNoEntriesError
(21)
#define kMCNoFilesError
(22)
#define kMCNoPermission
(23)
#define kMCNotEnoughInodes
(24)
#define kMCNotOwner
(25)
#define kUserPrivilegeBlocked
(0)
#define kUserPrivilegeFriendsOnly
(1)
#define kUserPrivilegeAllowed
(2)
#define kOSNotifyTopRight
(0)
#define kOSNotifyBottomCenter
(1)
#define kRegionNone
(0)
#define kRegionNA
(1)
#define kRegionEurope
(2)
#define kRegionJapan
(3)
#define kNumRegions
(4)
#define k1KHz
(300000)
#define k2KHz
(150000)
#define k4KHz
(75000)
#define k10KHz
(30000)
#define k20KHz
(15000)
#define kFXModeOff
(0)
#define kFXModeRoom
(1)
#define kFXModeSmallStudio
(2)
#define kFXModeMedStudio
(3)
#define kFXModeLargeStudio
(4)
#define kFXModeHall
(5)
#define kFXModeSpace
(6)
#define kFXModeEcho
(7)
#define kFXModeDelay
(8)
#define kFXModePipe
(9)
#define kFXCoreNone
(-1)
#define kFXCore0
(0)
#define kFXCore1
(1)
#define FX_CORES
(("kFXCoreNone"
      "kFXCore0"
      "kFXCore1"))
#define kAttackLinear
(0)
#define kAttackExp
(1)
#define ATTACK_MODES
(("kAttackLinear"
      "kAttackExp"))
#define kSustainLinInc
(0)
#define kSustainLinDec
(2)
#define kSustainExpInc
(4)
#define kSustainExpDec
(6)
#define SUSTAIN_MODES
(("kSustainLinInc"
      "kSustainLinDec"
      "kSustainExpInc"
      "kSustainExpDec"))
#define kReleaseLinear
(0)
#define kReleaseExp
(1)
#define RELEASE_MODES
(("kReleaseLinear"
      "kReleaseExp"))
#define kSendAll
(0)
#define kSendCenter
(1)
#define kSendStereo
(2)
#define kVolumeEmpty
(0)
#define kVolumeTriangles
(1)
#define kVolumeBSP
(2)
#define kVolumeBox
(3)
#define VOLUME_ENUM
(("kVolumeEmpty"
      "kVolumeTriangles"
      "kVolumeBSP"
      "kVolumeBox"))
#define kMutableNone
(0)
#define kMutableVerts
(31)
#define kMutableFaces
(32)
#define kMutableAll
(63)
#define kConstraintNone
(0)
#define kConstraintLocalRotate
(1)
#define kConstraintParentWorld
(2)
#define kConstraintLookAtTarget
(3)
#define kConstraintShadowTarget
(4)
#define kConstraintBillboardZ
(5)
#define kConstraintBillboardXZ
(6)
#define kConstraintBillboardXYZ
(7)
#define kConstraintFastBillboardXYZ
(8)
#define kConstraintTargetWorld
(9)
#define CONSTRAINT_ENUM
(("kConstraintNone"
      "kConstraintLocalRotate"
      "kConstraintParentWorld"
      "kConstraintLookAtTarget"
      "kConstraintShadowTarget"
      "kConstraintBillboardZ"
      "kConstraintBillboardXZ"
      "kConstraintBillboardXYZ"
      "kConstraintFastBillboardXYZ"
      "kConstraintTargetWorld"))
#define COPY_DEFAULT
(0)
#define COPY_LITKEYS
(2)
#define COPY_MATKEYS
(4)
#define COPY_MESHGEOM
(8)
#define COPY_SHARETRANS
(16)
#define COPY_MESHKEYS
(64)
#define COPY_PARTKEYS
(128)
#define COPY_TRANSKEYS
(256)
#define COPY_CHILDREN
(512)
#define COPY_PARTS
(1024)
#define COPY_CAMKEYS
(2048)
#define COPY_ENVKEYS
(4096)
#define COPY_BASEONLY
(8192)
#define kLeft
(1)
#define kCenter
(2)
#define kRight
(4)
#define kTop
(16)
#define kMiddle
(32)
#define kBottom
(64)
#define kTopLeft
(17)
#define kTopCenter
(18)
#define kTopRight
(20)
#define kMiddleLeft
(33)
#define kMiddleCenter
(34)
#define kMiddleRight
(36)
#define kBottomLeft
(65)
#define kBottomCenter
(66)
#define kBottomRight
(68)
#define kCapsModeNone
(0)
#define kForceLower
(1)
#define kForceUpper
(2)
#define kTexRegular
(1)
#define kTexRendered
(2)
#define kTexMovie
(4)
#define kTexBackBuffer
(8)
#define kTexFrontBuffer
(24)
#define kTexRenderedNoZ
(34)
#define kLightPoint
(0)
#define kLightDirectional
(1)
#define kLightProjected
(2)
#define kLightShadowRef
(3)
#define LIGHT_TYPE_ENUM
((("kLightPoint"
         "A positional light with fall-off")
      ("kLightDirectional"
         "A directional light")
      ("kLightProjected"
         "A projected light")
      ("kLightShadowRef"
         "A shadow reference light to indicate self-shadow direction")))
#define kLightAdd
(0)
#define kLightMultiply
(1)
#define LIGHT_BLEND_ENUM
((("kLightAdd"
         "Projected light will add light to the scene")
      ("kLightMultiply"
         "Projected light will multiply shadows with the scene")))
#define kBeamConic
(0)
#define kBeamRect
(1)
#define kBeamSheet
(2)
#define kBeamQuadXYZ
(3)
#define kBeamQuadZ
(4)
#define kBlendEaseInAndOut
(0)
#define kBlendEaseIn
(1)
#define kBlendEaseOut
(2)
#define BLEND_EASE
((("kBlendEaseInAndOut"
         "blend in and out the same amount")
      ("kBlendEaseIn"
         "slow rate of change, then fast")
      ("kBlendEaseOut"
         "fast rate of change, then slow")))
#define kCrowdRotateNone
(0)
#define kCrowdRotateFace
(1)
#define kCrowdRotateAway
(2)
#define CROWD_ROTATE
((("kCrowdRotateNone"
         "Face along the placement mesh, or along focus, if set")
      ("kCrowdRotateFace"
         "Face towards the camera")
      ("kCrowdRotateAway"
         "Face away from the camera")))
#define kPresetKeyframeFirst
(0)
#define kPresetKeyframeNext
(1)
#define kPresetKeyframePrev
(2)
#define PRESET_KEYFRAMES
(next prev first none)
#define kBlendDest
(0)
#define kBlendSrc
(1)
#define kBlendAdd
(2)
#define kBlendSrcAlpha
(3)
#define kBlendSrcAlphaAdd
(4)
#define kBlendSubtract
(5)
#define kBlendMultiply
(6)
#define kPreMultAlpha
(7)
#define BLEND_ENUM
((("kBlendDest"
         "Don't show this material at all; just show the frame buffer")
      ("kBlendSrc"
         "Don't blend this material at all")
      ("kBlendAdd"
         "Output is material + frame buffer")
      ("kBlendSrcAlpha"
         "Output is (material x mat alpha) + (frame buffer x (1 - mat alpha))")
      ("kBlendSrcAlphaAdd"
         "Output is (material x mat alpha) + frame buffer")
      ("kBlendSubtract"
         "Output is frame buffer - material")
      ("kBlendMultiply"
         "Output is frame buffer x material")
      ("kPreMultAlpha"
         "Output is material + (frame buffer x (1 - mat alpha)")))
#define kZModeDisable
(0)
#define kZModeNormal
(1)
#define kZModeTransparent
(2)
#define kZModeForce
(3)
#define kZModeDecal
(4)
#define ZMODE_ENUM
((("kZModeDisable"
         "always draw but don't update z-buffer")
      ("kZModeNormal"
         "draw and update z-buffer if closer than z-buffer")
      ("kZModeTransparent"
         "draw if closer than or equal z-buffer but don't update z-buffer. Often used with SrcAlpha or Add blending so those objects don't occlude other similar objects")
      ("kZModeForce"
         "always draw and update z-buffer")
      ("kZModeDecal"
         "draw and update z-buffer if closer than or equal to z-buffer")))
#define kStencilIgnore
(0)
#define kStencilWrite
(1)
#define kStencilTest
(2)
#define STENCILMODE_ENUM
(("kStencilIgnore"
      "kStencilWrite"
      "kStencilTest"))
#define kTexWrapClamp
(0)
#define kTexWrapRepeat
(1)
#define kTexBorderBlack
(2)
#define kTexBorderWhite
(3)
#define kTexWrapMirror
(4)
#define TEXWRAP_ENUM
((("kTexWrapClamp"
         "UVs outside the range [0,1] are clamped")
      ("kTexWrapRepeat"
         "The image repeats itself across the surface")
      ("kTexBorderBlack"
         "texels outside the UV range [0,1] are black")
      ("kTexBorderWhite"
         "texels outside the UV range [0,1] are white")
      ("kTexWrapMirror"
         "The image repeats itself, but is flipped every other repetition")))
#define kTexGenNone
(0)
#define kTexGenXfm
(1)
#define kTexGenSphere
(2)
#define kTexGenProjected
(3)
#define kTexGenXfmOrigin
(4)
#define kTexGenEnviron
(5)
#define TEXGEN_ENUM
((("kTexGenNone"
         "use vertex UV unchanged")
      ("kTexGenXfm"
         "transform vertex UV about center with stage xfm")
      ("kTexGenSphere"
         "sphere map that rotates around object with camera, xfm is direction of map, fast on gs slow on cpu, flips at poles")
      ("kTexGenProjected"
         "project from direction of stage xfm in world coords")
      ("kTexGenXfmOrigin"
         "like Xfm but about origin rather than center")
      ("kTexGenEnviron"
         "reflection map, like sphere map but perspective correct and does not flip, fast on cpu but slow on gs")))
#define kShaderVariationNone
(0)
#define kShaderVariationSkin
(1)
#define kShaderVariationHair
(2)
#define SHADERVARIATION_ENUM
(("kShaderVariationNone"
      "kShaderVariationSkin"
      "kShaderVariationHair"))
#define kAOMethod_Disabled
(0)
#define kAOMethod_Standard
(1)
#define kAOMethod_Directional
(2)
#define AMBIENTOCCLUSIONMETHOD_ENUM
(("kAOMethod_Disabled"
      "kAOMethod_Standard"
      "kAOMethod_Directional"))
#define kNoLights
(0)
#define kDirLights
(1)
#define kTwoPointLights
(2)
#define kFourPointLights
(3)
#define kTriggerRandom
(0)
#define kTriggerSequence
(1)
#define TRIGGER_ORDER_ENUM
(("kTriggerRandom"
      "kTriggerSequence"))
#define kTriggerAnimNone
(0)
#define kTriggerAnimStart
(1)
#define kTriggerAnimEnd
(2)
#define kTriggerAnimFrame
(3)
#define TRIGGER_ANIM_ENUM
((("kTriggerAnimNone"
         "Do not trigger based on any Anim call")
      ("kTriggerAnimStart"
         "Trigger when StartAnim gets called (e.g. very start of a CamShot), will be Reset when EndAnim gets called")
      ("kTriggerAnimEnd"
         "Trigger when EndAnim gets called (e.g. very end of a CamShot)")
      ("kTriggerAnimFrame"
         "Trigger when frame crosses anim_frame (e.g. during a CamShot)")))
#define kHOTBlended
(0)
#define kHOTSolidRingsDepth
(1)
#define kHOTSolidRingsAlpha
(2)
#define POSTPROC_HALL_OF_TIME_ENUM
(("kHOTBlended"
      "kHOTSolidRingsDepth"
      "kHOTSolidRingsAlpha"))
#define kPropFloat
(0)
#define kPropColor
(1)
#define kPropObject
(2)
#define kPropBool
(3)
#define kPropQuat
(4)
#define kPropVector3
(5)
#define kPropSymbol
(6)
#define kPropStep
(0)
#define kPropLinear
(1)
#define kPropSpline
(2)
#define kPropSlerp
(3)
#define kPropHermite
(4)
#define kRecordRegular
(0)
#define kRecordCreated
(1)
#define kRecordDeleted
(2)
#define kNetUnreliable
(0)
#define kNetReliable
(1)
#define ADD_USER_RESULT_MSG
(add_user_result
   ($success))
#define NEW_REMOTE_USER_MSG
(new_remote_user
   ($user))
#define REMOVING_REMOTE_USER_MSG
(removing_remote_user
   ($user))
#define REMOTE_USER_LEFT_MSG
(remote_user_left
   ($user))
#define REMOTE_USER_UPDATED_MSG
(remote_user_updated
   ($user))
#define PROCESSED_JOIN_REQUEST_MSG
(processed_join_request
   ($accepted))
#define GAME_ENDED_MSG
(game_ended
   ($result))
#define INVITE_ACCEPTED_MSG
(invite_accepted
   ($pad_num $session_id $expired))
#define VIRTUAL_KEYBOARD_RESULT_MSG
(virtual_keyboard_result_msg
   ($ok $text))
#define UI_CHANGED_MSG
(ui_changed
   ($showing))
#ifdef HX_XBOX
#define KINECT_GUIDE_GESTURE_MSG
(kinect_guide_gesture
   ($engaged))
#endif
#define SIGNIN_CHANGED_MSG
(signin_changed
   ($signin_mask $signin_changed_mask))
#define BUTTON_DOWN_MSG
(button_down
   ($user $raw_button $action $pad_num))
#define BUTTON_UP_MSG
(button_up
   ($user $raw_button $action $pad_num))
#define JOYPAD_CONNECT_MSG
(joypad_connect
   ($user $connected))
#define KEY_MSG
(key
   ($key $shift $control $alt))
#define MEMCARD_RESULT_MSG
(memcard_result
   ($result))
#define SELECT_MSG
(component_select
   ($component $user))
#define SELECT_DONE_MSG
(component_select_done
   ($component $user))
#define FOCUS_MSG
(component_focus
   ($new_focus $old_focus $panel_dir $nav_type))
#define SCREEN_CHANGE_MSG
(screen_change
   ($new_screen $old_screen $back))
#define TRANSITION_COMPLETE_MSG
(transition_complete
   ($new_screen $old_screen))
#define TEXT_ENTRY_MSG
(text_entry
   ($component $text))
#define TEXT_ENTRY_INVALID_MSG
(text_entry_invalid
   ($component $bad_char $end_of_field))
#define SCROLL_SELECT_MSG
(component_scroll_select
   ($component $user $selected))
#define SCROLL_START_MSG
(component_scroll_start
   ($component $user))
#define SCROLL_MSG
(component_scroll
   ($component $user))
#define kFontQuality_AntiAliased
(0)
#define kFontQuality_ClearType
(1)
#define kFontQuality_Default
(2)
#define FONTQUALITY_ENUM
(("kFontQuality_AntiAliased"
      "kFontQuality_ClearType"
      "kFontQuality_Default"))
#define kFontSuperSample_None
(0)
#define kFontSuperSample_2x
(1)
#define kFontSuperSample_4x
(2)
#define FONTSUPERSAMPLE_ENUM
(("kFontSuperSample_None"
      "kFontSuperSample_2x"
      "kFontSuperSample_4x"))
#define kComponentNormal
(0)
#define kComponentFocused
(1)
#define kComponentDisabled
(2)
#define kComponentSelecting
(3)
#define kComponentSelected
(4)
#define kFitWrap
(0)
#define kFitStretched
(1)
#define kFitJust
(2)
#define kFitEllipsis
(3)
#define kUIListVertical
(0)
#define kUIListHorizontal
(1)
#define kUIListArrowBack
(0)
#define kUIListArrowNext
(1)
#define kUIListSlotDrawAlways
(0)
#define kUIListSlotDrawHighlight
(1)
#define kUIListSlotDrawNoHighlight
(2)
#define kUIListWidgetDrawAlways
(0)
#define kUIListWidgetDrawOnlyFocused
(1)
#define kUIListWidgetDrawNever
(2)
#define kUIListWidgetDrawFocusedOrManual
(3)
#define kExcitementBoot
(0)
#define kExcitementBad
(1)
#define kExcitementOkay
(2)
#define kExcitementGreat
(3)
#define kExcitementPeak
(4)
#define kNumExcitements
(5)
#define EXCITEMENT_ENUM
("kExcitementBoot"
   "kExcitementBad"
   "kExcitementOkay"
   "kExcitementGreat"
   "kExcitementPeak")
#define kNoFocus
(0)
#define kMaybeFocus
(1)
#define kAlwaysFocus
(2)
#define kLODPerFrame
(-1)
#define kLOD0
(0)
#define kLOD1
(1)
#define kLOD2
(2)
#define kCompressNone
(0)
#define kCompressRots
(1)
#define kCompressVects
(2)
#define kCompressQuats
(3)
#define kCompressionDistance
(0)
#define kCompressionAverageDistance
(1)
#define kCompressionSumDistances
(2)
#define kCompressionAccumulatedDistance
(3)
#define kCompressionDistanceAndSpeed
(4)
#define kPlayNow
(1)
#define kPlayNoBlend
(2)
#define kPlayFirst
(3)
#define kPlayLast
(4)
#define kPlayDirty
(8)
#define kPlayNoLoop
(16)
#define kPlayLoop
(32)
#define kPlayGraphLoop
(48)
#define kPlayNodeLoop
(64)
#define kPlayRealTime
(512)
#define kPlayUserTime
(1024)
#define kPlayBeatAlign1
(4096)
#define kPlayBeatAlign2
(8192)
#define kPlayBeatAlign4
(16384)
#define kPlayBeatAlign8
(32768)
#define kPlayNoDefault
(0)
#define kPlayBeatTime
(0)
#define PLAY_BLEND_FLAGS
(("kPlayNoDefault"
      "kPlayNow"
      "kPlayDirty"
      "kPlayNoBlend"
      "kPlayFirst"
      "kPlayLast"))
#define PLAY_LOOP_FLAGS
(("kPlayNoDefault"
      "kPlayNoLoop"
      "kPlayLoop"
      "kPlayGraphLoop"
      "kPlayNodeLoop"))
#define PLAY_TIME_FLAGS
(("kPlayBeatTime"
      "kPlayRealTime"
      "kPlayBeatAlign1"
      "kPlayBeatAlign2"
      "kPlayBeatAlign4"
      "kPlayBeatAlign8"))
#define kRotNone
(6)
#define kRotFull
(2)
#define kRotX
(3)
#define kRotY
(4)
#define kRotZ
(5)
#define kApplyBlend
(0)
#define kApplyAdd
(1)
#define kApplyRotateTo
(2)
#define kApplyBlendWeights
(3)
#define kCollidePlane
(0)
#define kCollideSphere
(1)
#define kCollideInsideSphere
(2)
#define kCollideCigar
(3)
#define kCollideInsideCigar
(4)
#define kFaceFxLipSyncRotX
(0)
#define kFaceFxLipSyncRotY
(1)
#define kFaceFxLipSyncRotZ
(2)
#define FACE_FX_LIP_SYNC_OPS
(("kFaceFxLipSyncRotX"
      "kFaceFxLipSyncRotY"
      "kFaceFxLipSyncRotZ"))
#define kDbSilence
(-96.0)
#define STD_EXTS
(.dtb .seq .mid .acp .acs .acg .fac .bik)
#define WII_EXTS
(.milo_wii .wav_wii .mogg .tpl .dat .txt .csv .arc .bmp_wii .png_wii .xbvwii)
#define XBOX_EXTS
(.milo_xbox '_keep*.png_xbox' '_keep*.bmp_xbox' .xbv .hxma .mogg xbox_shaders xbox_preinit_shaders)
#define PS3_EXTS
(.milo_ps3 '_keep*.png_ps3' '_keep*.bmp_ps3' .xbv .vpo .fpo .mogg ps3_shaders icon0.png ps3_preinit_shaders binkspurs.elf)
#define PC_EXTS
(.milo_pc '_keep*.png_pc' '_keep*.bmp_pc' .xbv .hxma .mogg pc_shaders)
#define STD_SKIP_DIRS
(CVS test tools)
#define SYSTEM_SUBDIRS
("../../system/run/bink"
   "../../system/run/char"
   "../../system/run/config"
   "../../system/run/shaders"
   "../../system/run/track"
   "../../system/run/ui"
   "../../system/run/world")
#define XBOX_HD_EXTS
(.dta .seq .mid .bin .milo .xnse .xbnk .xbv .mogg .png .png_xbox .bmp .ltf .acs .acg)
#define kTriggerNone
(0)
#define kTriggerShow
(1)
#define kTriggerHide
(2)
#define kTriggerEnable
(3)
#define kTriggerDisable
(4)
#define HIDE_IN_PROXY
((hide
      {!=
         $this
         {$this dir}}))
#define kStageOff
(0)
#define kStageOn
(1)
#define kStageBass
(2)
#define kStageDrumKick
(3)
#define kStageDrumSnare
(4)
#define kStageDrumCrash
(5)
#define kStageGuitar
(6)
#define kStageVocal
(7)
#define kStageSweepLeft_slow
(8)
#define kStageSweepLeft_medium
(9)
#define kStageSweepLeft_fast
(10)
#define kStageSweepRight_slow
(11)
#define kStageSweepRight_medium
(12)
#define kStageSweepRight_fast
(13)
#define kStageOne
(0)
#define kStageTwo
(1)
#define kStageFour
(2)
#define kStageOneOffset
(3)
#define kStageTwoOffset
(4)
#define kStageFourOffset
(5)
#define kStageAll
(6)
#define kStageStrobeOff
(0)
#define kStageStrobe6
(6)
#define kStageStrobe8
(8)
#define kStageStrobe10
(10)
#define kStageStrobe12
(12)
#define kGemTypeNormal
(0)
#define kGemTypeDoubler
(1)
#define kGemTypeCatcher
(2)
#define kPlayer1
(0)
#define kPlayer2
(1)
#define kPlayerNone
(-1)
#define kPlayerShared
(-2)
#define kMPGem1
(1)
#define kMPGem2
(2)
#define kMPGem3
(4)
#define kMPGem4
(8)
#define kMPGem5
(16)
#define kSinkModeHandle
(0)
#define kSinkModeExport
(1)
#define kSinkModeType
(2)
#define kSinkModeExportType
(3)
#define SINK_MODES
(("kSinkModeHandle"
      "does a Handle to the sink, this gets all c handlers, type handling, and exporting.")
   ("kSinkModeExport"
      "just Exports to the sink, so no c or type handling")
   ("kSinkModeType"
      "just calls HandleType, good if know that particular thing is only ever type handled.")
   ("kSinkModeExportType"
      "do type handling and exporting using Export, no C handling"))
#define kAudioDrums
(0)
#define kAudioGuitar
(1)
#define kAudioBass
(2)
#define kAudioVocals
(3)
#define kAudioKeys
(4)
#define kAudioFake
(5)
#define kTrackDrum
(0)
#define kTrackGuitar
(1)
#define kTrackBass
(2)
#define kTrackVocals
(3)
#define kTrackKeys
(4)
#define kTrackRealKeys
(5)
#define kTrackRealGuitar
(6)
#define kTrackRealGuitar22Fret
(7)
#define kTrackRealBass
(8)
#define kTrackRealBass22Fret
(9)
#define kTrackNone
(10)
#define kTrackPending
(11)
#define kTrackPendingVocals
(12)
#define TRACK_SYMBOLS
(drum guitar bass vocals keys real_keys real_guitar real_guitar_22 real_bass real_bass_22 none pending pending_vocals)
#define kFillsRegular
(0)
#define kFillsDeployGemAndDim
(1)
#define kFillsDeployGemAndInvisible
(2)
#define kStoreErrorSuccess
(0)
#define kStoreErrorNoContent
(1)
#define kStoreErrorLiveServer
(2)
#define kStoreErrorStoreServer
(3)
#define kStoreErrorSignedOut
(4)
#define kStoreErrorDroppedOut
(5)
#define kStoreErrorNoMetadata
(6)
#define kStoreErrorNoEthernetCable
(7)
#define kSTArtist
(0)
#define kSTPackName
(1)
#define kSTName
(2)
#define kSTDateReleased
(3)
#define kSTRank
(4)
#define kSTGenre
(5)
#define kSTLeftSide
(6)
#define kInstNone
(-1)
#define kInstGuitar
(0)
#define kInstDrum
(1)
#define kInstBass
(2)
#define kInstVocals
(3)
#define kInstKeys
(4)
#define kInstRealGuitar
(5)
#define kInstRealBass
(6)
#define kInstRealKeys
(7)
#define kImmediateWidget
(0)
#define kMultiMeshWidget
(1)
#define kTextWidget
(2)
#define kMatWidget
(3)
#define kGuideVertical
(0)
#define kGuideHorizontal
(1)
#define UIGUIDE_ENUM
(("kGuideVertical"
      "kGuideHorizontal"))
#define kPoolTriggerSequence
(0)
#define kPoolTriggerRandom
(1)
#define kPoolTriggerLoop
(2)
#define kSeqStop
(0)
#define kSeqReplay
(1)
#define kSeqStart
(2)
#define SEQ_COMMANDS_ENUM
(("kSeqStart"
      "kSeqStop"
      "kSeqReplay"))
#define kKeyboard_Normal
(0)
#define kKeyboard_Numeric
(1)
#define kBufferColor
(0)
#define kBufferDepth
(1)
#define kBufferPlayer
(2)
#define kBufferPlayerColor
(3)
#define kBufferNum
(4)
#define kStep
(0)
#define kLinear
(1)
#define kSpline
(2)
#define kSlerp
(3)
#define kHermite
(4)
#define kEaseIn
(5)
#define kEaseOut
(6)
#endif