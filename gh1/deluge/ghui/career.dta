{func is_updown_button
   ($button)
   {'||' {== $button kPad_DDown} {== $button kPad_DUp}}
}
#define VENUE_MAP_ARROW_MS (125)
#define VENUE_MAP_SCROLL_MS (250)
#define SEL_DIFFICULTY_COMMON (
   (navigator (vertical sd_diff1.btn sd_diff2.btn sd_diff3.btn sd_diff4.btn))
   (update_focus
      {$this set_focus
         {switch {$this last_difficulty}
            (kDifficultyEasy sd_diff1.btn)
            (kDifficultyMedium sd_diff2.btn)
            (kDifficultyHard sd_diff3.btn)
            (kDifficultyExpert sd_diff4.btn)
         }
      }
   )
   (set_difficulty
      ($component)
      {game set_difficulty
         {switch $component
            (sd_diff1.btn kDifficultyEasy)
            (sd_diff2.btn kDifficultyMedium)
            (sd_diff3.btn kDifficultyHard)
            (sd_diff4.btn kDifficultyExpert)
         }
      }
      {$this update_difficulty}
   )
   (SELECT_MSG {$this set_difficulty $component} kDataUnhandled)
)
{new_panel sel_difficulty
   SEL_DIFFICULTY_COMMON
   (enter {$this update_focus})
   (last_difficulty {game get_difficulty})
   (update_difficulty)
}
{new_panel sel_diff_career
   SEL_DIFFICULTY_COMMON
   (enter
      {sd_easy_status.lbl set_localized_text
         {campaign get_status_progress kDifficultyEasy}
      }
      {sd_med_status.lbl set_localized_text
         {campaign get_status_progress kDifficultyMedium}
      }
      {sd_hard_status.lbl set_localized_text
         {campaign get_status_progress kDifficultyHard}
      }
      {sd_expert_status.lbl set_localized_text
         {campaign get_status_progress kDifficultyExpert}
      }
      {$this update_focus}
   )
   (last_difficulty {campaign last_difficulty})
   (update_difficulty {campaign update_difficulty})
}
{new_gh_screen sel_difficulty
   (panels meta sel_diff_career helpbar)
   (focus sel_diff_career)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (SELECT_MSG
      {{ui panel sel_diff_career} set_difficulty $component}
      {if_else {campaign new_campaign}
         {ui goto_screen new_campaign}
         {do
            {campaign get_character_info}
            {ui goto_screen career}
         }
      }
      kDataUnhandled
   )
}
{new_gh_panel career
   (navigator
      (vertical cm_letsrock.btn cm_hero.btn cm_guitar.btn cm_store.btn)
   )
   (enter
      {$this set_focus cm_letsrock.btn}
      {cm_cash.lbl set_localized_text
         {sprintf {localize career_cash_format} {campaign cash}}
      }
      {cm_band.lbl set_localized_text
         {campaign profile_name {campaign profile_slot}}
      }
      {cm_score.lbl set_localized_text
         {sprintf {localize career_score_format} {campaign career_score}}
      }
      {cm_status.lbl set_text {campaign get_cur_status_sym}}
      {cm_career.lbl set_text {game get_difficulty_sym}}
      {if {== kDifficultyEasy {game get_difficulty}}
         {$this disable_component cm_store.btn}
      }
      {cm_cash.lbl set_showing {!= kDifficultyEasy {game get_difficulty}}}
      {cm_cash_title.lbl set_showing {!= kDifficultyEasy {game get_difficulty}}}
   )
   (SELECT_MSG
      {switch $component
         (cm_letsrock.btn
            {if_else {campaign is_unlocked small_club}
               {ui goto_screen sel_venue}
               {ui goto_screen sel_song}
            }
         )
         (cm_hero.btn {ui goto_screen sel_character_edit})
         (cm_guitar.btn {ui goto_screen sel_guitar_edit})
         (cm_store.btn {ui goto_screen store})
      }
   )
}
{new_gh_screen career
   (panels meta career helpbar)
   (focus career)
   (allow_back FALSE)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (enter {meta setup_career})
   (BUTTON_DOWN_MSG
      {if {meta is_back_button $button $player_num}
         {$this backwards_anim}
         {synth play_sequence button_back}
         {ui goto_screen main}
      }
      kDataUnhandled
   )
}
{new_gh_panel sel_character
   (navigator
      (vertical
         sc_char_metal.pic
         sc_char_classic.pic
         sc_char_alterna.pic
         sc_char_hair_metal.pic
         sc_char_punk.pic
         sc_char_nu_metal.pic
         sc_char_hiphop.pic
         sc_char_grim.pic
      )
   )
   (focus sc_char_metal.pic)
   (enter
      {animate_forever_30fps $this sel_character.view}
      {do
         (($character {game get_character}))
         {{ui panel charsys} show_char 0 $character}
         {sc_char_nm.lbl set_text $character}
         {sc_char_blurb.lbl set_localized_text
            {localize {sprint $character "_blurb"}}
         }
         {set $char_focus $character}
         {$this set_focus
            {sprint "sc_char_" $character ".pic"}
         }
      }
      {$this init_pic_state sc_char_metal.pic}
      {$this init_pic_state sc_char_classic.pic}
      {$this init_pic_state sc_char_alterna.pic}
      {$this init_pic_state sc_char_hair_metal.pic}
      {$this init_pic_state sc_char_punk.pic}
      {$this init_pic_state sc_char_nu_metal.pic}
      {$this init_pic_state sc_char_hiphop.pic}
      {$this init_pic_state sc_char_grim.pic}
   )
   (exit
      {if $char_focus
         {game set_character $char_focus}
      }
   )
   (sel_char_highlight_off
      {sc_char_alterna_focus.view set_showing FALSE}
      {sc_char_classic_focus.view set_showing FALSE}
      {sc_char_hair_metal_focus.view set_showing FALSE}
      {sc_char_hiphop_focus.view set_showing FALSE}
      {sc_char_metal_focus.view set_showing FALSE}
      {sc_char_nu_metal_focus.view set_showing FALSE}
      {sc_char_punk_focus.view set_showing FALSE}
      {sc_char_grim_focus.view set_showing FALSE}
   )
   (FOCUS_MSG
      {set $char_focus {$this char_name $new_focus}}
      {if $char_focus
         {$this sel_char_highlight_off}
         {{sprint
               "sc_char_"
               $char_focus
               "_focus.view"} set_showing
            TRUE
         }
         {sc_char_nm.lbl set_text $char_focus}
         {sc_char_blurb.lbl set_localized_text
            {localize {sprint $char_focus "_blurb"}}
         }
      }
      kDataUnhandled
   )
   (init_pic_state
      ($pic)
      {if {! {campaign is_unlocked {$this char_name $pic}}}
         {$this disable_component $pic}
      }
      TRUE
   )
   (char_name
      ($pic)
      {switch $pic
         (sc_char_metal.pic metal)
         (sc_char_classic.pic classic)
         (sc_char_alterna.pic alterna)
         (sc_char_hiphop.pic hiphop)
         (sc_char_punk.pic punk)
         (sc_char_nu_metal.pic nu_metal)
         (sc_char_hair_metal.pic hair_metal)
         (sc_char_grim.pic grim)
         0
      }
   )
   (BUTTON_UP_MSG
      {if {&& $char_focus {is_updown_button $button}}
         {game set_character $char_focus}
         {{ui panel charsys} show_char 0 $char_focus}
      }
      kDataUnhandled
   )
}
{new_charsys_panel charsys
   (char_config singleplayer)
   (exit_complete {$this delete_chars})
}
{new_panel sel_character_loading
   (poll
      {scl_loading.lbl set_showing {! {{ui panel charsys} are_chars_loaded}}}
   )
}
#define SEL_CHARACTER_COMMON (
   (panels meta sel_character charsys sel_character_loading helpbar)
   (focus sel_character)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
)
{new_panel new_campaign}
{new_gh_screen new_campaign
   (panels meta new_campaign helpbar)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
         )
      )
   )
   (BUTTON_DOWN_MSG
      {if {meta is_select_button $button $player_num}
         {synth play_sequence button_select}
         {ui goto_screen sel_character_new}
      }
      kDataUnhandled
   )
}
{new_gh_screen sel_character_new
   SEL_CHARACTER_COMMON
   (BUTTON_DOWN_MSG
      {if {meta is_select_button $button $player_num}
         {synth play_sequence button_select}
         {ui goto_screen sel_guitar}
      }
      kDataUnhandled
   )
}
{new_gh_screen sel_character_edit
   SEL_CHARACTER_COMMON
   (BUTTON_DOWN_MSG
      {if {meta is_select_button $button $player_num}
         {synth play_sequence button_select}
         {ui goto_screen career}
      }
      {if {meta is_back_button $button $player_num}
         {$this backwards_anim}
         {synth play_sequence button_back}
         {campaign set_character_info}
         {autosave_goto career}
      }
      kDataUnhandled
   )
}
{new_panel sel_guitar}
{new_guitar_display_panel guitar_display
   (object_name guitar_display)
   (force_exit TRUE)
   (enter {animate_forever_30fps $this guitar_display.view})
}
{new_guitar_select_panel input_guitar
   (object_name input_guitar)
   (rnd_file "")
}
#define SEL_GUITAR_COMMON (
   (panels meta sel_guitar guitar_display input_guitar helpbar)
   (focus input_guitar)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (enter
      {input_guitar set_skin_select 0 FALSE}
      {$this update_display}
   )
   (SCROLL_MSG {$this update_display} kDataUnhandled)
   (GH_SELECT_MSG
      {synth play_sequence button_select}
      {if_else {input_guitar is_skin_select 0}
         {do
            {campaign set_character_info}
            {autosave_goto career}
         }
         {if_else
            {>
               {input_guitar get_num_skins $player_num {game get_guitar}}
               1
            }
            {do
               {input_guitar set_skin_select 0 TRUE}
               {$this update_display}
            }
            {do
               {campaign set_character_info}
               {autosave_goto career}
            }
         }
      }
      kDataUnhandled
   )
   (deselect_skin
      {synth play_sequence button_back}
      {input_guitar set_skin_select 0 FALSE}
      {$this update_display}
   )
   (update_display
      {if_else {input_guitar is_skin_select 0}
         {do
            {sg_guitar_nm.lbl set_text {game get_guitar_skin}}
            {sg_guitar_desc.lbl set_text {game get_guitar_skin_desc}}
         }
         {do
            {sg_guitar_nm.lbl set_text {game get_guitar}}
            {sg_guitar_desc.lbl set_text {game get_guitar_desc}}
         }
      }
      {guitar_display show_guitar 0 {game get_guitar} {game get_guitar_skin}}
   )
)
{new_gh_screen sel_guitar
   SEL_GUITAR_COMMON
   (BUTTON_DOWN_MSG
      {if_else
         {&&
            {meta is_back_button $button $player_num}
            {input_guitar is_skin_select 0}
         }
         {$this deselect_skin}
         kDataUnhandled
      }
   )
}
{new_gh_screen sel_guitar_edit
   SEL_GUITAR_COMMON
   (BUTTON_DOWN_MSG
      {if {meta is_back_button $button $player_num}
         {if_else {input_guitar is_skin_select 0}
            {$this deselect_skin}
            {do
               {$this backwards_anim}
               {synth play_sequence button_back}
               {ui goto_screen career}
            }
         }
      }
      kDataUnhandled
   )
}
{new_charsys_panel char_store
   (rnd_file ghui/charsys.gh)
   (char_config store)
   (exit_complete {$this delete_chars})
}
{new_guitar_display_panel store_guitar_display
   (object_name store_guitar_display)
   (rnd_file ghui/guitar_display.gh)
   (rnd_name guitar_display)
   (config store)
   (enter {animate_forever_30fps $this guitar_display.view})
}
{new_store_panel store
   (object_name store)
   (navigator
      (vertical
         st_guitars.btn
         st_skins.btn
         st_songs.btn
         st_characters.btn
         st_videos.btn
      )
   )
   (focus st_guitars.btn)
   (retain_last_focus FALSE)
   (set_store_mode
      ($b)
      {song_provider set_store_mode $b}
      {character_provider set_store_mode $b}
   )
   (show_store_screen_1
      {$this set_focus {$this get_category_button}}
      {st_screen1.view set_showing TRUE}
      {st_screen2.view set_showing FALSE}
   )
   (show_store_screen_2
      {st_screen1.view set_showing FALSE}
      {st_screen2.view set_showing TRUE}
      {$this set_focus st_buy.btn}
      {$this set itemIdx 0}
   )
   (get_item_price {$this price {$this get category} {$this get_item_name}})
   (get_item_name {$store_item_provider get_symbol {$this get itemIdx}})
   (update_store_item_desc
      {st_item_name.lbl set_text
         {$store_item_provider get_text {$this get itemIdx}}
      }
      {st_item_desc.lbl set_text {sprintf "%s_shop_desc" {$this get_item_name}}}
      {st_cost.lbl set_localized_text {sprintf "$%d" {$this get_item_price}}}
   )
   (update_store_item_display
      {switch {$this get category}
         (character
            {{ui panel char_store} show_char
               0
               {character_provider get_symbol {$this get itemIdx}}
            }
         )
         (guitar
            {store_guitar_display show_guitar
               0
               {store_guitar_provider get_symbol {$this get itemIdx}}
               ''
            }
         )
         (skin
            {store_guitar_display show_guitar
               0
               {store_skin_provider get_guitar {$this get itemIdx}}
               {store_skin_provider get_symbol {$this get itemIdx}}
            }
         )
      }
      TRUE
   )
   (update_store_category_desc
      {st_blurb.lbl set_text {sprint {$this get category} _shop_desc}}
      {st_poster.pic set_tex_file
         {sprint "shop_" {$this get category} "_poster.png"}
      }
      {st_costrange.lbl set_localized_text
         {sprintf
            {localize category_cost}
            {store low_cost {$this get category}}
            {store high_cost {$this get category}}
         }
      }
   )
   (update_total_cash_display
      {st_cash.lbl set_localized_text
         {sprintf {localize store_cash_format} {campaign cash}}
      }
   )
   (enter
      {$this set_store_mode TRUE}
      {$this show_store_screen_1}
      {$this update_total_cash_display}
      {set $store_item_provider NULL}
      {{ui panel char_store} hide TRUE}
      {store_guitar_display hide TRUE}
   )
   (exit {$this set_store_mode FALSE})
   (poll
      {if {st_screen2.view showing}
         {st_loading.lbl set_showing
            {&&
               {== {$this get category} character}
               {! {{ui panel char_store} are_chars_loaded}}
            }
         }
         {st_sold.lbl set_showing {campaign is_unlocked {$this get_item_name}}}
      }
   )
   (SELECT_MSG
      {switch $component
         (st_guitars.btn
            {set $store_item_provider store_guitar_provider}
            {$this show_store_screen_2}
            {$this update_store_item_desc}
            {$this update_store_item_display}
            {store_guitar_display hide FALSE}
         )
         (st_skins.btn
            {set $store_item_provider store_skin_provider}
            {$this show_store_screen_2}
            {$this update_store_item_desc}
            {$this update_store_item_display}
            {store_guitar_display hide FALSE}
         )
         (st_songs.btn
            {set $store_item_provider song_provider}
            {$this show_store_screen_2}
            {$this update_store_item_desc}
         )
         (st_characters.btn
            {set $store_item_provider character_provider}
            {$this show_store_screen_2}
            {$this update_store_item_desc}
            {$this update_store_item_display}
            {{ui panel char_store} hide FALSE}
         )
         (st_videos.btn
            {set $store_item_provider {game video_provider}}
            {$this show_store_screen_2}
            {$this update_store_item_desc}
         )
         (st_buy.btn
            {if_else
               {&&
                  {! {campaign is_unlocked {$this get_item_name}}}
                  {>= {campaign cash} {$this get_item_price}}
               }
               {do
                  {campaign buy_item {$this get_item_name} {$this get_item_price}}
                  {$this update_total_cash_display}
                  {ui push_screen store_bought}
               }
               {play_sfx button_error}
            }
         )
      }
      kDataUnhandled
   )
   (FOCUS_MSG
      {do
         ($new_cat)
         {set $new_cat
            {switch $new_focus
               (st_guitars.btn guitar)
               (st_skins.btn skin)
               (st_songs.btn song)
               (st_characters.btn character)
               (st_videos.btn video)
            }
         }
         {if {!= $new_cat kDataUnhandled}
            {$this set category $new_cat}
            {$this update_store_category_desc}
         }
      }
      kDataUnhandled
   )
   (get_category_button
      {switch {$this get category}
         (guitar st_guitars.btn)
         (skin st_skins.btn)
         (song st_songs.btn)
         (character st_characters.btn)
         (video st_videos.btn)
         guitar
      }
   )
   (BUTTON_DOWN_MSG
      {if {'||' {== $button kPad_DUp} {== $button kPad_DDown}}
         {do
            ($increment ($index {$this get itemIdx}))
            {if_else {== $button kPad_DDown}
               {set $increment 1}
               {set $increment -1}
            }
            {set $index {'+' $increment {$this get itemIdx}}}
            {$this set itemIdx {mod $index {$store_item_provider list_length}}}
            {$this update_store_item_desc}
            {$this update_store_item_display}
         }
      }
      {if {meta is_back_button $button $player_num}
         {if_else {st_screen1.view showing}
            {do
               {{ui screen store} backwards_anim}
               {synth play_sequence button_back}
               {ui goto_screen career}
            }
            {do
               {{ui panel char_store} hide TRUE}
               {store_guitar_display hide TRUE}
               {$this show_store_screen_1}
            }
         }
      }
      kDataUnhandled
   )
}
{new_gh_screen store
   (panels meta store store_guitar_display char_store helpbar)
   (focus store)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
}
{new_panel store_bought (focus store_bought.btn)}
{new_gh_screen store_bought
   (panels store_bought)
   (focus store_bought)
   (allow_back FALSE)
   (animate_transition FALSE)
   (SELECT_MSG {ui pop_screen})
   (enter
      {store_bought.lbl set_text
         {sprintf "%s_bought_blurb" {store get category}}
      }
   )
}
{new_panel sel_venue
   (focus sv_basement.btn)
   (navigator
      (wrap FALSE)
      (vertical
         sv_arena.btn
         sv_fest.btn
         sv_theatre.btn
         sv_big_club.btn
         sv_small_club.btn
         sv_basement.btn
      )
   )
}
{new_gh_screen sel_venue
   (panels meta sel_venue helpbar)
   (focus sel_venue)
   (allow_back FALSE)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (venue_button
      ($venue)
      {sprintf "sv_%s.btn" $venue}
   )
   (enter
      {campaign foreach_venue $venue
         {do
            (
               ($button {$this venue_button $venue})
               ($unlocked {campaign is_unlocked $venue})
            )
            {if {game is_venue_available $venue}
               {$button set_state
                  {if_else $unlocked
                     kNormal
                     kDisabled
                  }
               }
            }
         }
      }
      {if {== 0 {song_provider get_quickplay}}
         {game set_career_venue}
      }
      {do
         (
            ($index {game get_venue_index})
            ($venue {game get_venue})
         )
         {$this set_focus {$this venue_button $venue}}
         {sv_map.view set_frame {'+' $index 1}}
      }
      {set $scrolldir 0}
   )
   (set_venue_map_frame
      ($frame)
      {$this anim_task
         sv_map.view
         VENUE_MAP_SCROLL_MS
         {sv_map.view frame}
         $frame
      }
   )
   (FOCUS_MSG
      {switch $new_focus
         (sv_basement.btn
            {$this set_venue_map_frame 1}
            {game set_venue basement}
            {if {== $scrolldir -1}
               {$this anim_task 'ui::sv_small_club_down.mnm' VENUE_MAP_ARROW_MS 0 4}
            }
         )
         (sv_small_club.btn
            {$this set_venue_map_frame 2}
            {game set_venue small_club}
         )
         (sv_big_club.btn
            {$this set_venue_map_frame 3}
            {game set_venue big_club}
         )
         (sv_theatre.btn
            {$this set_venue_map_frame 4}
            {game set_venue theatre}
         )
         (sv_fest.btn
            {$this set_venue_map_frame 5}
            {game set_venue fest}
         )
         (sv_arena.btn
            {$this set_venue_map_frame 6}
            {game set_venue arena}
            {if {== $scrolldir 1}
               {$this anim_task 'ui::sv_fest_up.mnm' VENUE_MAP_ARROW_MS 0 4}
            }
         )
      }
   )
   (SELECT_MSG
      {if_else $autosave_cheat
         {autosave_goto sel_song}
         {ui goto_screen sel_song}
      }
      kDataUnhandled
   )
   (BUTTON_DOWN_MSG
      {cond
         ({meta is_back_button $button $player_num}
            {$this backwards_anim}
            {synth play_sequence button_back}
            {ui goto_screen career}
         )
         ({== $button kPad_DUp}
            {set $scrolldir 1}
         )
         ({== $button kPad_DDown}
            {set $scrolldir -1}
         )
      }
      kDataUnhandled
   )
}
{new_gh_panel sel_song
   (focus ss_song.lst)
   (joypad
      (hold_ms 500)
      (repeat_ms 80)
   )
   (enter
      {$this set exiting_sel_song FALSE}
      {ss_song.lst set_provider song_provider}
   )
   (update_song_info
      {if {== 0 {song_provider get_quickplay}}
         {game set_career_song}
      }
      {ss_song.lst set_selected_pos {game get_song_index}}
      {meta_music_stop}
      {song_preview {game get_song}}
      {sel_song.view set_frame {$this get_scroll_frame}}
      {$this set old_scroll_pos {$this get_scroll_frame}}
   )
   (exit
      {$this set exiting_sel_song TRUE}
      {song_preview ''}
      {meta_music_start}
      {song_provider set_quickplay FALSE}
   )
   (set_quickplay
      {song_provider set_quickplay TRUE}
      {$this refresh}
   )
   (get_scroll_frame {ss_song.lst spaced_selected_pos})
   (poll
      {if {ss_song.lst scrolling}
         {do
            (
               ($old_scroll_pos {$this get old_scroll_pos})
               ($new_scroll_pos {$this get_scroll_frame})
            )
            {sel_song.view set_frame
               {'+'
                  $old_scroll_pos
                  {'*' {ss_song.lst scroll_percent} {- $new_scroll_pos $old_scroll_pos}}
               }
            }
         }
      }
   )
   (SCROLL_START_MSG {game set_song_index {ss_song.lst selected_pos}})
   (SCROLL_MSG
      {if_else $done
         {do
            (($new_scroll_pos {$this get_scroll_frame}))
            {sel_song.view set_frame $new_scroll_pos}
            {$this set old_scroll_pos $new_scroll_pos}
         }
         {song_preview ''}
      }
      kDataUnhandled
   )
   (BUTTON_DOWN_MSG
      {if {is_updown_button $button}
         {song_preview ''}
      }
      kDataUnhandled
   )
   (BUTTON_UP_MSG
      {if {&& {! {$this get exiting_sel_song}} {is_updown_button $button}}
         {song_preview {game get_song}}
      }
      kDataUnhandled
   )
   (refresh {ss_song.lst refresh})
   (beat_song
      {if {$this is_up}
         {do
            (
               ($index {ss_song.lst selected_pos})
               ($song {song_provider get_symbol $index})
            )
            {campaign beat_song $song}
            {$this refresh}
         }
      }
   )
}
{new_gh_screen sel_song
   (panels meta sel_song helpbar)
   (focus sel_song)
   (helpbar
      (default
         (
            (fret1 help_continue)
            (fret2 help_back)
            (strum help_updown)
         )
      )
   )
   (enter {{ui panel sel_song} update_song_info})
   (BUTTON_DOWN_MSG
      {if {meta is_back_button $button $player_num}
         {$this backwards_anim}
         {synth play_sequence button_back}
         {if_else {campaign is_unlocked small_club}
            {ui goto_screen sel_venue}
            {ui goto_screen career}
         }
      }
   )
   (SELECT_MSG
      {game set_multiplayer FALSE}
      {ui goto_screen loading}
      kDataUnhandled
   )
}